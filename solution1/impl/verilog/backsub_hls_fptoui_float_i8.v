// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.4
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module backsub_hls_fptoui_float_i8 (
        ap_clk,
        ap_rst,
        x,
        ap_return,
        ap_ce
);

parameter    ap_const_logic_1 = 1'b1;
parameter    ap_const_lv32_17 = 32'b10111;
parameter    ap_const_lv32_1E = 32'b11110;
parameter    ap_const_lv1_1 = 1'b1;
parameter    ap_const_lv9_181 = 9'b110000001;
parameter    ap_const_lv32_8 = 32'b1000;
parameter    ap_const_lv8_7F = 8'b1111111;
parameter    ap_const_logic_0 = 1'b0;

input   ap_clk;
input   ap_rst;
input  [31:0] x;
output  [7:0] ap_return;
input   ap_ce;

wire   [0:0] isNeg_fu_72_p3;
reg   [0:0] isNeg_reg_149;
reg   [0:0] tmp_109_reg_154;
reg   [7:0] tmp_17_reg_159;
wire   [31:0] p_Val2_s_fu_32_p1;
wire   [22:0] loc_V_1_fu_46_p1;
wire   [23:0] p_Result_s_fu_50_p3;
wire   [7:0] loc_V_fu_36_p4;
wire   [8:0] tmp_i_i_cast1_fu_62_p1;
wire   [8:0] sh_assign_fu_66_p2;
wire   [7:0] tmp_i_fu_80_p2;
wire  signed [8:0] tmp_i_cast_fu_86_p1;
wire   [8:0] sh_assign_1_fu_90_p3;
wire  signed [31:0] sh_assign_1_cast_fu_98_p1;
wire  signed [23:0] sh_assign_1_cast_cast_fu_102_p1;
wire   [53:0] tmp_8_i_fu_58_p1;
wire   [53:0] tmp_1_i_fu_106_p1;
wire   [23:0] tmp_2_i_fu_110_p2;
wire   [53:0] tmp_4_i_fu_116_p2;
wire   [7:0] tmp_fu_140_p1;




always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_ce)) begin
        isNeg_reg_149 <= sh_assign_fu_66_p2[ap_const_lv32_8];
        tmp_109_reg_154 <= tmp_2_i_fu_110_p2[ap_const_lv32_17];
        tmp_17_reg_159 <= {{tmp_4_i_fu_116_p2[ap_const_lv32_1E : ap_const_lv32_17]}};
    end
end

assign ap_return = ((isNeg_reg_149[0:0] === 1'b1) ? tmp_fu_140_p1 : tmp_17_reg_159);

assign isNeg_fu_72_p3 = sh_assign_fu_66_p2[ap_const_lv32_8];

assign loc_V_1_fu_46_p1 = p_Val2_s_fu_32_p1[22:0];

assign loc_V_fu_36_p4 = {{p_Val2_s_fu_32_p1[ap_const_lv32_1E : ap_const_lv32_17]}};

assign p_Result_s_fu_50_p3 = {{ap_const_lv1_1}, {loc_V_1_fu_46_p1}};

assign p_Val2_s_fu_32_p1 = x;

assign sh_assign_1_cast_cast_fu_102_p1 = $signed(sh_assign_1_fu_90_p3);

assign sh_assign_1_cast_fu_98_p1 = $signed(sh_assign_1_fu_90_p3);

assign sh_assign_1_fu_90_p3 = ((isNeg_fu_72_p3[0:0] === 1'b1) ? tmp_i_cast_fu_86_p1 : sh_assign_fu_66_p2);

assign sh_assign_fu_66_p2 = ($signed(ap_const_lv9_181) + $signed(tmp_i_i_cast1_fu_62_p1));

assign tmp_1_i_fu_106_p1 = $unsigned(sh_assign_1_cast_fu_98_p1);

assign tmp_2_i_fu_110_p2 = p_Result_s_fu_50_p3 >> sh_assign_1_cast_cast_fu_102_p1;

assign tmp_4_i_fu_116_p2 = tmp_8_i_fu_58_p1 << tmp_1_i_fu_106_p1;

assign tmp_8_i_fu_58_p1 = p_Result_s_fu_50_p3;

assign tmp_fu_140_p1 = tmp_109_reg_154;

assign tmp_i_cast_fu_86_p1 = $signed(tmp_i_fu_80_p2);

assign tmp_i_fu_80_p2 = (ap_const_lv8_7F - loc_V_fu_36_p4);

assign tmp_i_i_cast1_fu_62_p1 = loc_V_fu_36_p4;


endmodule //backsub_hls_fptoui_float_i8

