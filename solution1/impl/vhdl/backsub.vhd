-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2015.4
-- Copyright (C) 2015 Xilinx Inc. All rights reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity backsub is
generic (
    C_M_AXI_GMEM_ADDR_WIDTH : INTEGER := 32;
    C_M_AXI_GMEM_ID_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_AWUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_DATA_WIDTH : INTEGER := 32;
    C_M_AXI_GMEM_WUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_ARUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_RUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_BUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_OFFSET_ADDR_WIDTH : INTEGER := 32;
    C_M_AXI_GMEM_OFFSET_ID_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_OFFSET_AWUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_OFFSET_DATA_WIDTH : INTEGER := 32;
    C_M_AXI_GMEM_OFFSET_WUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_OFFSET_ARUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_OFFSET_RUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_OFFSET_BUSER_WIDTH : INTEGER := 1;
    C_S_AXI_AXILITES_ADDR_WIDTH : INTEGER := 6;
    C_S_AXI_AXILITES_DATA_WIDTH : INTEGER := 32;
    C_S_AXI_CRTL_BUS_ADDR_WIDTH : INTEGER := 6;
    C_S_AXI_CRTL_BUS_DATA_WIDTH : INTEGER := 32;
    C_M_AXI_GMEM_PROT_VALUE : INTEGER := 0;
    C_M_AXI_GMEM_CACHE_VALUE : INTEGER := 3;
    C_M_AXI_GMEM_OFFSET_USER_VALUE : INTEGER := 0;
    C_M_AXI_GMEM_USER_VALUE : INTEGER := 0;
    C_M_AXI_GMEM_OFFSET_PROT_VALUE : INTEGER := 0;
    C_M_AXI_GMEM_OFFSET_CACHE_VALUE : INTEGER := 3 );
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    m_axi_gmem_AWVALID : OUT STD_LOGIC;
    m_axi_gmem_AWREADY : IN STD_LOGIC;
    m_axi_gmem_AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_ADDR_WIDTH-1 downto 0);
    m_axi_gmem_AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_ID_WIDTH-1 downto 0);
    m_axi_gmem_AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_AWUSER_WIDTH-1 downto 0);
    m_axi_gmem_WVALID : OUT STD_LOGIC;
    m_axi_gmem_WREADY : IN STD_LOGIC;
    m_axi_gmem_WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_DATA_WIDTH-1 downto 0);
    m_axi_gmem_WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_DATA_WIDTH/8-1 downto 0);
    m_axi_gmem_WLAST : OUT STD_LOGIC;
    m_axi_gmem_WID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_ID_WIDTH-1 downto 0);
    m_axi_gmem_WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_WUSER_WIDTH-1 downto 0);
    m_axi_gmem_ARVALID : OUT STD_LOGIC;
    m_axi_gmem_ARREADY : IN STD_LOGIC;
    m_axi_gmem_ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_ADDR_WIDTH-1 downto 0);
    m_axi_gmem_ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_ID_WIDTH-1 downto 0);
    m_axi_gmem_ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_ARUSER_WIDTH-1 downto 0);
    m_axi_gmem_RVALID : IN STD_LOGIC;
    m_axi_gmem_RREADY : OUT STD_LOGIC;
    m_axi_gmem_RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_DATA_WIDTH-1 downto 0);
    m_axi_gmem_RLAST : IN STD_LOGIC;
    m_axi_gmem_RID : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_ID_WIDTH-1 downto 0);
    m_axi_gmem_RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_RUSER_WIDTH-1 downto 0);
    m_axi_gmem_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_BVALID : IN STD_LOGIC;
    m_axi_gmem_BREADY : OUT STD_LOGIC;
    m_axi_gmem_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_BID : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_ID_WIDTH-1 downto 0);
    m_axi_gmem_BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_BUSER_WIDTH-1 downto 0);
    m_axi_gmem_offset_AWVALID : OUT STD_LOGIC;
    m_axi_gmem_offset_AWREADY : IN STD_LOGIC;
    m_axi_gmem_offset_AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_OFFSET_ADDR_WIDTH-1 downto 0);
    m_axi_gmem_offset_AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_OFFSET_ID_WIDTH-1 downto 0);
    m_axi_gmem_offset_AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem_offset_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_offset_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_offset_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_offset_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_offset_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_offset_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_offset_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_offset_AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_OFFSET_AWUSER_WIDTH-1 downto 0);
    m_axi_gmem_offset_WVALID : OUT STD_LOGIC;
    m_axi_gmem_offset_WREADY : IN STD_LOGIC;
    m_axi_gmem_offset_WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_OFFSET_DATA_WIDTH-1 downto 0);
    m_axi_gmem_offset_WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_OFFSET_DATA_WIDTH/8-1 downto 0);
    m_axi_gmem_offset_WLAST : OUT STD_LOGIC;
    m_axi_gmem_offset_WID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_OFFSET_ID_WIDTH-1 downto 0);
    m_axi_gmem_offset_WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_OFFSET_WUSER_WIDTH-1 downto 0);
    m_axi_gmem_offset_ARVALID : OUT STD_LOGIC;
    m_axi_gmem_offset_ARREADY : IN STD_LOGIC;
    m_axi_gmem_offset_ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_OFFSET_ADDR_WIDTH-1 downto 0);
    m_axi_gmem_offset_ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_OFFSET_ID_WIDTH-1 downto 0);
    m_axi_gmem_offset_ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem_offset_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_offset_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_offset_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_offset_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_offset_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_offset_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_offset_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_offset_ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_OFFSET_ARUSER_WIDTH-1 downto 0);
    m_axi_gmem_offset_RVALID : IN STD_LOGIC;
    m_axi_gmem_offset_RREADY : OUT STD_LOGIC;
    m_axi_gmem_offset_RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_OFFSET_DATA_WIDTH-1 downto 0);
    m_axi_gmem_offset_RLAST : IN STD_LOGIC;
    m_axi_gmem_offset_RID : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_OFFSET_ID_WIDTH-1 downto 0);
    m_axi_gmem_offset_RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_OFFSET_RUSER_WIDTH-1 downto 0);
    m_axi_gmem_offset_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_offset_BVALID : IN STD_LOGIC;
    m_axi_gmem_offset_BREADY : OUT STD_LOGIC;
    m_axi_gmem_offset_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_offset_BID : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_OFFSET_ID_WIDTH-1 downto 0);
    m_axi_gmem_offset_BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_OFFSET_BUSER_WIDTH-1 downto 0);
    frame_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    frame_EN_A : OUT STD_LOGIC;
    frame_WEN_A : OUT STD_LOGIC_VECTOR (1 downto 0);
    frame_Din_A : OUT STD_LOGIC_VECTOR (15 downto 0);
    frame_Dout_A : IN STD_LOGIC_VECTOR (15 downto 0);
    frame_Clk_A : OUT STD_LOGIC;
    frame_Rst_A : OUT STD_LOGIC;
    frame_Addr_B : OUT STD_LOGIC_VECTOR (31 downto 0);
    frame_EN_B : OUT STD_LOGIC;
    frame_WEN_B : OUT STD_LOGIC_VECTOR (1 downto 0);
    frame_Din_B : OUT STD_LOGIC_VECTOR (15 downto 0);
    frame_Dout_B : IN STD_LOGIC_VECTOR (15 downto 0);
    frame_Clk_B : OUT STD_LOGIC;
    frame_Rst_B : OUT STD_LOGIC;
    s_axi_AXILiteS_AWVALID : IN STD_LOGIC;
    s_axi_AXILiteS_AWREADY : OUT STD_LOGIC;
    s_axi_AXILiteS_AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_AXILITES_ADDR_WIDTH-1 downto 0);
    s_axi_AXILiteS_WVALID : IN STD_LOGIC;
    s_axi_AXILiteS_WREADY : OUT STD_LOGIC;
    s_axi_AXILiteS_WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_AXILITES_DATA_WIDTH-1 downto 0);
    s_axi_AXILiteS_WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_AXILITES_DATA_WIDTH/8-1 downto 0);
    s_axi_AXILiteS_ARVALID : IN STD_LOGIC;
    s_axi_AXILiteS_ARREADY : OUT STD_LOGIC;
    s_axi_AXILiteS_ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_AXILITES_ADDR_WIDTH-1 downto 0);
    s_axi_AXILiteS_RVALID : OUT STD_LOGIC;
    s_axi_AXILiteS_RREADY : IN STD_LOGIC;
    s_axi_AXILiteS_RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_AXILITES_DATA_WIDTH-1 downto 0);
    s_axi_AXILiteS_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    s_axi_AXILiteS_BVALID : OUT STD_LOGIC;
    s_axi_AXILiteS_BREADY : IN STD_LOGIC;
    s_axi_AXILiteS_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    s_axi_CRTL_BUS_AWVALID : IN STD_LOGIC;
    s_axi_CRTL_BUS_AWREADY : OUT STD_LOGIC;
    s_axi_CRTL_BUS_AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CRTL_BUS_ADDR_WIDTH-1 downto 0);
    s_axi_CRTL_BUS_WVALID : IN STD_LOGIC;
    s_axi_CRTL_BUS_WREADY : OUT STD_LOGIC;
    s_axi_CRTL_BUS_WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_CRTL_BUS_DATA_WIDTH-1 downto 0);
    s_axi_CRTL_BUS_WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_CRTL_BUS_DATA_WIDTH/8-1 downto 0);
    s_axi_CRTL_BUS_ARVALID : IN STD_LOGIC;
    s_axi_CRTL_BUS_ARREADY : OUT STD_LOGIC;
    s_axi_CRTL_BUS_ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CRTL_BUS_ADDR_WIDTH-1 downto 0);
    s_axi_CRTL_BUS_RVALID : OUT STD_LOGIC;
    s_axi_CRTL_BUS_RREADY : IN STD_LOGIC;
    s_axi_CRTL_BUS_RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_CRTL_BUS_DATA_WIDTH-1 downto 0);
    s_axi_CRTL_BUS_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    s_axi_CRTL_BUS_BVALID : OUT STD_LOGIC;
    s_axi_CRTL_BUS_BREADY : IN STD_LOGIC;
    s_axi_CRTL_BUS_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    interrupt : OUT STD_LOGIC );
end;


architecture behav of backsub is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "backsub,hls_ip_2015_4,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.750000,HLS_SYN_LAT=172839,HLS_SYN_TPT=none,HLS_SYN_MEM=192,HLS_SYN_DSP=13,HLS_SYN_FF=9065,HLS_SYN_LUT=12280}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_st1_fsm_0 : STD_LOGIC_VECTOR (64 downto 0) := "00000000000000000000000000000000000000000000000000000000000000001";
    constant ap_ST_st2_fsm_1 : STD_LOGIC_VECTOR (64 downto 0) := "00000000000000000000000000000000000000000000000000000000000000010";
    constant ap_ST_st3_fsm_2 : STD_LOGIC_VECTOR (64 downto 0) := "00000000000000000000000000000000000000000000000000000000000000100";
    constant ap_ST_st4_fsm_3 : STD_LOGIC_VECTOR (64 downto 0) := "00000000000000000000000000000000000000000000000000000000000001000";
    constant ap_ST_st5_fsm_4 : STD_LOGIC_VECTOR (64 downto 0) := "00000000000000000000000000000000000000000000000000000000000010000";
    constant ap_ST_st6_fsm_5 : STD_LOGIC_VECTOR (64 downto 0) := "00000000000000000000000000000000000000000000000000000000000100000";
    constant ap_ST_st7_fsm_6 : STD_LOGIC_VECTOR (64 downto 0) := "00000000000000000000000000000000000000000000000000000000001000000";
    constant ap_ST_st8_fsm_7 : STD_LOGIC_VECTOR (64 downto 0) := "00000000000000000000000000000000000000000000000000000000010000000";
    constant ap_ST_pp0_stg0_fsm_8 : STD_LOGIC_VECTOR (64 downto 0) := "00000000000000000000000000000000000000000000000000000000100000000";
    constant ap_ST_st12_fsm_9 : STD_LOGIC_VECTOR (64 downto 0) := "00000000000000000000000000000000000000000000000000000001000000000";
    constant ap_ST_pp1_stg0_fsm_10 : STD_LOGIC_VECTOR (64 downto 0) := "00000000000000000000000000000000000000000000000000000010000000000";
    constant ap_ST_pp1_stg1_fsm_11 : STD_LOGIC_VECTOR (64 downto 0) := "00000000000000000000000000000000000000000000000000000100000000000";
    constant ap_ST_pp1_stg2_fsm_12 : STD_LOGIC_VECTOR (64 downto 0) := "00000000000000000000000000000000000000000000000000001000000000000";
    constant ap_ST_pp1_stg3_fsm_13 : STD_LOGIC_VECTOR (64 downto 0) := "00000000000000000000000000000000000000000000000000010000000000000";
    constant ap_ST_pp1_stg4_fsm_14 : STD_LOGIC_VECTOR (64 downto 0) := "00000000000000000000000000000000000000000000000000100000000000000";
    constant ap_ST_pp1_stg5_fsm_15 : STD_LOGIC_VECTOR (64 downto 0) := "00000000000000000000000000000000000000000000000001000000000000000";
    constant ap_ST_pp1_stg6_fsm_16 : STD_LOGIC_VECTOR (64 downto 0) := "00000000000000000000000000000000000000000000000010000000000000000";
    constant ap_ST_pp1_stg7_fsm_17 : STD_LOGIC_VECTOR (64 downto 0) := "00000000000000000000000000000000000000000000000100000000000000000";
    constant ap_ST_pp1_stg8_fsm_18 : STD_LOGIC_VECTOR (64 downto 0) := "00000000000000000000000000000000000000000000001000000000000000000";
    constant ap_ST_pp1_stg9_fsm_19 : STD_LOGIC_VECTOR (64 downto 0) := "00000000000000000000000000000000000000000000010000000000000000000";
    constant ap_ST_pp1_stg10_fsm_20 : STD_LOGIC_VECTOR (64 downto 0) := "00000000000000000000000000000000000000000000100000000000000000000";
    constant ap_ST_pp1_stg11_fsm_21 : STD_LOGIC_VECTOR (64 downto 0) := "00000000000000000000000000000000000000000001000000000000000000000";
    constant ap_ST_pp1_stg12_fsm_22 : STD_LOGIC_VECTOR (64 downto 0) := "00000000000000000000000000000000000000000010000000000000000000000";
    constant ap_ST_pp1_stg13_fsm_23 : STD_LOGIC_VECTOR (64 downto 0) := "00000000000000000000000000000000000000000100000000000000000000000";
    constant ap_ST_pp1_stg14_fsm_24 : STD_LOGIC_VECTOR (64 downto 0) := "00000000000000000000000000000000000000001000000000000000000000000";
    constant ap_ST_pp1_stg15_fsm_25 : STD_LOGIC_VECTOR (64 downto 0) := "00000000000000000000000000000000000000010000000000000000000000000";
    constant ap_ST_pp1_stg16_fsm_26 : STD_LOGIC_VECTOR (64 downto 0) := "00000000000000000000000000000000000000100000000000000000000000000";
    constant ap_ST_pp1_stg17_fsm_27 : STD_LOGIC_VECTOR (64 downto 0) := "00000000000000000000000000000000000001000000000000000000000000000";
    constant ap_ST_pp1_stg18_fsm_28 : STD_LOGIC_VECTOR (64 downto 0) := "00000000000000000000000000000000000010000000000000000000000000000";
    constant ap_ST_pp1_stg19_fsm_29 : STD_LOGIC_VECTOR (64 downto 0) := "00000000000000000000000000000000000100000000000000000000000000000";
    constant ap_ST_pp1_stg20_fsm_30 : STD_LOGIC_VECTOR (64 downto 0) := "00000000000000000000000000000000001000000000000000000000000000000";
    constant ap_ST_pp1_stg21_fsm_31 : STD_LOGIC_VECTOR (64 downto 0) := "00000000000000000000000000000000010000000000000000000000000000000";
    constant ap_ST_pp1_stg22_fsm_32 : STD_LOGIC_VECTOR (64 downto 0) := "00000000000000000000000000000000100000000000000000000000000000000";
    constant ap_ST_pp1_stg23_fsm_33 : STD_LOGIC_VECTOR (64 downto 0) := "00000000000000000000000000000001000000000000000000000000000000000";
    constant ap_ST_pp1_stg24_fsm_34 : STD_LOGIC_VECTOR (64 downto 0) := "00000000000000000000000000000010000000000000000000000000000000000";
    constant ap_ST_pp1_stg25_fsm_35 : STD_LOGIC_VECTOR (64 downto 0) := "00000000000000000000000000000100000000000000000000000000000000000";
    constant ap_ST_pp1_stg26_fsm_36 : STD_LOGIC_VECTOR (64 downto 0) := "00000000000000000000000000001000000000000000000000000000000000000";
    constant ap_ST_pp1_stg27_fsm_37 : STD_LOGIC_VECTOR (64 downto 0) := "00000000000000000000000000010000000000000000000000000000000000000";
    constant ap_ST_pp1_stg28_fsm_38 : STD_LOGIC_VECTOR (64 downto 0) := "00000000000000000000000000100000000000000000000000000000000000000";
    constant ap_ST_pp1_stg29_fsm_39 : STD_LOGIC_VECTOR (64 downto 0) := "00000000000000000000000001000000000000000000000000000000000000000";
    constant ap_ST_pp1_stg30_fsm_40 : STD_LOGIC_VECTOR (64 downto 0) := "00000000000000000000000010000000000000000000000000000000000000000";
    constant ap_ST_pp1_stg31_fsm_41 : STD_LOGIC_VECTOR (64 downto 0) := "00000000000000000000000100000000000000000000000000000000000000000";
    constant ap_ST_pp2_stg0_fsm_42 : STD_LOGIC_VECTOR (64 downto 0) := "00000000000000000000001000000000000000000000000000000000000000000";
    constant ap_ST_pp2_stg1_fsm_43 : STD_LOGIC_VECTOR (64 downto 0) := "00000000000000000000010000000000000000000000000000000000000000000";
    constant ap_ST_pp2_stg2_fsm_44 : STD_LOGIC_VECTOR (64 downto 0) := "00000000000000000000100000000000000000000000000000000000000000000";
    constant ap_ST_pp2_stg3_fsm_45 : STD_LOGIC_VECTOR (64 downto 0) := "00000000000000000001000000000000000000000000000000000000000000000";
    constant ap_ST_pp2_stg4_fsm_46 : STD_LOGIC_VECTOR (64 downto 0) := "00000000000000000010000000000000000000000000000000000000000000000";
    constant ap_ST_pp2_stg5_fsm_47 : STD_LOGIC_VECTOR (64 downto 0) := "00000000000000000100000000000000000000000000000000000000000000000";
    constant ap_ST_pp2_stg6_fsm_48 : STD_LOGIC_VECTOR (64 downto 0) := "00000000000000001000000000000000000000000000000000000000000000000";
    constant ap_ST_pp2_stg7_fsm_49 : STD_LOGIC_VECTOR (64 downto 0) := "00000000000000010000000000000000000000000000000000000000000000000";
    constant ap_ST_pp2_stg8_fsm_50 : STD_LOGIC_VECTOR (64 downto 0) := "00000000000000100000000000000000000000000000000000000000000000000";
    constant ap_ST_pp2_stg9_fsm_51 : STD_LOGIC_VECTOR (64 downto 0) := "00000000000001000000000000000000000000000000000000000000000000000";
    constant ap_ST_pp2_stg10_fsm_52 : STD_LOGIC_VECTOR (64 downto 0) := "00000000000010000000000000000000000000000000000000000000000000000";
    constant ap_ST_pp2_stg11_fsm_53 : STD_LOGIC_VECTOR (64 downto 0) := "00000000000100000000000000000000000000000000000000000000000000000";
    constant ap_ST_pp2_stg12_fsm_54 : STD_LOGIC_VECTOR (64 downto 0) := "00000000001000000000000000000000000000000000000000000000000000000";
    constant ap_ST_pp2_stg13_fsm_55 : STD_LOGIC_VECTOR (64 downto 0) := "00000000010000000000000000000000000000000000000000000000000000000";
    constant ap_ST_pp2_stg14_fsm_56 : STD_LOGIC_VECTOR (64 downto 0) := "00000000100000000000000000000000000000000000000000000000000000000";
    constant ap_ST_pp2_stg15_fsm_57 : STD_LOGIC_VECTOR (64 downto 0) := "00000001000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_st102_fsm_58 : STD_LOGIC_VECTOR (64 downto 0) := "00000010000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_pp3_stg0_fsm_59 : STD_LOGIC_VECTOR (64 downto 0) := "00000100000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_st106_fsm_60 : STD_LOGIC_VECTOR (64 downto 0) := "00001000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_st107_fsm_61 : STD_LOGIC_VECTOR (64 downto 0) := "00010000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_st108_fsm_62 : STD_LOGIC_VECTOR (64 downto 0) := "00100000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_st109_fsm_63 : STD_LOGIC_VECTOR (64 downto 0) := "01000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_st110_fsm_64 : STD_LOGIC_VECTOR (64 downto 0) := "10000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant C_S_AXI_DATA_WIDTH : INTEGER range 63 downto 0 := 20;
    constant C_M_AXI_DATA_WIDTH : INTEGER range 63 downto 0 := 20;
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_2B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101011";
    constant ap_const_lv32_2C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101100";
    constant ap_const_lv32_2E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101110";
    constant ap_const_lv32_32 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110010";
    constant ap_const_lv32_2D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101101";
    constant ap_const_lv32_2F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101111";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_31 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110001";
    constant ap_const_lv32_30 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110000";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv32_1D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011101";
    constant ap_const_lv32_21 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100001";
    constant ap_const_lv32_25 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100101";
    constant ap_const_lv32_29 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101001";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_1A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011010";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv32_22 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100010";
    constant ap_const_lv32_26 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100110";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_23 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100011";
    constant ap_const_lv32_27 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100111";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011100";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_24 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100100";
    constant ap_const_lv32_28 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101000";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101010";
    constant ap_const_lv32_39 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111001";
    constant ap_const_lv32_3A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111010";
    constant ap_const_lv32_3B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111011";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv17_0 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000000";
    constant ap_const_lv32_33 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110011";
    constant ap_const_lv32_34 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110100";
    constant ap_const_lv32_35 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110101";
    constant ap_const_lv32_36 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110110";
    constant ap_const_lv32_37 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110111";
    constant ap_const_lv32_38 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111000";
    constant ap_const_lv32_9600 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000001001011000000000";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv32_12C00 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000010010110000000000";
    constant ap_const_lv32_40 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000000";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv32_3DCCCCCD : STD_LOGIC_VECTOR (31 downto 0) := "00111101110011001100110011001101";
    constant ap_const_lv32_3E4CCCCD : STD_LOGIC_VECTOR (31 downto 0) := "00111110010011001100110011001101";
    constant ap_const_lv32_3F333333 : STD_LOGIC_VECTOR (31 downto 0) := "00111111001100110011001100110011";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv16_9600 : STD_LOGIC_VECTOR (15 downto 0) := "1001011000000000";
    constant ap_const_lv16_1 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000001";
    constant ap_const_lv17_12C00 : STD_LOGIC_VECTOR (16 downto 0) := "10010110000000000";
    constant ap_const_lv17_1 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000001";
    constant ap_const_lv17_2 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000010";
    constant ap_const_lv17_3 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000011";
    constant ap_const_lv17_4 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000100";
    constant ap_const_lv17_6 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000110";
    constant ap_const_lv17_5 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000101";
    constant ap_const_lv17_8 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000001000";
    constant ap_const_lv17_A : STD_LOGIC_VECTOR (16 downto 0) := "00000000000001010";
    constant ap_const_lv17_7 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000111";
    constant ap_const_lv17_C : STD_LOGIC_VECTOR (16 downto 0) := "00000000000001100";
    constant ap_const_lv17_E : STD_LOGIC_VECTOR (16 downto 0) := "00000000000001110";
    constant ap_const_lv17_9 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000001001";
    constant ap_const_lv17_10 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000010000";
    constant ap_const_lv17_12 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000010010";
    constant ap_const_lv17_B : STD_LOGIC_VECTOR (16 downto 0) := "00000000000001011";
    constant ap_const_lv17_14 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000010100";
    constant ap_const_lv17_16 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000010110";
    constant ap_const_lv17_D : STD_LOGIC_VECTOR (16 downto 0) := "00000000000001101";
    constant ap_const_lv17_18 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000011000";
    constant ap_const_lv17_1A : STD_LOGIC_VECTOR (16 downto 0) := "00000000000011010";
    constant ap_const_lv17_F : STD_LOGIC_VECTOR (16 downto 0) := "00000000000001111";
    constant ap_const_lv17_1C : STD_LOGIC_VECTOR (16 downto 0) := "00000000000011100";
    constant ap_const_lv17_1E : STD_LOGIC_VECTOR (16 downto 0) := "00000000000011110";
    constant ap_const_lv17_11 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000010001";
    constant ap_const_lv17_13 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000010011";
    constant ap_const_lv17_15 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000010101";
    constant ap_const_lv17_17 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000010111";
    constant ap_const_lv17_19 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000011001";
    constant ap_const_lv17_1B : STD_LOGIC_VECTOR (16 downto 0) := "00000000000011011";
    constant ap_const_lv17_1D : STD_LOGIC_VECTOR (16 downto 0) := "00000000000011101";
    constant ap_const_lv17_1F : STD_LOGIC_VECTOR (16 downto 0) := "00000000000011111";
    constant ap_const_lv17_20 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000100000";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv9_E : STD_LOGIC_VECTOR (8 downto 0) := "000001110";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";

    signal ap_rst_n_inv : STD_LOGIC;
    signal ap_start : STD_LOGIC;
    signal ap_done : STD_LOGIC;
    signal ap_idle : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (64 downto 0) := "00000000000000000000000000000000000000000000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_sig_cseq_ST_st1_fsm_0 : STD_LOGIC;
    signal ap_sig_bdd_83 : BOOLEAN;
    signal ap_ready : STD_LOGIC;
    signal frame_in : STD_LOGIC_VECTOR (31 downto 0);
    signal frame_out : STD_LOGIC_VECTOR (31 downto 0);
    signal init : STD_LOGIC;
    signal ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal backsub_AXILiteS_s_axi_U_ap_dummy_ce : STD_LOGIC;
    signal backsub_CRTL_BUS_s_axi_U_ap_dummy_ce : STD_LOGIC;
    signal gmem_AWVALID : STD_LOGIC;
    signal gmem_AWREADY : STD_LOGIC;
    signal gmem_AWADDR : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal gmem_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal gmem_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal gmem_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal gmem_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal gmem_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal gmem_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal gmem_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem_WVALID : STD_LOGIC;
    signal gmem_WREADY : STD_LOGIC;
    signal gmem_WDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem_WSTRB : STD_LOGIC_VECTOR (3 downto 0);
    signal gmem_WLAST : STD_LOGIC;
    signal gmem_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem_ARVALID : STD_LOGIC;
    signal gmem_ARREADY : STD_LOGIC;
    signal gmem_ARADDR : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal gmem_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal gmem_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal gmem_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal gmem_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal gmem_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal gmem_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal gmem_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem_RVALID : STD_LOGIC;
    signal gmem_RREADY : STD_LOGIC;
    signal gmem_RDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem_RLAST : STD_LOGIC;
    signal gmem_RID : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem_RUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem_RRESP : STD_LOGIC_VECTOR (1 downto 0);
    signal gmem_BVALID : STD_LOGIC;
    signal gmem_BREADY : STD_LOGIC;
    signal gmem_BRESP : STD_LOGIC_VECTOR (1 downto 0);
    signal gmem_BID : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem_BUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal backsub_gmem_m_axi_U_ap_dummy_ce : STD_LOGIC;
    signal gmem_offset_AWVALID : STD_LOGIC;
    signal gmem_offset_AWREADY : STD_LOGIC;
    signal gmem_offset_AWADDR : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem_offset_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem_offset_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem_offset_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal gmem_offset_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal gmem_offset_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal gmem_offset_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal gmem_offset_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal gmem_offset_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal gmem_offset_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal gmem_offset_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem_offset_WVALID : STD_LOGIC;
    signal gmem_offset_WREADY : STD_LOGIC;
    signal gmem_offset_WDATA : STD_LOGIC_VECTOR (7 downto 0);
    signal gmem_offset_WSTRB : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem_offset_WLAST : STD_LOGIC;
    signal gmem_offset_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem_offset_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem_offset_ARVALID : STD_LOGIC;
    signal gmem_offset_ARREADY : STD_LOGIC;
    signal gmem_offset_ARADDR : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem_offset_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem_offset_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem_offset_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal gmem_offset_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal gmem_offset_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal gmem_offset_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal gmem_offset_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal gmem_offset_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal gmem_offset_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal gmem_offset_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem_offset_RVALID : STD_LOGIC;
    signal gmem_offset_RREADY : STD_LOGIC;
    signal gmem_offset_RDATA : STD_LOGIC_VECTOR (7 downto 0);
    signal gmem_offset_RLAST : STD_LOGIC;
    signal gmem_offset_RID : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem_offset_RUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem_offset_RRESP : STD_LOGIC_VECTOR (1 downto 0);
    signal gmem_offset_BVALID : STD_LOGIC;
    signal gmem_offset_BREADY : STD_LOGIC;
    signal gmem_offset_BRESP : STD_LOGIC_VECTOR (1 downto 0);
    signal gmem_offset_BID : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem_offset_BUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal backsub_gmem_offset_m_axi_U_ap_dummy_ce : STD_LOGIC;
    signal indvar_reg_1482 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_reg_ppstg_indvar_reg_1482_pp0_it1 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_sig_cseq_ST_pp0_stg0_fsm_8 : STD_LOGIC;
    signal ap_sig_bdd_431 : BOOLEAN;
    signal ap_reg_ppiten_pp0_it0 : STD_LOGIC := '0';
    signal exitcond_reg_5864 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_bdd_440 : BOOLEAN;
    signal ap_reg_ppiten_pp0_it1 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it2 : STD_LOGIC := '0';
    signal i1_reg_1494 : STD_LOGIC_VECTOR (16 downto 0);
    signal i_reg_1506 : STD_LOGIC_VECTOR (16 downto 0);
    signal indvar8_reg_1518 : STD_LOGIC_VECTOR (16 downto 0);
    signal reg_1613 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_sig_cseq_ST_pp1_stg1_fsm_11 : STD_LOGIC;
    signal ap_sig_bdd_461 : BOOLEAN;
    signal ap_reg_ppiten_pp1_it0 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp1_it1 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp1_it2 : STD_LOGIC := '0';
    signal tmp_5_reg_5878 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_reg_1613_pp1_it1 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_sig_cseq_ST_pp2_stg1_fsm_43 : STD_LOGIC;
    signal ap_sig_bdd_481 : BOOLEAN;
    signal ap_reg_ppiten_pp2_it0 : STD_LOGIC := '0';
    signal tmp_3_reg_7687 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_cseq_ST_pp2_stg2_fsm_44 : STD_LOGIC;
    signal ap_sig_bdd_496 : BOOLEAN;
    signal ap_sig_cseq_ST_pp2_stg4_fsm_46 : STD_LOGIC;
    signal ap_sig_bdd_506 : BOOLEAN;
    signal ap_sig_cseq_ST_pp2_stg8_fsm_50 : STD_LOGIC;
    signal ap_sig_bdd_516 : BOOLEAN;
    signal grp_fu_1602_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal reg_1619 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_ppstg_reg_1619_pp1_it1 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_sig_cseq_ST_pp2_stg3_fsm_45 : STD_LOGIC;
    signal ap_sig_bdd_531 : BOOLEAN;
    signal ap_sig_cseq_ST_pp2_stg5_fsm_47 : STD_LOGIC;
    signal ap_sig_bdd_541 : BOOLEAN;
    signal reg_1624 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_sig_cseq_ST_pp1_stg2_fsm_12 : STD_LOGIC;
    signal ap_sig_bdd_552 : BOOLEAN;
    signal ap_reg_ppstg_reg_1624_pp1_it1 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_sig_cseq_ST_pp2_stg7_fsm_49 : STD_LOGIC;
    signal ap_sig_bdd_564 : BOOLEAN;
    signal reg_1629 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_ppstg_reg_1629_pp1_it1 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_sig_cseq_ST_pp2_stg6_fsm_48 : STD_LOGIC;
    signal ap_sig_bdd_578 : BOOLEAN;
    signal reg_1634 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_sig_cseq_ST_pp1_stg3_fsm_13 : STD_LOGIC;
    signal ap_sig_bdd_589 : BOOLEAN;
    signal ap_reg_ppstg_reg_1634_pp1_it1 : STD_LOGIC_VECTOR (7 downto 0);
    signal reg_1639 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_ppstg_reg_1639_pp1_it1 : STD_LOGIC_VECTOR (7 downto 0);
    signal reg_1644 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_sig_cseq_ST_pp1_stg4_fsm_14 : STD_LOGIC;
    signal ap_sig_bdd_606 : BOOLEAN;
    signal ap_reg_ppstg_reg_1644_pp1_it1 : STD_LOGIC_VECTOR (7 downto 0);
    signal reg_1649 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_ppstg_reg_1649_pp1_it1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1563_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_1654 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_cseq_ST_pp1_stg7_fsm_17 : STD_LOGIC;
    signal ap_sig_bdd_624 : BOOLEAN;
    signal ap_sig_cseq_ST_pp1_stg11_fsm_21 : STD_LOGIC;
    signal ap_sig_bdd_633 : BOOLEAN;
    signal ap_sig_cseq_ST_pp1_stg15_fsm_25 : STD_LOGIC;
    signal ap_sig_bdd_643 : BOOLEAN;
    signal ap_sig_cseq_ST_pp1_stg19_fsm_29 : STD_LOGIC;
    signal ap_sig_bdd_653 : BOOLEAN;
    signal ap_sig_cseq_ST_pp1_stg23_fsm_33 : STD_LOGIC;
    signal ap_sig_bdd_663 : BOOLEAN;
    signal ap_sig_cseq_ST_pp1_stg27_fsm_37 : STD_LOGIC;
    signal ap_sig_bdd_673 : BOOLEAN;
    signal ap_sig_cseq_ST_pp1_stg31_fsm_41 : STD_LOGIC;
    signal ap_sig_bdd_683 : BOOLEAN;
    signal ap_reg_ppstg_tmp_5_reg_5878_pp1_it1 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_1566_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_1659 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1569_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_1664 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_1669 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_cseq_ST_pp1_stg8_fsm_18 : STD_LOGIC;
    signal ap_sig_bdd_704 : BOOLEAN;
    signal ap_sig_cseq_ST_pp1_stg12_fsm_22 : STD_LOGIC;
    signal ap_sig_bdd_713 : BOOLEAN;
    signal ap_sig_cseq_ST_pp1_stg16_fsm_26 : STD_LOGIC;
    signal ap_sig_bdd_723 : BOOLEAN;
    signal ap_sig_cseq_ST_pp1_stg20_fsm_30 : STD_LOGIC;
    signal ap_sig_bdd_733 : BOOLEAN;
    signal ap_sig_cseq_ST_pp1_stg24_fsm_34 : STD_LOGIC;
    signal ap_sig_bdd_743 : BOOLEAN;
    signal ap_sig_cseq_ST_pp1_stg28_fsm_38 : STD_LOGIC;
    signal ap_sig_bdd_753 : BOOLEAN;
    signal ap_sig_cseq_ST_pp1_stg0_fsm_10 : STD_LOGIC;
    signal ap_sig_bdd_763 : BOOLEAN;
    signal reg_1674 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_1679 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_1684 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_cseq_ST_pp1_stg9_fsm_19 : STD_LOGIC;
    signal ap_sig_bdd_779 : BOOLEAN;
    signal ap_sig_cseq_ST_pp1_stg13_fsm_23 : STD_LOGIC;
    signal ap_sig_bdd_788 : BOOLEAN;
    signal ap_sig_cseq_ST_pp1_stg17_fsm_27 : STD_LOGIC;
    signal ap_sig_bdd_798 : BOOLEAN;
    signal ap_sig_cseq_ST_pp1_stg21_fsm_31 : STD_LOGIC;
    signal ap_sig_bdd_808 : BOOLEAN;
    signal ap_sig_cseq_ST_pp1_stg25_fsm_35 : STD_LOGIC;
    signal ap_sig_bdd_818 : BOOLEAN;
    signal ap_sig_cseq_ST_pp1_stg29_fsm_39 : STD_LOGIC;
    signal ap_sig_bdd_828 : BOOLEAN;
    signal ap_sig_cseq_ST_pp1_stg5_fsm_15 : STD_LOGIC;
    signal ap_sig_bdd_841 : BOOLEAN;
    signal reg_1689 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_1694 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_1699 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_cseq_ST_pp1_stg10_fsm_20 : STD_LOGIC;
    signal ap_sig_bdd_854 : BOOLEAN;
    signal ap_sig_cseq_ST_pp1_stg14_fsm_24 : STD_LOGIC;
    signal ap_sig_bdd_863 : BOOLEAN;
    signal ap_sig_cseq_ST_pp1_stg18_fsm_28 : STD_LOGIC;
    signal ap_sig_bdd_873 : BOOLEAN;
    signal ap_sig_cseq_ST_pp1_stg22_fsm_32 : STD_LOGIC;
    signal ap_sig_bdd_883 : BOOLEAN;
    signal ap_sig_cseq_ST_pp1_stg26_fsm_36 : STD_LOGIC;
    signal ap_sig_bdd_893 : BOOLEAN;
    signal ap_sig_cseq_ST_pp1_stg30_fsm_40 : STD_LOGIC;
    signal ap_sig_bdd_903 : BOOLEAN;
    signal ap_sig_cseq_ST_pp1_stg6_fsm_16 : STD_LOGIC;
    signal ap_sig_bdd_916 : BOOLEAN;
    signal reg_1704 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_1709 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1542_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_1714 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1547_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_1720 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1552_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_1727 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_1733 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_1740 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_1746 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_1752 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_1759 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_1765 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_1772 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_1778 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_1785 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_1790 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_1797 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_1803 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1534_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_1809 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_1815 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_1821 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1538_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_1827 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_1833 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_1839 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_1845 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_1851 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_1857 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_1863 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_1869 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_1875 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_1881 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_1887 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_1893 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_1899 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_1905 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_1911 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_1917 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_reg_ppstg_tmp_5_reg_5878_pp1_it2 : STD_LOGIC_VECTOR (0 downto 0);
    signal reg_1923 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_1928 : STD_LOGIC_VECTOR (31 downto 0);
    signal init_read_read_fu_222_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal init_read_reg_5844 : STD_LOGIC_VECTOR (0 downto 0);
    signal frame_out_read_reg_5848 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_13_reg_5853 : STD_LOGIC_VECTOR (29 downto 0);
    signal ap_sig_cseq_ST_st2_fsm_1 : STD_LOGIC;
    signal ap_sig_bdd_1090 : BOOLEAN;
    signal ap_sig_ioackin_gmem_ARREADY : STD_LOGIC;
    signal exitcond_fu_1953_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_reg_5864_pp0_it1 : STD_LOGIC_VECTOR (0 downto 0);
    signal indvar_next_fu_1959_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal indvar_next_reg_5868 : STD_LOGIC_VECTOR (15 downto 0);
    signal gmem_addr_read_reg_5873 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_5_fu_1970_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_12_fu_1991_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_12_reg_5887 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_tmp_12_reg_5887_pp1_it1 : STD_LOGIC_VECTOR (63 downto 0);
    signal frame_addr_32_reg_5892 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_15_fu_2002_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_15_reg_5897 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_tmp_15_reg_5897_pp1_it1 : STD_LOGIC_VECTOR (63 downto 0);
    signal frame_addr_33_reg_5902 : STD_LOGIC_VECTOR (16 downto 0);
    signal i_2_s_fu_2007_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal i_2_s_reg_5907 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_59_fu_2028_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_59_reg_5917 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_ppstg_tmp_59_reg_5917_pp1_it1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_60_fu_2032_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_60_reg_5924 : STD_LOGIC_VECTOR (7 downto 0);
    signal pix_1_reg_5930 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_61_fu_2036_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_61_reg_5935 : STD_LOGIC_VECTOR (7 downto 0);
    signal pix_3_reg_5941 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_62_fu_2040_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_62_reg_5946 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_ppstg_tmp_62_reg_5946_pp1_it1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_27_1_fu_2044_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_27_1_reg_5953 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_tmp_27_1_reg_5953_pp1_it1 : STD_LOGIC_VECTOR (63 downto 0);
    signal frame_addr_34_reg_5958 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_30_1_fu_2054_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_30_1_reg_5963 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_tmp_30_1_reg_5963_pp1_it1 : STD_LOGIC_VECTOR (63 downto 0);
    signal frame_addr_35_reg_5968 : STD_LOGIC_VECTOR (16 downto 0);
    signal i_2_1_fu_2059_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal i_2_1_reg_5973 : STD_LOGIC_VECTOR (16 downto 0);
    signal i_2_2_fu_2080_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal i_2_2_reg_5983 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_19_fu_2101_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_22_fu_2105_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_30_fu_2109_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_63_fu_2114_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_63_reg_6008 : STD_LOGIC_VECTOR (7 downto 0);
    signal pix_13_1_reg_6014 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_64_fu_2118_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_64_reg_6019 : STD_LOGIC_VECTOR (7 downto 0);
    signal pix_23_1_reg_6025 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_65_fu_2122_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_65_reg_6030 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_ppstg_tmp_65_reg_6030_pp1_it1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_27_2_fu_2126_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_27_2_reg_6037 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_tmp_27_2_reg_6037_pp1_it1 : STD_LOGIC_VECTOR (63 downto 0);
    signal frame_addr_36_reg_6042 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_30_2_fu_2136_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_30_2_reg_6047 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_tmp_30_2_reg_6047_pp1_it1 : STD_LOGIC_VECTOR (63 downto 0);
    signal frame_addr_37_reg_6052 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_68_fu_2141_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_68_reg_6057 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_ppstg_tmp_68_reg_6057_pp1_it1 : STD_LOGIC_VECTOR (7 downto 0);
    signal i_2_3_fu_2145_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal i_2_3_reg_6064 : STD_LOGIC_VECTOR (16 downto 0);
    signal i_2_4_fu_2166_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal i_2_4_reg_6074 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_33_fu_2187_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_40_1_fu_2191_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_43_1_fu_2195_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_66_fu_2199_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_66_reg_6099 : STD_LOGIC_VECTOR (7 downto 0);
    signal pix_13_2_reg_6105 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_67_fu_2203_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_67_reg_6110 : STD_LOGIC_VECTOR (7 downto 0);
    signal pix_23_2_reg_6116 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_27_3_fu_2207_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_27_3_reg_6121 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_tmp_27_3_reg_6121_pp1_it1 : STD_LOGIC_VECTOR (63 downto 0);
    signal frame_addr_38_reg_6126 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_30_3_fu_2217_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_30_3_reg_6131 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_tmp_30_3_reg_6131_pp1_it1 : STD_LOGIC_VECTOR (63 downto 0);
    signal frame_addr_39_reg_6136 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_71_fu_2222_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_71_reg_6141 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_ppstg_tmp_71_reg_6141_pp1_it1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_74_fu_2226_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_74_reg_6148 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_ppstg_tmp_74_reg_6148_pp1_it1 : STD_LOGIC_VECTOR (7 downto 0);
    signal i_2_5_fu_2230_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal i_2_5_reg_6155 : STD_LOGIC_VECTOR (16 downto 0);
    signal i_2_6_fu_2251_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal i_2_6_reg_6165 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_51_1_fu_2272_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_54_1_fu_2277_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_40_2_fu_2281_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_69_fu_2285_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_69_reg_6190 : STD_LOGIC_VECTOR (7 downto 0);
    signal pix_13_3_reg_6196 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_70_fu_2289_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_70_reg_6201 : STD_LOGIC_VECTOR (7 downto 0);
    signal pix_23_3_reg_6207 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_27_4_fu_2293_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_27_4_reg_6212 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_tmp_27_4_reg_6212_pp1_it1 : STD_LOGIC_VECTOR (63 downto 0);
    signal frame_addr_40_reg_6217 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_30_4_fu_2303_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_30_4_reg_6222 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_tmp_30_4_reg_6222_pp1_it1 : STD_LOGIC_VECTOR (63 downto 0);
    signal frame_addr_41_reg_6227 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_77_fu_2308_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_77_reg_6232 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_ppstg_tmp_77_reg_6232_pp1_it1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_80_fu_2312_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_80_reg_6239 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_ppstg_tmp_80_reg_6239_pp1_it1 : STD_LOGIC_VECTOR (7 downto 0);
    signal i_2_7_fu_2316_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal i_2_7_reg_6246 : STD_LOGIC_VECTOR (16 downto 0);
    signal i_2_8_fu_2337_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal i_2_8_reg_6256 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_43_2_fu_2358_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_51_2_fu_2362_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_54_2_fu_2367_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_72_fu_2371_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_72_reg_6281 : STD_LOGIC_VECTOR (7 downto 0);
    signal pix_13_4_reg_6287 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_73_fu_2375_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_73_reg_6292 : STD_LOGIC_VECTOR (7 downto 0);
    signal pix_23_4_reg_6298 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_27_5_fu_2379_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_27_5_reg_6303 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_tmp_27_5_reg_6303_pp1_it1 : STD_LOGIC_VECTOR (63 downto 0);
    signal frame_addr_42_reg_6308 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_30_5_fu_2389_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_30_5_reg_6313 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_tmp_30_5_reg_6313_pp1_it1 : STD_LOGIC_VECTOR (63 downto 0);
    signal frame_addr_43_reg_6318 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_83_fu_2394_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_83_reg_6323 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_ppstg_tmp_83_reg_6323_pp1_it1 : STD_LOGIC_VECTOR (7 downto 0);
    signal yuv_struct_y2_write_assign_23_reg_6330 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_ppstg_yuv_struct_y2_write_assign_23_reg_6330_pp1_it1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_86_fu_2398_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_86_reg_6337 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_ppstg_tmp_86_reg_6337_pp1_it1 : STD_LOGIC_VECTOR (7 downto 0);
    signal yuv_struct_y2_write_assign_24_reg_6344 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_ppstg_yuv_struct_y2_write_assign_24_reg_6344_pp1_it1 : STD_LOGIC_VECTOR (7 downto 0);
    signal i_2_9_fu_2402_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal i_2_9_reg_6351 : STD_LOGIC_VECTOR (16 downto 0);
    signal i_2_10_fu_2423_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal i_2_10_reg_6361 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_40_3_fu_2444_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_43_3_fu_2448_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_51_3_fu_2452_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_75_fu_2457_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_75_reg_6386 : STD_LOGIC_VECTOR (7 downto 0);
    signal pix_13_5_reg_6392 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_76_fu_2461_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_76_reg_6397 : STD_LOGIC_VECTOR (7 downto 0);
    signal pix_23_5_reg_6403 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_27_6_fu_2465_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_27_6_reg_6408 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_tmp_27_6_reg_6408_pp1_it1 : STD_LOGIC_VECTOR (63 downto 0);
    signal frame_addr_44_reg_6413 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_30_6_fu_2475_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_30_6_reg_6418 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_tmp_30_6_reg_6418_pp1_it1 : STD_LOGIC_VECTOR (63 downto 0);
    signal frame_addr_45_reg_6423 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_89_fu_2480_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_89_reg_6428 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_ppstg_tmp_89_reg_6428_pp1_it1 : STD_LOGIC_VECTOR (7 downto 0);
    signal yuv_struct_y2_write_assign_25_reg_6435 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_ppstg_yuv_struct_y2_write_assign_25_reg_6435_pp1_it1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_92_fu_2484_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_92_reg_6442 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_ppstg_tmp_92_reg_6442_pp1_it1 : STD_LOGIC_VECTOR (7 downto 0);
    signal yuv_struct_y2_write_assign_26_reg_6449 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_ppstg_yuv_struct_y2_write_assign_26_reg_6449_pp1_it1 : STD_LOGIC_VECTOR (7 downto 0);
    signal i_2_11_fu_2488_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal i_2_11_reg_6456 : STD_LOGIC_VECTOR (16 downto 0);
    signal i_2_12_fu_2509_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal i_2_12_reg_6466 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_54_3_fu_2530_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_40_4_fu_2534_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_43_4_fu_2538_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_78_fu_2542_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_78_reg_6491 : STD_LOGIC_VECTOR (7 downto 0);
    signal pix_13_6_reg_6497 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_79_fu_2546_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_79_reg_6502 : STD_LOGIC_VECTOR (7 downto 0);
    signal pix_23_6_reg_6508 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_27_7_fu_2550_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_27_7_reg_6513 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_tmp_27_7_reg_6513_pp1_it1 : STD_LOGIC_VECTOR (63 downto 0);
    signal frame_addr_46_reg_6518 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_30_7_fu_2560_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_30_7_reg_6523 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_tmp_30_7_reg_6523_pp1_it1 : STD_LOGIC_VECTOR (63 downto 0);
    signal frame_addr_47_reg_6528 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_95_fu_2565_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_95_reg_6533 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_ppstg_tmp_95_reg_6533_pp1_it1 : STD_LOGIC_VECTOR (7 downto 0);
    signal yuv_struct_y2_write_assign_27_reg_6540 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_ppstg_yuv_struct_y2_write_assign_27_reg_6540_pp1_it1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_98_fu_2569_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_98_reg_6547 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_ppstg_tmp_98_reg_6547_pp1_it1 : STD_LOGIC_VECTOR (7 downto 0);
    signal yuv_struct_y2_write_assign_28_reg_6554 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_ppstg_yuv_struct_y2_write_assign_28_reg_6554_pp1_it1 : STD_LOGIC_VECTOR (7 downto 0);
    signal i_2_13_fu_2573_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal i_2_13_reg_6561 : STD_LOGIC_VECTOR (16 downto 0);
    signal i_2_14_fu_2594_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal i_2_14_reg_6571 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_51_4_fu_2615_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_54_4_fu_2620_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_40_5_fu_2624_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_81_fu_2628_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_81_reg_6596 : STD_LOGIC_VECTOR (7 downto 0);
    signal pix_13_7_reg_6602 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_82_fu_2632_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_82_reg_6607 : STD_LOGIC_VECTOR (7 downto 0);
    signal pix_23_7_reg_6613 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_27_8_fu_2636_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_27_8_reg_6618 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_tmp_27_8_reg_6618_pp1_it1 : STD_LOGIC_VECTOR (63 downto 0);
    signal frame_addr_48_reg_6623 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_30_8_fu_2646_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_30_8_reg_6628 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_tmp_30_8_reg_6628_pp1_it1 : STD_LOGIC_VECTOR (63 downto 0);
    signal frame_addr_49_reg_6633 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_101_fu_2651_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_101_reg_6638 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_ppstg_tmp_101_reg_6638_pp1_it1 : STD_LOGIC_VECTOR (7 downto 0);
    signal yuv_struct_y2_write_assign_29_reg_6645 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_ppstg_yuv_struct_y2_write_assign_29_reg_6645_pp1_it1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_104_fu_2655_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_104_reg_6652 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_ppstg_tmp_104_reg_6652_pp1_it1 : STD_LOGIC_VECTOR (7 downto 0);
    signal yuv_struct_y2_write_assign_30_reg_6659 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_ppstg_yuv_struct_y2_write_assign_30_reg_6659_pp1_it1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_43_5_fu_2659_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_51_5_fu_2663_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_54_5_fu_2668_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_84_fu_2672_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_84_reg_6681 : STD_LOGIC_VECTOR (7 downto 0);
    signal pix_13_8_reg_6687 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_85_fu_2676_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_85_reg_6692 : STD_LOGIC_VECTOR (7 downto 0);
    signal pix_23_8_reg_6698 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_27_9_fu_2680_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_27_9_reg_6703 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_tmp_27_9_reg_6703_pp1_it1 : STD_LOGIC_VECTOR (63 downto 0);
    signal frame_addr_50_reg_6708 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_30_9_fu_2690_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_30_9_reg_6713 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_tmp_30_9_reg_6713_pp1_it1 : STD_LOGIC_VECTOR (63 downto 0);
    signal frame_addr_51_reg_6718 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_40_6_fu_2695_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_43_6_fu_2699_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_51_6_fu_2703_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_87_fu_2708_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_87_reg_6738 : STD_LOGIC_VECTOR (7 downto 0);
    signal pix_13_9_reg_6744 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_88_fu_2712_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_88_reg_6749 : STD_LOGIC_VECTOR (7 downto 0);
    signal pix_23_9_reg_6755 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_27_s_fu_2716_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_27_s_reg_6760 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_tmp_27_s_reg_6760_pp1_it1 : STD_LOGIC_VECTOR (63 downto 0);
    signal frame_addr_52_reg_6765 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_30_s_fu_2726_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_30_s_reg_6770 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_tmp_30_s_reg_6770_pp1_it1 : STD_LOGIC_VECTOR (63 downto 0);
    signal frame_addr_53_reg_6775 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_54_6_fu_2731_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_40_7_fu_2735_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_43_7_fu_2739_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_90_fu_2743_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_90_reg_6795 : STD_LOGIC_VECTOR (7 downto 0);
    signal pix_13_s_reg_6801 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_91_fu_2747_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_91_reg_6806 : STD_LOGIC_VECTOR (7 downto 0);
    signal pix_23_s_reg_6812 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_27_10_fu_2751_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_27_10_reg_6817 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_tmp_27_10_reg_6817_pp1_it1 : STD_LOGIC_VECTOR (63 downto 0);
    signal frame_addr_54_reg_6822 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_30_10_fu_2761_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_30_10_reg_6827 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_tmp_30_10_reg_6827_pp1_it1 : STD_LOGIC_VECTOR (63 downto 0);
    signal frame_addr_55_reg_6832 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_51_7_fu_2766_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_54_7_fu_2771_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_40_8_fu_2775_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_93_fu_2779_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_93_reg_6852 : STD_LOGIC_VECTOR (7 downto 0);
    signal pix_13_10_reg_6858 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_94_fu_2783_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_94_reg_6863 : STD_LOGIC_VECTOR (7 downto 0);
    signal pix_23_10_reg_6869 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_27_11_fu_2787_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_27_11_reg_6874 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_tmp_27_11_reg_6874_pp1_it1 : STD_LOGIC_VECTOR (63 downto 0);
    signal frame_addr_56_reg_6879 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_30_11_fu_2797_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_30_11_reg_6884 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_tmp_30_11_reg_6884_pp1_it1 : STD_LOGIC_VECTOR (63 downto 0);
    signal frame_addr_57_reg_6889 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_43_8_fu_2802_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_51_8_fu_2806_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_54_8_fu_2810_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_96_fu_2814_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_96_reg_6909 : STD_LOGIC_VECTOR (7 downto 0);
    signal pix_13_11_reg_6915 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_97_fu_2818_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_97_reg_6920 : STD_LOGIC_VECTOR (7 downto 0);
    signal pix_23_11_reg_6926 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_27_12_fu_2822_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_27_12_reg_6931 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_tmp_27_12_reg_6931_pp1_it1 : STD_LOGIC_VECTOR (63 downto 0);
    signal frame_addr_58_reg_6936 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_30_12_fu_2832_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_30_12_reg_6941 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_tmp_30_12_reg_6941_pp1_it1 : STD_LOGIC_VECTOR (63 downto 0);
    signal frame_addr_59_reg_6946 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_40_9_fu_2837_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_43_9_fu_2841_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_51_9_fu_2845_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_99_fu_2849_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_99_reg_6966 : STD_LOGIC_VECTOR (7 downto 0);
    signal pix_13_12_reg_6972 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_100_fu_2853_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_100_reg_6977 : STD_LOGIC_VECTOR (7 downto 0);
    signal pix_23_12_reg_6983 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_27_13_fu_2857_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_27_13_reg_6988 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_tmp_27_13_reg_6988_pp1_it1 : STD_LOGIC_VECTOR (63 downto 0);
    signal frame_addr_60_reg_6993 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_30_13_fu_2867_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_30_13_reg_6998 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_tmp_30_13_reg_6998_pp1_it1 : STD_LOGIC_VECTOR (63 downto 0);
    signal frame_addr_61_reg_7003 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_29_14_fu_2872_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_29_14_reg_7008 : STD_LOGIC_VECTOR (16 downto 0);
    signal i_2_15_fu_2878_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal i_2_15_reg_7013 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_54_9_fu_2884_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_40_s_fu_2888_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_43_s_fu_2892_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_102_fu_2896_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_102_reg_7033 : STD_LOGIC_VECTOR (7 downto 0);
    signal pix_13_13_reg_7039 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_103_fu_2900_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_103_reg_7044 : STD_LOGIC_VECTOR (7 downto 0);
    signal pix_23_13_reg_7050 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_27_14_fu_2904_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_27_14_reg_7055 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_tmp_27_14_reg_7055_pp1_it1 : STD_LOGIC_VECTOR (63 downto 0);
    signal frame_addr_62_reg_7060 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_30_14_fu_2908_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_30_14_reg_7065 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_tmp_30_14_reg_7065_pp1_it1 : STD_LOGIC_VECTOR (63 downto 0);
    signal frame_addr_63_reg_7070 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_51_s_fu_2927_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_54_s_fu_2931_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_40_10_fu_2935_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_105_fu_2939_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_105_reg_7090 : STD_LOGIC_VECTOR (7 downto 0);
    signal pix_13_14_reg_7096 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_106_fu_2943_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_106_reg_7101 : STD_LOGIC_VECTOR (7 downto 0);
    signal pix_23_14_reg_7107 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_43_10_fu_2962_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_51_10_fu_2966_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_54_10_fu_2970_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_40_11_fu_2989_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_43_11_fu_2993_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_51_11_fu_2997_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_54_11_fu_3016_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_40_12_fu_3020_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_43_12_fu_3024_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_46_3_reg_7157 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_51_12_fu_3043_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_54_12_fu_3047_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_40_13_fu_3051_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_43_13_fu_3070_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_51_13_fu_3074_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_54_13_fu_3078_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_57_4_reg_7192 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_40_14_fu_3097_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_43_14_fu_3101_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_51_14_fu_3105_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_26_fu_3109_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_37_fu_3113_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_54_14_fu_3132_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_47_1_fu_3136_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_58_1_fu_3140_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_47_2_fu_3144_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_46_6_reg_7242 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_58_2_fu_3162_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_47_3_fu_3166_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_58_3_fu_3170_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_47_4_fu_3188_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_58_4_fu_3192_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_47_5_fu_3196_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_57_7_reg_7277 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_58_5_fu_3214_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_47_6_fu_3218_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_58_6_fu_3222_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_46_8_reg_7297 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_47_7_fu_3240_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_58_7_fu_3244_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_47_8_fu_3248_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_46_9_reg_7317 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_58_8_fu_3266_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_47_9_fu_3270_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_57_9_reg_7332 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_58_9_fu_3274_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_47_s_fu_3292_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_57_s_reg_7347 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_58_s_fu_3296_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_47_10_fu_3300_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_46_10_reg_7362 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_58_10_fu_3318_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_47_11_fu_3322_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_58_11_fu_3326_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_46_11_reg_7382 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_47_12_fu_3344_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_58_12_fu_3348_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_47_13_fu_3352_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_57_11_reg_7402 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_58_13_fu_3356_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_47_14_fu_3360_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_58_14_fu_3364_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_57_12_reg_7422 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_46_13_reg_7427 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_46_14_reg_7432 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_60_7_reg_7437 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_60_8_reg_7442 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_49_9_reg_7447 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_60_9_reg_7452 : STD_LOGIC_VECTOR (31 downto 0);
    signal not_tmp_s_fu_3401_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_tmp_s_reg_7457 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_49_s_reg_7462 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_60_s_reg_7467 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_49_10_reg_7472 : STD_LOGIC_VECTOR (31 downto 0);
    signal not_tmp_1_fu_3449_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_tmp_1_reg_7477 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_60_10_reg_7482 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_49_11_reg_7487 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_60_11_reg_7492 : STD_LOGIC_VECTOR (31 downto 0);
    signal not_tmp_65_1_fu_3496_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_tmp_65_1_reg_7497 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_49_12_reg_7502 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_60_12_reg_7507 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_49_13_reg_7512 : STD_LOGIC_VECTOR (31 downto 0);
    signal not_tmp_69_1_fu_3544_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_tmp_69_1_reg_7517 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_60_13_reg_7522 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_49_14_reg_7527 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_60_14_reg_7532 : STD_LOGIC_VECTOR (31 downto 0);
    signal not_tmp_65_2_fu_3591_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_tmp_65_2_reg_7537 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_tmp_69_2_fu_3639_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_tmp_69_2_reg_7542 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_tmp_65_3_fu_3686_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_tmp_65_3_reg_7547 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_tmp_69_3_fu_3734_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_tmp_69_3_reg_7552 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_tmp_65_4_fu_3781_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_tmp_65_4_reg_7557 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_tmp_69_4_fu_3829_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_tmp_69_4_reg_7562 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_tmp_65_5_fu_3876_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_tmp_65_5_reg_7567 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_tmp_69_5_fu_3924_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_tmp_69_5_reg_7572 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_50_10_reg_7577 : STD_LOGIC_VECTOR (31 downto 0);
    signal not_tmp_65_6_fu_3971_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_tmp_65_6_reg_7582 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_tmp_69_6_fu_4019_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_tmp_69_6_reg_7587 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_tmp_65_7_fu_4066_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_tmp_65_7_reg_7592 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_tmp_69_7_fu_4114_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_tmp_69_7_reg_7597 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_tmp_65_8_fu_4161_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_tmp_65_8_reg_7602 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_tmp_69_8_fu_4208_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_tmp_69_8_reg_7607 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_61_11_reg_7612 : STD_LOGIC_VECTOR (31 downto 0);
    signal not_tmp_65_9_fu_4255_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_tmp_65_9_reg_7617 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_tmp_69_9_fu_4302_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_tmp_69_9_reg_7622 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_tmp_65_s_fu_4349_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_tmp_65_s_reg_7627 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_tmp_69_s_fu_4396_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_tmp_69_s_reg_7632 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_tmp_65_10_fu_4443_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_tmp_65_10_reg_7637 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_tmp_69_10_fu_4490_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_tmp_69_10_reg_7642 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_tmp_65_11_fu_4537_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_tmp_65_11_reg_7647 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_tmp_69_11_fu_4584_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_tmp_69_11_reg_7652 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_tmp_65_12_fu_4631_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_tmp_65_12_reg_7657 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_tmp_69_12_fu_4678_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_tmp_69_12_reg_7662 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_tmp_65_13_fu_4725_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_tmp_65_13_reg_7667 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_tmp_69_13_fu_4772_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_tmp_69_13_reg_7672 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_tmp_65_14_fu_4819_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_tmp_65_14_reg_7677 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_tmp_69_14_fu_4866_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_tmp_69_14_reg_7682 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_3_fu_4880_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_cseq_ST_pp2_stg0_fsm_42 : STD_LOGIC;
    signal ap_sig_bdd_1922 : BOOLEAN;
    signal ap_reg_ppiten_pp2_it1 : STD_LOGIC := '0';
    signal i_1_s_fu_4901_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal i_1_s_reg_7696 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_43_fu_4963_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_43_reg_7706 : STD_LOGIC_VECTOR (7 downto 0);
    signal i_1_1_fu_4967_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal i_1_1_reg_7713 : STD_LOGIC_VECTOR (16 downto 0);
    signal i_1_2_fu_4988_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal i_1_2_reg_7723 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_44_fu_5042_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_44_reg_7733 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_45_fu_5046_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_45_reg_7740 : STD_LOGIC_VECTOR (7 downto 0);
    signal i_1_3_fu_5050_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal i_1_3_reg_7747 : STD_LOGIC_VECTOR (16 downto 0);
    signal i_1_4_fu_5071_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal i_1_4_reg_7757 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_46_fu_5125_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_46_reg_7767 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_47_fu_5129_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_47_reg_7774 : STD_LOGIC_VECTOR (7 downto 0);
    signal i_1_5_fu_5133_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal i_1_5_reg_7781 : STD_LOGIC_VECTOR (16 downto 0);
    signal i_1_6_fu_5154_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal i_1_6_reg_7791 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_48_fu_5208_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_48_reg_7801 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_49_fu_5212_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_49_reg_7808 : STD_LOGIC_VECTOR (7 downto 0);
    signal i_1_7_fu_5216_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal i_1_7_reg_7815 : STD_LOGIC_VECTOR (16 downto 0);
    signal i_1_8_fu_5237_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal i_1_8_reg_7825 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_50_fu_5291_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_50_reg_7835 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_51_fu_5295_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_51_reg_7842 : STD_LOGIC_VECTOR (7 downto 0);
    signal i_1_9_fu_5299_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal i_1_9_reg_7849 : STD_LOGIC_VECTOR (16 downto 0);
    signal i_1_10_fu_5320_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal i_1_10_reg_7859 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_52_fu_5374_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_52_reg_7869 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_53_fu_5378_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_53_reg_7876 : STD_LOGIC_VECTOR (7 downto 0);
    signal i_1_11_fu_5382_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal i_1_11_reg_7883 : STD_LOGIC_VECTOR (16 downto 0);
    signal i_1_12_fu_5403_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal i_1_12_reg_7893 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_54_fu_5457_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_54_reg_7903 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_55_fu_5461_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_55_reg_7910 : STD_LOGIC_VECTOR (7 downto 0);
    signal i_1_13_fu_5465_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal i_1_13_reg_7917 : STD_LOGIC_VECTOR (16 downto 0);
    signal i_1_14_fu_5486_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal i_1_14_reg_7927 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_56_fu_5540_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_56_reg_7937 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_57_fu_5544_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_57_reg_7944 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_21_14_fu_5779_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_21_14_reg_7951 : STD_LOGIC_VECTOR (16 downto 0);
    signal ap_sig_cseq_ST_pp2_stg15_fsm_57 : STD_LOGIC;
    signal ap_sig_bdd_2036 : BOOLEAN;
    signal i_1_15_fu_5785_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal i_1_15_reg_7956 : STD_LOGIC_VECTOR (16 downto 0);
    signal ap_sig_cseq_ST_st102_fsm_58 : STD_LOGIC;
    signal ap_sig_bdd_2050 : BOOLEAN;
    signal ap_sig_ioackin_gmem_offset_AWREADY : STD_LOGIC;
    signal exitcond1_fu_5827_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond1_reg_7966 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_cseq_ST_pp3_stg0_fsm_59 : STD_LOGIC;
    signal ap_sig_bdd_2063 : BOOLEAN;
    signal ap_reg_ppiten_pp3_it0 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp3_it1 : STD_LOGIC := '0';
    signal ap_reg_ppstg_exitcond1_reg_7966_pp3_it1 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_ioackin_gmem_offset_WREADY : STD_LOGIC;
    signal ap_reg_ppiten_pp3_it2 : STD_LOGIC := '0';
    signal indvar_next9_fu_5833_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal grey_frame_q1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grey_frame_load_reg_7980 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_sig_cseq_ST_st8_fsm_7 : STD_LOGIC;
    signal ap_sig_bdd_2099 : BOOLEAN;
    signal ap_sig_cseq_ST_st12_fsm_9 : STD_LOGIC;
    signal ap_sig_bdd_2111 : BOOLEAN;
    signal yuv_frame_address0 : STD_LOGIC_VECTOR (15 downto 0);
    signal yuv_frame_ce0 : STD_LOGIC;
    signal yuv_frame_we0 : STD_LOGIC;
    signal yuv_frame_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal yuv_frame_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal yuv_frame_address1 : STD_LOGIC_VECTOR (15 downto 0);
    signal yuv_frame_ce1 : STD_LOGIC;
    signal yuv_frame_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grey_frame_address0 : STD_LOGIC_VECTOR (16 downto 0);
    signal grey_frame_ce0 : STD_LOGIC;
    signal grey_frame_we0 : STD_LOGIC;
    signal grey_frame_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grey_frame_address1 : STD_LOGIC_VECTOR (16 downto 0);
    signal grey_frame_ce1 : STD_LOGIC;
    signal grey_frame_we1 : STD_LOGIC;
    signal grey_frame_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_backsub_hls_fptoui_float_i8_fu_1529_x : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_backsub_hls_fptoui_float_i8_fu_1529_ap_return : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_backsub_hls_fptoui_float_i8_fu_1529_ap_ce : STD_LOGIC;
    signal indvar_phi_fu_1486_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal i1_phi_fu_1498_p4 : STD_LOGIC_VECTOR (16 downto 0);
    signal i_phi_fu_1510_p4 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_s_fu_1965_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_11_fu_1986_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_26_1_fu_2023_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_26_2_fu_2075_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_26_3_fu_2096_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_26_4_fu_2161_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_26_5_fu_2182_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_26_6_fu_2246_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_26_7_fu_2267_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_26_8_fu_2332_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_26_9_fu_2353_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_26_s_fu_2418_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_26_10_fu_2439_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_26_11_fu_2504_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_26_12_fu_2525_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_26_13_fu_2589_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_26_14_fu_2610_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_7_fu_4896_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_17_1_fu_4917_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_9_fu_4927_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_4_fu_4939_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_17_2_fu_4983_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_17_3_fu_5004_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_19_1_fu_5009_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_22_1_fu_5020_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_17_4_fu_5066_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_17_5_fu_5087_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_19_2_fu_5092_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_22_2_fu_5103_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_17_6_fu_5149_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_17_7_fu_5170_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_19_3_fu_5175_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_22_3_fu_5186_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_17_8_fu_5232_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_17_9_fu_5253_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_19_4_fu_5258_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_22_4_fu_5269_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_17_s_fu_5315_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_17_10_fu_5336_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_19_5_fu_5341_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_22_5_fu_5352_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_17_11_fu_5398_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_17_12_fu_5419_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_19_6_fu_5424_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_22_6_fu_5435_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_17_13_fu_5481_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_17_14_fu_5502_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_19_7_fu_5507_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_22_7_fu_5518_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_19_8_fu_5548_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_sig_cseq_ST_pp2_stg9_fsm_51 : STD_LOGIC;
    signal ap_sig_bdd_2367 : BOOLEAN;
    signal tmp_22_8_fu_5559_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_19_9_fu_5581_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_sig_cseq_ST_pp2_stg10_fsm_52 : STD_LOGIC;
    signal ap_sig_bdd_2382 : BOOLEAN;
    signal tmp_22_9_fu_5592_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_19_s_fu_5614_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_sig_cseq_ST_pp2_stg11_fsm_53 : STD_LOGIC;
    signal ap_sig_bdd_2397 : BOOLEAN;
    signal tmp_22_s_fu_5625_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_19_10_fu_5647_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_sig_cseq_ST_pp2_stg12_fsm_54 : STD_LOGIC;
    signal ap_sig_bdd_2412 : BOOLEAN;
    signal tmp_22_10_fu_5658_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_19_11_fu_5680_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_sig_cseq_ST_pp2_stg13_fsm_55 : STD_LOGIC;
    signal ap_sig_bdd_2427 : BOOLEAN;
    signal tmp_22_11_fu_5691_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_19_12_fu_5713_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_sig_cseq_ST_pp2_stg14_fsm_56 : STD_LOGIC;
    signal ap_sig_bdd_2442 : BOOLEAN;
    signal tmp_22_12_fu_5724_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_19_13_fu_5746_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_22_13_fu_5757_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_19_14_fu_5791_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_22_14_fu_5796_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_42_fu_5839_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_16_fu_1943_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_58_fu_5817_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ioackin_gmem_ARREADY : STD_LOGIC := '0';
    signal ap_reg_ioackin_gmem_offset_AWREADY : STD_LOGIC := '0';
    signal ap_reg_ioackin_gmem_offset_WREADY : STD_LOGIC := '0';
    signal ap_sig_cseq_ST_st110_fsm_64 : STD_LOGIC;
    signal ap_sig_bdd_2497 : BOOLEAN;
    signal frame_Addr_A_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_17_fu_2912_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_35_1_fu_2947_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_35_2_fu_2974_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_35_3_fu_3001_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_35_4_fu_3028_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_35_5_fu_3055_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_35_6_fu_3082_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_35_7_fu_3117_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_35_8_fu_3148_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_35_9_fu_3174_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_35_s_fu_3200_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_35_10_fu_3226_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_35_11_fu_3252_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_35_12_fu_3278_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_35_13_fu_3304_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_35_14_fu_3330_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_6_fu_4945_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_23_1_fu_5026_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_23_2_fu_5109_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_23_3_fu_5192_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_23_4_fu_5275_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_23_5_fu_5358_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_23_6_fu_5441_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_23_7_fu_5524_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_23_8_fu_5565_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_23_9_fu_5598_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_23_s_fu_5631_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_23_10_fu_5664_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_23_11_fu_5697_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_23_12_fu_5730_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_23_13_fu_5763_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_23_14_fu_5801_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal frame_Addr_B_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_18_fu_2919_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_39_1_fu_2954_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_39_2_fu_2981_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_39_3_fu_3008_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_39_4_fu_3035_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_39_5_fu_3062_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_39_6_fu_3089_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_39_7_fu_3124_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_39_8_fu_3155_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_39_9_fu_3181_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_39_s_fu_3207_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_39_10_fu_3233_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_39_11_fu_3259_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_39_12_fu_3285_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_39_13_fu_3311_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_39_14_fu_3337_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_8_fu_4954_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_24_1_fu_5033_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_24_2_fu_5116_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_24_3_fu_5199_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_24_4_fu_5282_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_24_5_fu_5365_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_24_6_fu_5448_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_24_7_fu_5531_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_24_8_fu_5572_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_24_9_fu_5605_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_24_s_fu_5638_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_24_10_fu_5671_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_24_11_fu_5704_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_24_12_fu_5737_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_24_13_fu_5770_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_24_14_fu_5808_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_36_cast_fu_3411_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_cast_fu_3455_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_38_cast_fu_3506_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_37_cast_fu_3550_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_40_cast_fu_3601_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_39_cast_fu_3645_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_42_cast_fu_3696_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_41_cast_fu_3740_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_44_cast_fu_3791_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_43_cast_fu_3835_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_46_cast_fu_3886_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_45_cast_fu_3930_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_48_cast_fu_3981_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_47_cast_fu_4025_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_50_cast_fu_4076_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_49_cast_fu_4120_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_52_cast_fu_4170_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_51_cast_fu_4214_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_54_cast_fu_4264_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_53_cast_fu_4308_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_56_cast_fu_4358_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_55_cast_fu_4402_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_58_cast_fu_4452_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_57_cast_fu_4496_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_60_cast_fu_4546_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_59_cast_fu_4590_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_62_cast_fu_4640_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_61_cast_fu_4684_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_64_cast_fu_4734_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_63_cast_fu_4778_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_66_cast_fu_4828_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_65_cast_fu_4872_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_41_fu_4922_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1534_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1534_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1538_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1538_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1542_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1542_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1547_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1547_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1552_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1552_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1563_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1566_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1569_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_lshr_f1_cast_fu_1976_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_14_fu_1996_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_lshr_f32_1_cast_fu_2013_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_29_1_fu_2048_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_lshr_f32_2_cast_fu_2065_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_lshr_f32_3_cast_fu_2086_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_29_2_fu_2130_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_lshr_f32_4_cast_fu_2151_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_lshr_f32_5_cast_fu_2172_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_29_3_fu_2211_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_lshr_f32_6_cast_fu_2236_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_lshr_f32_7_cast_fu_2257_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_29_4_fu_2297_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_lshr_f32_8_cast_fu_2322_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_lshr_f32_9_cast_fu_2343_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_29_5_fu_2383_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_lshr_f32_cast_fu_2408_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_lshr_f32_10_cast_fu_2429_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_29_6_fu_2469_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_lshr_f32_11_cast_fu_2494_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_lshr_f32_12_cast_fu_2515_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_29_7_fu_2554_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_lshr_f32_13_cast_fu_2579_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_lshr_f32_14_cast_fu_2600_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_29_8_fu_2640_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_29_9_fu_2684_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_29_s_fu_2720_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_29_10_fu_2755_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_29_11_fu_2791_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_29_12_fu_2826_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_29_13_fu_2861_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_36_cast_fu_3368_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_58_cast_fu_3371_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal x_assign_fu_3375_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal abscond_i1_fu_3387_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal neg_i1_fu_3381_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal abs_i1_fu_3393_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_47_cast_fu_3407_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_61_cast_fu_3419_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal x_assign_1_fu_3423_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal abscond_i2_fu_3435_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal neg_i2_fu_3429_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal abs_i2_fu_3441_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_40_1_cast_fu_3463_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_62_1_cast_fu_3466_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal x_assign_2_fu_3470_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal abscond_i_fu_3482_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal neg_i_fu_3476_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal abs_i_fu_3488_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_51_1_cast_fu_3502_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_66_1_cast_fu_3514_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal x_assign_3_fu_3518_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal abscond_i3_fu_3530_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal neg_i3_fu_3524_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal abs_i3_fu_3536_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_40_2_cast_fu_3558_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_62_2_cast_fu_3561_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal x_assign_4_fu_3565_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal abscond_i4_fu_3577_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal neg_i4_fu_3571_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal abs_i4_fu_3583_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_51_2_cast_fu_3597_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_66_2_cast_fu_3609_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal x_assign_5_fu_3613_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal abscond_i5_fu_3625_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal neg_i5_fu_3619_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal abs_i5_fu_3631_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_40_3_cast_fu_3653_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_62_3_cast_fu_3656_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal x_assign_6_fu_3660_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal abscond_i6_fu_3672_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal neg_i6_fu_3666_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal abs_i6_fu_3678_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_51_3_cast_fu_3692_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_66_3_cast_fu_3704_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal x_assign_7_fu_3708_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal abscond_i7_fu_3720_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal neg_i7_fu_3714_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal abs_i7_fu_3726_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_40_4_cast_fu_3748_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_62_4_cast_fu_3751_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal x_assign_8_fu_3755_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal abscond_i8_fu_3767_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal neg_i8_fu_3761_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal abs_i8_fu_3773_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_51_4_cast_fu_3787_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_66_4_cast_fu_3799_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal x_assign_9_fu_3803_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal abscond_i9_fu_3815_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal neg_i9_fu_3809_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal abs_i9_fu_3821_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_40_5_cast_fu_3843_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_62_5_cast_fu_3846_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal x_assign_s_fu_3850_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal abscond_i10_fu_3862_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal neg_i10_fu_3856_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal abs_i10_fu_3868_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_51_5_cast_fu_3882_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_66_5_cast_fu_3894_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal x_assign_10_fu_3898_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal abscond_i11_fu_3910_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal neg_i11_fu_3904_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal abs_i11_fu_3916_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_40_6_cast_fu_3938_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_62_6_cast_fu_3941_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal x_assign_11_fu_3945_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal abscond_i12_fu_3957_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal neg_i12_fu_3951_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal abs_i12_fu_3963_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_51_6_cast_fu_3977_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_66_6_cast_fu_3989_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal x_assign_12_fu_3993_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal abscond_i13_fu_4005_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal neg_i13_fu_3999_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal abs_i13_fu_4011_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_40_7_cast_fu_4033_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_62_7_cast_fu_4036_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal x_assign_13_fu_4040_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal abscond_i14_fu_4052_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal neg_i14_fu_4046_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal abs_i14_fu_4058_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_51_7_cast_fu_4072_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_66_7_cast_fu_4084_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal x_assign_14_fu_4088_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal abscond_i15_fu_4100_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal neg_i15_fu_4094_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal abs_i15_fu_4106_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_40_8_cast_fu_4128_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_62_8_cast_fu_4131_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal x_assign_15_fu_4135_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal abscond_i16_fu_4147_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal neg_i16_fu_4141_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal abs_i16_fu_4153_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_51_8_cast_fu_4167_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_66_8_cast_fu_4178_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal x_assign_16_fu_4182_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal abscond_i17_fu_4194_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal neg_i17_fu_4188_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal abs_i17_fu_4200_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_40_9_cast_fu_4222_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_62_9_cast_fu_4225_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal x_assign_17_fu_4229_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal abscond_i18_fu_4241_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal neg_i18_fu_4235_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal abs_i18_fu_4247_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_51_9_cast_fu_4261_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_66_9_cast_fu_4272_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal x_assign_18_fu_4276_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal abscond_i19_fu_4288_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal neg_i19_fu_4282_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal abs_i19_fu_4294_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_40_cast_fu_4316_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_62_cast_fu_4319_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal x_assign_19_fu_4323_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal abscond_i20_fu_4335_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal neg_i20_fu_4329_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal abs_i20_fu_4341_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_51_cast_fu_4355_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_66_cast_fu_4366_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal x_assign_20_fu_4370_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal abscond_i21_fu_4382_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal neg_i21_fu_4376_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal abs_i21_fu_4388_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_40_10_cast_fu_4410_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_62_10_cast_fu_4413_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal x_assign_21_fu_4417_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal abscond_i22_fu_4429_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal neg_i22_fu_4423_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal abs_i22_fu_4435_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_51_10_cast_fu_4449_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_66_10_cast_fu_4460_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal x_assign_22_fu_4464_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal abscond_i23_fu_4476_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal neg_i23_fu_4470_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal abs_i23_fu_4482_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_40_11_cast_fu_4504_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_62_11_cast_fu_4507_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal x_assign_23_fu_4511_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal abscond_i24_fu_4523_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal neg_i24_fu_4517_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal abs_i24_fu_4529_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_51_11_cast_fu_4543_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_66_11_cast_fu_4554_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal x_assign_24_fu_4558_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal abscond_i25_fu_4570_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal neg_i25_fu_4564_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal abs_i25_fu_4576_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_40_12_cast_fu_4598_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_62_12_cast_fu_4601_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal x_assign_25_fu_4605_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal abscond_i26_fu_4617_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal neg_i26_fu_4611_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal abs_i26_fu_4623_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_51_12_cast_fu_4637_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_66_12_cast_fu_4648_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal x_assign_26_fu_4652_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal abscond_i27_fu_4664_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal neg_i27_fu_4658_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal abs_i27_fu_4670_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_40_13_cast_fu_4692_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_62_13_cast_fu_4695_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal x_assign_27_fu_4699_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal abscond_i28_fu_4711_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal neg_i28_fu_4705_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal abs_i28_fu_4717_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_51_13_cast_fu_4731_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_66_13_cast_fu_4742_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal x_assign_28_fu_4746_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal abscond_i29_fu_4758_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal neg_i29_fu_4752_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal abs_i29_fu_4764_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_40_14_cast_fu_4786_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_62_14_cast_fu_4789_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal x_assign_29_fu_4793_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal abscond_i30_fu_4805_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal neg_i30_fu_4799_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal abs_i30_fu_4811_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_51_14_cast_fu_4825_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_66_14_cast_fu_4836_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal x_assign_30_fu_4840_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal abscond_i31_fu_4852_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal neg_i31_fu_4846_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal abs_i31_fu_4858_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_lshr_f_cast_fu_4886_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_lshr_f_1_cast_fu_4907_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_2_fu_4933_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_lshr_f_2_cast_fu_4973_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_lshr_f_3_cast_fu_4994_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_21_1_fu_5014_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_lshr_f_4_cast_fu_5056_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_lshr_f_5_cast_fu_5077_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_21_2_fu_5097_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_lshr_f_6_cast_fu_5139_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_lshr_f_7_cast_fu_5160_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_21_3_fu_5180_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_lshr_f_8_cast_fu_5222_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_lshr_f_9_cast_fu_5243_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_21_4_fu_5263_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_lshr_f_cast_16_fu_5305_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_lshr_f_10_cast_fu_5326_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_21_5_fu_5346_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_lshr_f_11_cast_fu_5388_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_lshr_f_12_cast_fu_5409_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_21_6_fu_5429_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_lshr_f_13_cast_fu_5471_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_lshr_f_14_cast_fu_5492_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_21_7_fu_5512_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_21_8_fu_5553_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_21_9_fu_5586_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_21_s_fu_5619_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_21_10_fu_5652_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_21_11_fu_5685_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_21_12_fu_5718_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_21_13_fu_5751_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal grp_fu_1534_ce : STD_LOGIC;
    signal grp_fu_1538_ce : STD_LOGIC;
    signal grp_fu_1542_ce : STD_LOGIC;
    signal grp_fu_1547_ce : STD_LOGIC;
    signal grp_fu_1552_ce : STD_LOGIC;
    signal grp_fu_1563_ce : STD_LOGIC;
    signal grp_fu_1566_ce : STD_LOGIC;
    signal grp_fu_1569_ce : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (64 downto 0);
    signal ap_sig_bdd_2486 : BOOLEAN;

    component backsub_hls_fptoui_float_i8 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        x : IN STD_LOGIC_VECTOR (31 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_ce : IN STD_LOGIC );
    end component;


    component backsub_fadd_32ns_32ns_32_5_full_dsp IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component backsub_fmul_32ns_32ns_32_4_max_dsp IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component backsub_sitofp_32ns_32_6 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component backsub_yuv_frame IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (15 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (15 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component backsub_grey_frame IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (16 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (7 downto 0);
        address1 : IN STD_LOGIC_VECTOR (16 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (7 downto 0);
        q1 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component backsub_AXILiteS_s_axi IS
    generic (
        C_S_AXI_ADDR_WIDTH : INTEGER;
        C_S_AXI_DATA_WIDTH : INTEGER );
    port (
        AWVALID : IN STD_LOGIC;
        AWREADY : OUT STD_LOGIC;
        AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        WVALID : IN STD_LOGIC;
        WREADY : OUT STD_LOGIC;
        WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH/8-1 downto 0);
        ARVALID : IN STD_LOGIC;
        ARREADY : OUT STD_LOGIC;
        ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        RVALID : OUT STD_LOGIC;
        RREADY : IN STD_LOGIC;
        RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        BVALID : OUT STD_LOGIC;
        BREADY : IN STD_LOGIC;
        BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        frame_in : OUT STD_LOGIC_VECTOR (31 downto 0);
        frame_out : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component backsub_CRTL_BUS_s_axi IS
    generic (
        C_S_AXI_ADDR_WIDTH : INTEGER;
        C_S_AXI_DATA_WIDTH : INTEGER );
    port (
        AWVALID : IN STD_LOGIC;
        AWREADY : OUT STD_LOGIC;
        AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        WVALID : IN STD_LOGIC;
        WREADY : OUT STD_LOGIC;
        WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH/8-1 downto 0);
        ARVALID : IN STD_LOGIC;
        ARREADY : OUT STD_LOGIC;
        ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        RVALID : OUT STD_LOGIC;
        RREADY : IN STD_LOGIC;
        RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        BVALID : OUT STD_LOGIC;
        BREADY : IN STD_LOGIC;
        BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        ap_start : OUT STD_LOGIC;
        interrupt : OUT STD_LOGIC;
        ap_ready : IN STD_LOGIC;
        ap_done : IN STD_LOGIC;
        ap_idle : IN STD_LOGIC;
        ap_return : IN STD_LOGIC_VECTOR (31 downto 0);
        init : OUT STD_LOGIC );
    end component;


    component backsub_gmem_m_axi IS
    generic (
        USER_DW : INTEGER;
        USER_AW : INTEGER;
        USER_MAXREQS : INTEGER;
        C_M_AXI_ID_WIDTH : INTEGER;
        C_M_AXI_ADDR_WIDTH : INTEGER;
        C_M_AXI_DATA_WIDTH : INTEGER;
        C_M_AXI_AWUSER_WIDTH : INTEGER;
        C_M_AXI_ARUSER_WIDTH : INTEGER;
        C_M_AXI_WUSER_WIDTH : INTEGER;
        C_M_AXI_RUSER_WIDTH : INTEGER;
        C_M_AXI_BUSER_WIDTH : INTEGER;
        C_USER_VALUE : INTEGER;
        C_PROT_VALUE : INTEGER;
        C_CACHE_VALUE : INTEGER );
    port (
        AWVALID : OUT STD_LOGIC;
        AWREADY : IN STD_LOGIC;
        AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_AWUSER_WIDTH-1 downto 0);
        WVALID : OUT STD_LOGIC;
        WREADY : IN STD_LOGIC;
        WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH/8-1 downto 0);
        WLAST : OUT STD_LOGIC;
        WID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_WUSER_WIDTH-1 downto 0);
        ARVALID : OUT STD_LOGIC;
        ARREADY : IN STD_LOGIC;
        ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_ARUSER_WIDTH-1 downto 0);
        RVALID : IN STD_LOGIC;
        RREADY : OUT STD_LOGIC;
        RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        RLAST : IN STD_LOGIC;
        RID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_RUSER_WIDTH-1 downto 0);
        RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BVALID : IN STD_LOGIC;
        BREADY : OUT STD_LOGIC;
        BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_BUSER_WIDTH-1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        I_ARVALID : IN STD_LOGIC;
        I_ARREADY : OUT STD_LOGIC;
        I_ARADDR : IN STD_LOGIC_VECTOR (31 downto 0);
        I_ARID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_ARLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_ARSIZE : IN STD_LOGIC_VECTOR (2 downto 0);
        I_ARLOCK : IN STD_LOGIC_VECTOR (1 downto 0);
        I_ARCACHE : IN STD_LOGIC_VECTOR (3 downto 0);
        I_ARQOS : IN STD_LOGIC_VECTOR (3 downto 0);
        I_ARPROT : IN STD_LOGIC_VECTOR (2 downto 0);
        I_ARUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_ARBURST : IN STD_LOGIC_VECTOR (1 downto 0);
        I_ARREGION : IN STD_LOGIC_VECTOR (3 downto 0);
        I_RVALID : OUT STD_LOGIC;
        I_RREADY : IN STD_LOGIC;
        I_RDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        I_RID : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_RUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        I_RLAST : OUT STD_LOGIC;
        I_AWVALID : IN STD_LOGIC;
        I_AWREADY : OUT STD_LOGIC;
        I_AWADDR : IN STD_LOGIC_VECTOR (31 downto 0);
        I_AWID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_AWLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_AWSIZE : IN STD_LOGIC_VECTOR (2 downto 0);
        I_AWLOCK : IN STD_LOGIC_VECTOR (1 downto 0);
        I_AWCACHE : IN STD_LOGIC_VECTOR (3 downto 0);
        I_AWQOS : IN STD_LOGIC_VECTOR (3 downto 0);
        I_AWPROT : IN STD_LOGIC_VECTOR (2 downto 0);
        I_AWUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_AWBURST : IN STD_LOGIC_VECTOR (1 downto 0);
        I_AWREGION : IN STD_LOGIC_VECTOR (3 downto 0);
        I_WVALID : IN STD_LOGIC;
        I_WREADY : OUT STD_LOGIC;
        I_WDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        I_WID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_WUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_WLAST : IN STD_LOGIC;
        I_WSTRB : IN STD_LOGIC_VECTOR (3 downto 0);
        I_BVALID : OUT STD_LOGIC;
        I_BREADY : IN STD_LOGIC;
        I_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        I_BID : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_BUSER : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component backsub_gmem_offset_m_axi IS
    generic (
        USER_DW : INTEGER;
        USER_AW : INTEGER;
        USER_MAXREQS : INTEGER;
        C_M_AXI_ID_WIDTH : INTEGER;
        C_M_AXI_ADDR_WIDTH : INTEGER;
        C_M_AXI_DATA_WIDTH : INTEGER;
        C_M_AXI_AWUSER_WIDTH : INTEGER;
        C_M_AXI_ARUSER_WIDTH : INTEGER;
        C_M_AXI_WUSER_WIDTH : INTEGER;
        C_M_AXI_RUSER_WIDTH : INTEGER;
        C_M_AXI_BUSER_WIDTH : INTEGER;
        C_USER_VALUE : INTEGER;
        C_PROT_VALUE : INTEGER;
        C_CACHE_VALUE : INTEGER );
    port (
        AWVALID : OUT STD_LOGIC;
        AWREADY : IN STD_LOGIC;
        AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_AWUSER_WIDTH-1 downto 0);
        WVALID : OUT STD_LOGIC;
        WREADY : IN STD_LOGIC;
        WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH/8-1 downto 0);
        WLAST : OUT STD_LOGIC;
        WID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_WUSER_WIDTH-1 downto 0);
        ARVALID : OUT STD_LOGIC;
        ARREADY : IN STD_LOGIC;
        ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_ARUSER_WIDTH-1 downto 0);
        RVALID : IN STD_LOGIC;
        RREADY : OUT STD_LOGIC;
        RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        RLAST : IN STD_LOGIC;
        RID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_RUSER_WIDTH-1 downto 0);
        RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BVALID : IN STD_LOGIC;
        BREADY : OUT STD_LOGIC;
        BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_BUSER_WIDTH-1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        I_ARVALID : IN STD_LOGIC;
        I_ARREADY : OUT STD_LOGIC;
        I_ARADDR : IN STD_LOGIC_VECTOR (31 downto 0);
        I_ARID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_ARLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_ARSIZE : IN STD_LOGIC_VECTOR (2 downto 0);
        I_ARLOCK : IN STD_LOGIC_VECTOR (1 downto 0);
        I_ARCACHE : IN STD_LOGIC_VECTOR (3 downto 0);
        I_ARQOS : IN STD_LOGIC_VECTOR (3 downto 0);
        I_ARPROT : IN STD_LOGIC_VECTOR (2 downto 0);
        I_ARUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_ARBURST : IN STD_LOGIC_VECTOR (1 downto 0);
        I_ARREGION : IN STD_LOGIC_VECTOR (3 downto 0);
        I_RVALID : OUT STD_LOGIC;
        I_RREADY : IN STD_LOGIC;
        I_RDATA : OUT STD_LOGIC_VECTOR (7 downto 0);
        I_RID : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_RUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        I_RLAST : OUT STD_LOGIC;
        I_AWVALID : IN STD_LOGIC;
        I_AWREADY : OUT STD_LOGIC;
        I_AWADDR : IN STD_LOGIC_VECTOR (31 downto 0);
        I_AWID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_AWLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_AWSIZE : IN STD_LOGIC_VECTOR (2 downto 0);
        I_AWLOCK : IN STD_LOGIC_VECTOR (1 downto 0);
        I_AWCACHE : IN STD_LOGIC_VECTOR (3 downto 0);
        I_AWQOS : IN STD_LOGIC_VECTOR (3 downto 0);
        I_AWPROT : IN STD_LOGIC_VECTOR (2 downto 0);
        I_AWUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_AWBURST : IN STD_LOGIC_VECTOR (1 downto 0);
        I_AWREGION : IN STD_LOGIC_VECTOR (3 downto 0);
        I_WVALID : IN STD_LOGIC;
        I_WREADY : OUT STD_LOGIC;
        I_WDATA : IN STD_LOGIC_VECTOR (7 downto 0);
        I_WID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_WUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_WLAST : IN STD_LOGIC;
        I_WSTRB : IN STD_LOGIC_VECTOR (0 downto 0);
        I_BVALID : OUT STD_LOGIC;
        I_BREADY : IN STD_LOGIC;
        I_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        I_BID : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_BUSER : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;



begin
    backsub_AXILiteS_s_axi_U : component backsub_AXILiteS_s_axi
    generic map (
        C_S_AXI_ADDR_WIDTH => C_S_AXI_AXILITES_ADDR_WIDTH,
        C_S_AXI_DATA_WIDTH => C_S_AXI_AXILITES_DATA_WIDTH)
    port map (
        AWVALID => s_axi_AXILiteS_AWVALID,
        AWREADY => s_axi_AXILiteS_AWREADY,
        AWADDR => s_axi_AXILiteS_AWADDR,
        WVALID => s_axi_AXILiteS_WVALID,
        WREADY => s_axi_AXILiteS_WREADY,
        WDATA => s_axi_AXILiteS_WDATA,
        WSTRB => s_axi_AXILiteS_WSTRB,
        ARVALID => s_axi_AXILiteS_ARVALID,
        ARREADY => s_axi_AXILiteS_ARREADY,
        ARADDR => s_axi_AXILiteS_ARADDR,
        RVALID => s_axi_AXILiteS_RVALID,
        RREADY => s_axi_AXILiteS_RREADY,
        RDATA => s_axi_AXILiteS_RDATA,
        RRESP => s_axi_AXILiteS_RRESP,
        BVALID => s_axi_AXILiteS_BVALID,
        BREADY => s_axi_AXILiteS_BREADY,
        BRESP => s_axi_AXILiteS_BRESP,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => backsub_AXILiteS_s_axi_U_ap_dummy_ce,
        frame_in => frame_in,
        frame_out => frame_out);

    backsub_CRTL_BUS_s_axi_U : component backsub_CRTL_BUS_s_axi
    generic map (
        C_S_AXI_ADDR_WIDTH => C_S_AXI_CRTL_BUS_ADDR_WIDTH,
        C_S_AXI_DATA_WIDTH => C_S_AXI_CRTL_BUS_DATA_WIDTH)
    port map (
        AWVALID => s_axi_CRTL_BUS_AWVALID,
        AWREADY => s_axi_CRTL_BUS_AWREADY,
        AWADDR => s_axi_CRTL_BUS_AWADDR,
        WVALID => s_axi_CRTL_BUS_WVALID,
        WREADY => s_axi_CRTL_BUS_WREADY,
        WDATA => s_axi_CRTL_BUS_WDATA,
        WSTRB => s_axi_CRTL_BUS_WSTRB,
        ARVALID => s_axi_CRTL_BUS_ARVALID,
        ARREADY => s_axi_CRTL_BUS_ARREADY,
        ARADDR => s_axi_CRTL_BUS_ARADDR,
        RVALID => s_axi_CRTL_BUS_RVALID,
        RREADY => s_axi_CRTL_BUS_RREADY,
        RDATA => s_axi_CRTL_BUS_RDATA,
        RRESP => s_axi_CRTL_BUS_RRESP,
        BVALID => s_axi_CRTL_BUS_BVALID,
        BREADY => s_axi_CRTL_BUS_BREADY,
        BRESP => s_axi_CRTL_BUS_BRESP,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => backsub_CRTL_BUS_s_axi_U_ap_dummy_ce,
        ap_start => ap_start,
        interrupt => interrupt,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_idle => ap_idle,
        ap_return => ap_return,
        init => init);

    backsub_gmem_m_axi_U : component backsub_gmem_m_axi
    generic map (
        USER_DW => 32,
        USER_AW => 32,
        USER_MAXREQS => 5,
        C_M_AXI_ID_WIDTH => C_M_AXI_GMEM_ID_WIDTH,
        C_M_AXI_ADDR_WIDTH => C_M_AXI_GMEM_ADDR_WIDTH,
        C_M_AXI_DATA_WIDTH => C_M_AXI_GMEM_DATA_WIDTH,
        C_M_AXI_AWUSER_WIDTH => C_M_AXI_GMEM_AWUSER_WIDTH,
        C_M_AXI_ARUSER_WIDTH => C_M_AXI_GMEM_ARUSER_WIDTH,
        C_M_AXI_WUSER_WIDTH => C_M_AXI_GMEM_WUSER_WIDTH,
        C_M_AXI_RUSER_WIDTH => C_M_AXI_GMEM_RUSER_WIDTH,
        C_M_AXI_BUSER_WIDTH => C_M_AXI_GMEM_BUSER_WIDTH,
        C_USER_VALUE => C_M_AXI_GMEM_USER_VALUE,
        C_PROT_VALUE => C_M_AXI_GMEM_PROT_VALUE,
        C_CACHE_VALUE => C_M_AXI_GMEM_CACHE_VALUE)
    port map (
        AWVALID => m_axi_gmem_AWVALID,
        AWREADY => m_axi_gmem_AWREADY,
        AWADDR => m_axi_gmem_AWADDR,
        AWID => m_axi_gmem_AWID,
        AWLEN => m_axi_gmem_AWLEN,
        AWSIZE => m_axi_gmem_AWSIZE,
        AWBURST => m_axi_gmem_AWBURST,
        AWLOCK => m_axi_gmem_AWLOCK,
        AWCACHE => m_axi_gmem_AWCACHE,
        AWPROT => m_axi_gmem_AWPROT,
        AWQOS => m_axi_gmem_AWQOS,
        AWREGION => m_axi_gmem_AWREGION,
        AWUSER => m_axi_gmem_AWUSER,
        WVALID => m_axi_gmem_WVALID,
        WREADY => m_axi_gmem_WREADY,
        WDATA => m_axi_gmem_WDATA,
        WSTRB => m_axi_gmem_WSTRB,
        WLAST => m_axi_gmem_WLAST,
        WID => m_axi_gmem_WID,
        WUSER => m_axi_gmem_WUSER,
        ARVALID => m_axi_gmem_ARVALID,
        ARREADY => m_axi_gmem_ARREADY,
        ARADDR => m_axi_gmem_ARADDR,
        ARID => m_axi_gmem_ARID,
        ARLEN => m_axi_gmem_ARLEN,
        ARSIZE => m_axi_gmem_ARSIZE,
        ARBURST => m_axi_gmem_ARBURST,
        ARLOCK => m_axi_gmem_ARLOCK,
        ARCACHE => m_axi_gmem_ARCACHE,
        ARPROT => m_axi_gmem_ARPROT,
        ARQOS => m_axi_gmem_ARQOS,
        ARREGION => m_axi_gmem_ARREGION,
        ARUSER => m_axi_gmem_ARUSER,
        RVALID => m_axi_gmem_RVALID,
        RREADY => m_axi_gmem_RREADY,
        RDATA => m_axi_gmem_RDATA,
        RLAST => m_axi_gmem_RLAST,
        RID => m_axi_gmem_RID,
        RUSER => m_axi_gmem_RUSER,
        RRESP => m_axi_gmem_RRESP,
        BVALID => m_axi_gmem_BVALID,
        BREADY => m_axi_gmem_BREADY,
        BRESP => m_axi_gmem_BRESP,
        BID => m_axi_gmem_BID,
        BUSER => m_axi_gmem_BUSER,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => backsub_gmem_m_axi_U_ap_dummy_ce,
        I_ARVALID => gmem_ARVALID,
        I_ARREADY => gmem_ARREADY,
        I_ARADDR => gmem_ARADDR,
        I_ARID => gmem_ARID,
        I_ARLEN => gmem_ARLEN,
        I_ARSIZE => gmem_ARSIZE,
        I_ARLOCK => gmem_ARLOCK,
        I_ARCACHE => gmem_ARCACHE,
        I_ARQOS => gmem_ARQOS,
        I_ARPROT => gmem_ARPROT,
        I_ARUSER => gmem_ARUSER,
        I_ARBURST => gmem_ARBURST,
        I_ARREGION => gmem_ARREGION,
        I_RVALID => gmem_RVALID,
        I_RREADY => gmem_RREADY,
        I_RDATA => gmem_RDATA,
        I_RID => gmem_RID,
        I_RUSER => gmem_RUSER,
        I_RRESP => gmem_RRESP,
        I_RLAST => gmem_RLAST,
        I_AWVALID => gmem_AWVALID,
        I_AWREADY => gmem_AWREADY,
        I_AWADDR => gmem_AWADDR,
        I_AWID => gmem_AWID,
        I_AWLEN => gmem_AWLEN,
        I_AWSIZE => gmem_AWSIZE,
        I_AWLOCK => gmem_AWLOCK,
        I_AWCACHE => gmem_AWCACHE,
        I_AWQOS => gmem_AWQOS,
        I_AWPROT => gmem_AWPROT,
        I_AWUSER => gmem_AWUSER,
        I_AWBURST => gmem_AWBURST,
        I_AWREGION => gmem_AWREGION,
        I_WVALID => gmem_WVALID,
        I_WREADY => gmem_WREADY,
        I_WDATA => gmem_WDATA,
        I_WID => gmem_WID,
        I_WUSER => gmem_WUSER,
        I_WLAST => gmem_WLAST,
        I_WSTRB => gmem_WSTRB,
        I_BVALID => gmem_BVALID,
        I_BREADY => gmem_BREADY,
        I_BRESP => gmem_BRESP,
        I_BID => gmem_BID,
        I_BUSER => gmem_BUSER);

    backsub_gmem_offset_m_axi_U : component backsub_gmem_offset_m_axi
    generic map (
        USER_DW => 8,
        USER_AW => 32,
        USER_MAXREQS => 5,
        C_M_AXI_ID_WIDTH => C_M_AXI_GMEM_OFFSET_ID_WIDTH,
        C_M_AXI_ADDR_WIDTH => C_M_AXI_GMEM_OFFSET_ADDR_WIDTH,
        C_M_AXI_DATA_WIDTH => C_M_AXI_GMEM_OFFSET_DATA_WIDTH,
        C_M_AXI_AWUSER_WIDTH => C_M_AXI_GMEM_OFFSET_AWUSER_WIDTH,
        C_M_AXI_ARUSER_WIDTH => C_M_AXI_GMEM_OFFSET_ARUSER_WIDTH,
        C_M_AXI_WUSER_WIDTH => C_M_AXI_GMEM_OFFSET_WUSER_WIDTH,
        C_M_AXI_RUSER_WIDTH => C_M_AXI_GMEM_OFFSET_RUSER_WIDTH,
        C_M_AXI_BUSER_WIDTH => C_M_AXI_GMEM_OFFSET_BUSER_WIDTH,
        C_USER_VALUE => C_M_AXI_GMEM_OFFSET_USER_VALUE,
        C_PROT_VALUE => C_M_AXI_GMEM_OFFSET_PROT_VALUE,
        C_CACHE_VALUE => C_M_AXI_GMEM_OFFSET_CACHE_VALUE)
    port map (
        AWVALID => m_axi_gmem_offset_AWVALID,
        AWREADY => m_axi_gmem_offset_AWREADY,
        AWADDR => m_axi_gmem_offset_AWADDR,
        AWID => m_axi_gmem_offset_AWID,
        AWLEN => m_axi_gmem_offset_AWLEN,
        AWSIZE => m_axi_gmem_offset_AWSIZE,
        AWBURST => m_axi_gmem_offset_AWBURST,
        AWLOCK => m_axi_gmem_offset_AWLOCK,
        AWCACHE => m_axi_gmem_offset_AWCACHE,
        AWPROT => m_axi_gmem_offset_AWPROT,
        AWQOS => m_axi_gmem_offset_AWQOS,
        AWREGION => m_axi_gmem_offset_AWREGION,
        AWUSER => m_axi_gmem_offset_AWUSER,
        WVALID => m_axi_gmem_offset_WVALID,
        WREADY => m_axi_gmem_offset_WREADY,
        WDATA => m_axi_gmem_offset_WDATA,
        WSTRB => m_axi_gmem_offset_WSTRB,
        WLAST => m_axi_gmem_offset_WLAST,
        WID => m_axi_gmem_offset_WID,
        WUSER => m_axi_gmem_offset_WUSER,
        ARVALID => m_axi_gmem_offset_ARVALID,
        ARREADY => m_axi_gmem_offset_ARREADY,
        ARADDR => m_axi_gmem_offset_ARADDR,
        ARID => m_axi_gmem_offset_ARID,
        ARLEN => m_axi_gmem_offset_ARLEN,
        ARSIZE => m_axi_gmem_offset_ARSIZE,
        ARBURST => m_axi_gmem_offset_ARBURST,
        ARLOCK => m_axi_gmem_offset_ARLOCK,
        ARCACHE => m_axi_gmem_offset_ARCACHE,
        ARPROT => m_axi_gmem_offset_ARPROT,
        ARQOS => m_axi_gmem_offset_ARQOS,
        ARREGION => m_axi_gmem_offset_ARREGION,
        ARUSER => m_axi_gmem_offset_ARUSER,
        RVALID => m_axi_gmem_offset_RVALID,
        RREADY => m_axi_gmem_offset_RREADY,
        RDATA => m_axi_gmem_offset_RDATA,
        RLAST => m_axi_gmem_offset_RLAST,
        RID => m_axi_gmem_offset_RID,
        RUSER => m_axi_gmem_offset_RUSER,
        RRESP => m_axi_gmem_offset_RRESP,
        BVALID => m_axi_gmem_offset_BVALID,
        BREADY => m_axi_gmem_offset_BREADY,
        BRESP => m_axi_gmem_offset_BRESP,
        BID => m_axi_gmem_offset_BID,
        BUSER => m_axi_gmem_offset_BUSER,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => backsub_gmem_offset_m_axi_U_ap_dummy_ce,
        I_ARVALID => gmem_offset_ARVALID,
        I_ARREADY => gmem_offset_ARREADY,
        I_ARADDR => gmem_offset_ARADDR,
        I_ARID => gmem_offset_ARID,
        I_ARLEN => gmem_offset_ARLEN,
        I_ARSIZE => gmem_offset_ARSIZE,
        I_ARLOCK => gmem_offset_ARLOCK,
        I_ARCACHE => gmem_offset_ARCACHE,
        I_ARQOS => gmem_offset_ARQOS,
        I_ARPROT => gmem_offset_ARPROT,
        I_ARUSER => gmem_offset_ARUSER,
        I_ARBURST => gmem_offset_ARBURST,
        I_ARREGION => gmem_offset_ARREGION,
        I_RVALID => gmem_offset_RVALID,
        I_RREADY => gmem_offset_RREADY,
        I_RDATA => gmem_offset_RDATA,
        I_RID => gmem_offset_RID,
        I_RUSER => gmem_offset_RUSER,
        I_RRESP => gmem_offset_RRESP,
        I_RLAST => gmem_offset_RLAST,
        I_AWVALID => gmem_offset_AWVALID,
        I_AWREADY => gmem_offset_AWREADY,
        I_AWADDR => gmem_offset_AWADDR,
        I_AWID => gmem_offset_AWID,
        I_AWLEN => gmem_offset_AWLEN,
        I_AWSIZE => gmem_offset_AWSIZE,
        I_AWLOCK => gmem_offset_AWLOCK,
        I_AWCACHE => gmem_offset_AWCACHE,
        I_AWQOS => gmem_offset_AWQOS,
        I_AWPROT => gmem_offset_AWPROT,
        I_AWUSER => gmem_offset_AWUSER,
        I_AWBURST => gmem_offset_AWBURST,
        I_AWREGION => gmem_offset_AWREGION,
        I_WVALID => gmem_offset_WVALID,
        I_WREADY => gmem_offset_WREADY,
        I_WDATA => gmem_offset_WDATA,
        I_WID => gmem_offset_WID,
        I_WUSER => gmem_offset_WUSER,
        I_WLAST => gmem_offset_WLAST,
        I_WSTRB => gmem_offset_WSTRB,
        I_BVALID => gmem_offset_BVALID,
        I_BREADY => gmem_offset_BREADY,
        I_BRESP => gmem_offset_BRESP,
        I_BID => gmem_offset_BID,
        I_BUSER => gmem_offset_BUSER);

    yuv_frame_U : component backsub_yuv_frame
    generic map (
        DataWidth => 32,
        AddressRange => 38400,
        AddressWidth => 16)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => yuv_frame_address0,
        ce0 => yuv_frame_ce0,
        we0 => yuv_frame_we0,
        d0 => yuv_frame_d0,
        q0 => yuv_frame_q0,
        address1 => yuv_frame_address1,
        ce1 => yuv_frame_ce1,
        q1 => yuv_frame_q1);

    grey_frame_U : component backsub_grey_frame
    generic map (
        DataWidth => 8,
        AddressRange => 76800,
        AddressWidth => 17)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => grey_frame_address0,
        ce0 => grey_frame_ce0,
        we0 => grey_frame_we0,
        d0 => grey_frame_d0,
        address1 => grey_frame_address1,
        ce1 => grey_frame_ce1,
        we1 => grey_frame_we1,
        d1 => grey_frame_d1,
        q1 => grey_frame_q1);

    grp_backsub_hls_fptoui_float_i8_fu_1529 : component backsub_hls_fptoui_float_i8
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        x => grp_backsub_hls_fptoui_float_i8_fu_1529_x,
        ap_return => grp_backsub_hls_fptoui_float_i8_fu_1529_ap_return,
        ap_ce => grp_backsub_hls_fptoui_float_i8_fu_1529_ap_ce);

    backsub_fadd_32ns_32ns_32_5_full_dsp_U1 : component backsub_fadd_32ns_32ns_32_5_full_dsp
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_1534_p0,
        din1 => grp_fu_1534_p1,
        ce => grp_fu_1534_ce,
        dout => grp_fu_1534_p2);

    backsub_fadd_32ns_32ns_32_5_full_dsp_U2 : component backsub_fadd_32ns_32ns_32_5_full_dsp
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_1538_p0,
        din1 => grp_fu_1538_p1,
        ce => grp_fu_1538_ce,
        dout => grp_fu_1538_p2);

    backsub_fmul_32ns_32ns_32_4_max_dsp_U3 : component backsub_fmul_32ns_32ns_32_4_max_dsp
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_1542_p0,
        din1 => grp_fu_1542_p1,
        ce => grp_fu_1542_ce,
        dout => grp_fu_1542_p2);

    backsub_fmul_32ns_32ns_32_4_max_dsp_U4 : component backsub_fmul_32ns_32ns_32_4_max_dsp
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_1547_p0,
        din1 => grp_fu_1547_p1,
        ce => grp_fu_1547_ce,
        dout => grp_fu_1547_p2);

    backsub_fmul_32ns_32ns_32_4_max_dsp_U5 : component backsub_fmul_32ns_32ns_32_4_max_dsp
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_1552_p0,
        din1 => grp_fu_1552_p1,
        ce => grp_fu_1552_ce,
        dout => grp_fu_1552_p2);

    backsub_sitofp_32ns_32_6_U6 : component backsub_sitofp_32ns_32_6
    generic map (
        ID => 1,
        NUM_STAGE => 6,
        din0_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_1563_p0,
        ce => grp_fu_1563_ce,
        dout => grp_fu_1563_p1);

    backsub_sitofp_32ns_32_6_U7 : component backsub_sitofp_32ns_32_6
    generic map (
        ID => 1,
        NUM_STAGE => 6,
        din0_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_1566_p0,
        ce => grp_fu_1566_ce,
        dout => grp_fu_1566_p1);

    backsub_sitofp_32ns_32_6_U8 : component backsub_sitofp_32ns_32_6
    generic map (
        ID => 1,
        NUM_STAGE => 6,
        din0_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_1569_p0,
        ce => grp_fu_1569_ce,
        dout => grp_fu_1569_p1);





    -- the current state (ap_CS_fsm) of the state machine. --
    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_st1_fsm_0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    -- ap_reg_ioackin_gmem_ARREADY assign process. --
    ap_reg_ioackin_gmem_ARREADY_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ioackin_gmem_ARREADY <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then
                    if (not((ap_const_logic_0 = ap_sig_ioackin_gmem_ARREADY))) then 
                        ap_reg_ioackin_gmem_ARREADY <= ap_const_logic_0;
                    elsif ((ap_const_logic_1 = gmem_ARREADY)) then 
                        ap_reg_ioackin_gmem_ARREADY <= ap_const_logic_1;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ioackin_gmem_offset_AWREADY assign process. --
    ap_reg_ioackin_gmem_offset_AWREADY_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ioackin_gmem_offset_AWREADY <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_sig_cseq_ST_st102_fsm_58)) then
                    if (not((ap_const_logic_0 = ap_sig_ioackin_gmem_offset_AWREADY))) then 
                        ap_reg_ioackin_gmem_offset_AWREADY <= ap_const_logic_0;
                    elsif ((ap_const_logic_1 = gmem_offset_AWREADY)) then 
                        ap_reg_ioackin_gmem_offset_AWREADY <= ap_const_logic_1;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ioackin_gmem_offset_WREADY assign process. --
    ap_reg_ioackin_gmem_offset_WREADY_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ioackin_gmem_offset_WREADY <= ap_const_logic_0;
            else
                if (ap_sig_bdd_2486) then
                    if (not(((ap_const_lv1_0 = ap_reg_ppstg_exitcond1_reg_7966_pp3_it1) and (ap_const_logic_0 = ap_sig_ioackin_gmem_offset_WREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp3_it2)))) then 
                        ap_reg_ioackin_gmem_offset_WREADY <= ap_const_logic_0;
                    elsif ((ap_const_logic_1 = gmem_offset_WREADY)) then 
                        ap_reg_ioackin_gmem_offset_WREADY <= ap_const_logic_1;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it0 assign process. --
    ap_reg_ppiten_pp0_it0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_8) and not((ap_sig_bdd_440 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))) and not((ap_const_lv1_0 = exitcond_fu_1953_p2)))) then 
                    ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) then 
                    ap_reg_ppiten_pp0_it0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it1 assign process. --
    ap_reg_ppiten_pp0_it1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_8) and not((ap_sig_bdd_440 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))) and (ap_const_lv1_0 = exitcond_fu_1953_p2))) then 
                    ap_reg_ppiten_pp0_it1 <= ap_const_logic_1;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_8) and not((ap_sig_bdd_440 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))) and not((ap_const_lv1_0 = exitcond_fu_1953_p2))))) then 
                    ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it2 assign process. --
    ap_reg_ppiten_pp0_it2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp0_it2 <= ap_const_logic_0;
            else
                if (not((ap_sig_bdd_440 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)))) then 
                    ap_reg_ppiten_pp0_it2 <= ap_reg_ppiten_pp0_it1;
                elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) then 
                    ap_reg_ppiten_pp0_it2 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp1_it0 assign process. --
    ap_reg_ppiten_pp1_it0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp1_it0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_10) and (ap_const_lv1_0 = tmp_5_fu_1970_p2))) then 
                    ap_reg_ppiten_pp1_it0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_9) and (ap_const_lv1_0 = init_read_reg_5844))) then 
                    ap_reg_ppiten_pp1_it0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp1_it1 assign process. --
    ap_reg_ppiten_pp1_it1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp1_it1 <= ap_const_logic_0;
            else
                if ((not((ap_const_lv1_0 = tmp_5_reg_5878)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg31_fsm_41))) then 
                    ap_reg_ppiten_pp1_it1 <= ap_const_logic_1;
                elsif ((((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_9) and (ap_const_lv1_0 = init_read_reg_5844)) or ((ap_const_lv1_0 = tmp_5_reg_5878) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg31_fsm_41)))) then 
                    ap_reg_ppiten_pp1_it1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp1_it2 assign process. --
    ap_reg_ppiten_pp1_it2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp1_it2 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg31_fsm_41)) then 
                    ap_reg_ppiten_pp1_it2 <= ap_reg_ppiten_pp1_it1;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_9) and (ap_const_lv1_0 = init_read_reg_5844))) then 
                    ap_reg_ppiten_pp1_it2 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp2_it0 assign process. --
    ap_reg_ppiten_pp2_it0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp2_it0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg0_fsm_42) and (ap_const_lv1_0 = tmp_3_fu_4880_p2))) then 
                    ap_reg_ppiten_pp2_it0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_9) and not((ap_const_lv1_0 = init_read_reg_5844)))) then 
                    ap_reg_ppiten_pp2_it0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp2_it1 assign process. --
    ap_reg_ppiten_pp2_it1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp2_it1 <= ap_const_logic_0;
            else
                if ((not((ap_const_lv1_0 = tmp_3_reg_7687)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg15_fsm_57))) then 
                    ap_reg_ppiten_pp2_it1 <= ap_const_logic_1;
                elsif ((((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_9) and not((ap_const_lv1_0 = init_read_reg_5844))) or ((ap_const_lv1_0 = tmp_3_reg_7687) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg15_fsm_57)))) then 
                    ap_reg_ppiten_pp2_it1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp3_it0 assign process. --
    ap_reg_ppiten_pp3_it0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp3_it0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp3_stg0_fsm_59) and not(((ap_const_lv1_0 = ap_reg_ppstg_exitcond1_reg_7966_pp3_it1) and (ap_const_logic_0 = ap_sig_ioackin_gmem_offset_WREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp3_it2))) and not((ap_const_lv1_0 = exitcond1_fu_5827_p2)))) then 
                    ap_reg_ppiten_pp3_it0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st102_fsm_58) and not((ap_const_logic_0 = ap_sig_ioackin_gmem_offset_AWREADY)))) then 
                    ap_reg_ppiten_pp3_it0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp3_it1 assign process. --
    ap_reg_ppiten_pp3_it1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp3_it1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp3_stg0_fsm_59) and not(((ap_const_lv1_0 = ap_reg_ppstg_exitcond1_reg_7966_pp3_it1) and (ap_const_logic_0 = ap_sig_ioackin_gmem_offset_WREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp3_it2))) and (ap_const_lv1_0 = exitcond1_fu_5827_p2))) then 
                    ap_reg_ppiten_pp3_it1 <= ap_const_logic_1;
                elsif ((((ap_const_logic_1 = ap_sig_cseq_ST_st102_fsm_58) and not((ap_const_logic_0 = ap_sig_ioackin_gmem_offset_AWREADY))) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp3_stg0_fsm_59) and not(((ap_const_lv1_0 = ap_reg_ppstg_exitcond1_reg_7966_pp3_it1) and (ap_const_logic_0 = ap_sig_ioackin_gmem_offset_WREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp3_it2))) and not((ap_const_lv1_0 = exitcond1_fu_5827_p2))))) then 
                    ap_reg_ppiten_pp3_it1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp3_it2 assign process. --
    ap_reg_ppiten_pp3_it2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp3_it2 <= ap_const_logic_0;
            else
                if (not(((ap_const_lv1_0 = ap_reg_ppstg_exitcond1_reg_7966_pp3_it1) and (ap_const_logic_0 = ap_sig_ioackin_gmem_offset_WREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp3_it2)))) then 
                    ap_reg_ppiten_pp3_it2 <= ap_reg_ppiten_pp3_it1;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st102_fsm_58) and not((ap_const_logic_0 = ap_sig_ioackin_gmem_offset_AWREADY)))) then 
                    ap_reg_ppiten_pp3_it2 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- i1_reg_1494 assign process. --
    i1_reg_1494_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_9) and (ap_const_lv1_0 = init_read_reg_5844))) then 
                i1_reg_1494 <= ap_const_lv17_0;
            elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and not((ap_const_lv1_0 = tmp_5_reg_5878)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_10))) then 
                i1_reg_1494 <= i_2_15_reg_7013;
            end if; 
        end if;
    end process;

    -- i_reg_1506 assign process. --
    i_reg_1506_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_9) and not((ap_const_lv1_0 = init_read_reg_5844)))) then 
                i_reg_1506 <= ap_const_lv17_0;
            elsif ((not((ap_const_lv1_0 = tmp_3_reg_7687)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg0_fsm_42) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it1))) then 
                i_reg_1506 <= i_1_15_reg_7956;
            end if; 
        end if;
    end process;

    -- indvar8_reg_1518 assign process. --
    indvar8_reg_1518_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp3_stg0_fsm_59) and (ap_const_logic_1 = ap_reg_ppiten_pp3_it0) and not(((ap_const_lv1_0 = ap_reg_ppstg_exitcond1_reg_7966_pp3_it1) and (ap_const_logic_0 = ap_sig_ioackin_gmem_offset_WREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp3_it2))) and (ap_const_lv1_0 = exitcond1_fu_5827_p2))) then 
                indvar8_reg_1518 <= indvar_next9_fu_5833_p2;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st102_fsm_58) and not((ap_const_logic_0 = ap_sig_ioackin_gmem_offset_AWREADY)))) then 
                indvar8_reg_1518 <= ap_const_lv17_0;
            end if; 
        end if;
    end process;

    -- indvar_reg_1482 assign process. --
    indvar_reg_1482_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_8) and (exitcond_reg_5864 = ap_const_lv1_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not((ap_sig_bdd_440 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))))) then 
                indvar_reg_1482 <= indvar_next_reg_5868;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) then 
                indvar_reg_1482 <= ap_const_lv16_0;
            end if; 
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp3_stg0_fsm_59) and not(((ap_const_lv1_0 = ap_reg_ppstg_exitcond1_reg_7966_pp3_it1) and (ap_const_logic_0 = ap_sig_ioackin_gmem_offset_WREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp3_it2))))) then
                ap_reg_ppstg_exitcond1_reg_7966_pp3_it1 <= exitcond1_reg_7966;
                exitcond1_reg_7966 <= exitcond1_fu_5827_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_8) and not((ap_sig_bdd_440 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))))) then
                ap_reg_ppstg_exitcond_reg_5864_pp0_it1 <= exitcond_reg_5864;
                ap_reg_ppstg_indvar_reg_1482_pp0_it1 <= indvar_reg_1482;
                exitcond_reg_5864 <= exitcond_fu_1953_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg1_fsm_11)) then
                ap_reg_ppstg_reg_1613_pp1_it1 <= reg_1613;
                ap_reg_ppstg_reg_1619_pp1_it1 <= reg_1619;
                    ap_reg_ppstg_tmp_27_1_reg_5953_pp1_it1(0) <= tmp_27_1_reg_5953(0);    ap_reg_ppstg_tmp_27_1_reg_5953_pp1_it1(16 downto 2) <= tmp_27_1_reg_5953(16 downto 2);
                    ap_reg_ppstg_tmp_30_1_reg_5963_pp1_it1(16 downto 2) <= tmp_30_1_reg_5963(16 downto 2);
                ap_reg_ppstg_tmp_59_reg_5917_pp1_it1 <= tmp_59_reg_5917;
                ap_reg_ppstg_tmp_62_reg_5946_pp1_it1 <= tmp_62_reg_5946;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg2_fsm_12)) then
                ap_reg_ppstg_reg_1624_pp1_it1 <= reg_1624;
                ap_reg_ppstg_reg_1629_pp1_it1 <= reg_1629;
                    ap_reg_ppstg_tmp_27_2_reg_6037_pp1_it1(1 downto 0) <= tmp_27_2_reg_6037(1 downto 0);    ap_reg_ppstg_tmp_27_2_reg_6037_pp1_it1(16 downto 3) <= tmp_27_2_reg_6037(16 downto 3);
                    ap_reg_ppstg_tmp_30_2_reg_6047_pp1_it1(1) <= tmp_30_2_reg_6047(1);    ap_reg_ppstg_tmp_30_2_reg_6047_pp1_it1(16 downto 3) <= tmp_30_2_reg_6047(16 downto 3);
                ap_reg_ppstg_tmp_65_reg_6030_pp1_it1 <= tmp_65_reg_6030;
                ap_reg_ppstg_tmp_68_reg_6057_pp1_it1 <= tmp_68_reg_6057;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg3_fsm_13)) then
                ap_reg_ppstg_reg_1634_pp1_it1 <= reg_1634;
                ap_reg_ppstg_reg_1639_pp1_it1 <= reg_1639;
                    ap_reg_ppstg_tmp_27_3_reg_6121_pp1_it1(0) <= tmp_27_3_reg_6121(0);    ap_reg_ppstg_tmp_27_3_reg_6121_pp1_it1(16 downto 3) <= tmp_27_3_reg_6121(16 downto 3);
                    ap_reg_ppstg_tmp_30_3_reg_6131_pp1_it1(16 downto 3) <= tmp_30_3_reg_6131(16 downto 3);
                ap_reg_ppstg_tmp_71_reg_6141_pp1_it1 <= tmp_71_reg_6141;
                ap_reg_ppstg_tmp_74_reg_6148_pp1_it1 <= tmp_74_reg_6148;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg4_fsm_14)) then
                ap_reg_ppstg_reg_1644_pp1_it1 <= reg_1644;
                ap_reg_ppstg_reg_1649_pp1_it1 <= reg_1649;
                    ap_reg_ppstg_tmp_27_4_reg_6212_pp1_it1(2 downto 0) <= tmp_27_4_reg_6212(2 downto 0);    ap_reg_ppstg_tmp_27_4_reg_6212_pp1_it1(16 downto 4) <= tmp_27_4_reg_6212(16 downto 4);
                    ap_reg_ppstg_tmp_30_4_reg_6222_pp1_it1(2 downto 1) <= tmp_30_4_reg_6222(2 downto 1);    ap_reg_ppstg_tmp_30_4_reg_6222_pp1_it1(16 downto 4) <= tmp_30_4_reg_6222(16 downto 4);
                ap_reg_ppstg_tmp_77_reg_6232_pp1_it1 <= tmp_77_reg_6232;
                ap_reg_ppstg_tmp_80_reg_6239_pp1_it1 <= tmp_80_reg_6239;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg8_fsm_18)) then
                ap_reg_ppstg_tmp_101_reg_6638_pp1_it1 <= tmp_101_reg_6638;
                ap_reg_ppstg_tmp_104_reg_6652_pp1_it1 <= tmp_104_reg_6652;
                    ap_reg_ppstg_tmp_27_8_reg_6618_pp1_it1(3 downto 0) <= tmp_27_8_reg_6618(3 downto 0);    ap_reg_ppstg_tmp_27_8_reg_6618_pp1_it1(16 downto 5) <= tmp_27_8_reg_6618(16 downto 5);
                    ap_reg_ppstg_tmp_30_8_reg_6628_pp1_it1(3 downto 1) <= tmp_30_8_reg_6628(3 downto 1);    ap_reg_ppstg_tmp_30_8_reg_6628_pp1_it1(16 downto 5) <= tmp_30_8_reg_6628(16 downto 5);
                ap_reg_ppstg_yuv_struct_y2_write_assign_29_reg_6645_pp1_it1 <= yuv_struct_y2_write_assign_29_reg_6645;
                ap_reg_ppstg_yuv_struct_y2_write_assign_30_reg_6659_pp1_it1 <= yuv_struct_y2_write_assign_30_reg_6659;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_10)) then
                    ap_reg_ppstg_tmp_12_reg_5887_pp1_it1(16 downto 0) <= tmp_12_reg_5887(16 downto 0);
                    ap_reg_ppstg_tmp_15_reg_5897_pp1_it1(16 downto 1) <= tmp_15_reg_5897(16 downto 1);
                ap_reg_ppstg_tmp_5_reg_5878_pp1_it1 <= tmp_5_reg_5878;
                ap_reg_ppstg_tmp_5_reg_5878_pp1_it2 <= ap_reg_ppstg_tmp_5_reg_5878_pp1_it1;
                tmp_5_reg_5878 <= tmp_5_fu_1970_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg11_fsm_21)) then
                    ap_reg_ppstg_tmp_27_10_reg_6817_pp1_it1(0) <= tmp_27_10_reg_6817(0);    ap_reg_ppstg_tmp_27_10_reg_6817_pp1_it1(3) <= tmp_27_10_reg_6817(3);    ap_reg_ppstg_tmp_27_10_reg_6817_pp1_it1(16 downto 5) <= tmp_27_10_reg_6817(16 downto 5);
                    ap_reg_ppstg_tmp_30_10_reg_6827_pp1_it1(3) <= tmp_30_10_reg_6827(3);    ap_reg_ppstg_tmp_30_10_reg_6827_pp1_it1(16 downto 5) <= tmp_30_10_reg_6827(16 downto 5);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg12_fsm_22)) then
                    ap_reg_ppstg_tmp_27_11_reg_6874_pp1_it1(2 downto 0) <= tmp_27_11_reg_6874(2 downto 0);    ap_reg_ppstg_tmp_27_11_reg_6874_pp1_it1(16 downto 5) <= tmp_27_11_reg_6874(16 downto 5);
                    ap_reg_ppstg_tmp_30_11_reg_6884_pp1_it1(2 downto 1) <= tmp_30_11_reg_6884(2 downto 1);    ap_reg_ppstg_tmp_30_11_reg_6884_pp1_it1(16 downto 5) <= tmp_30_11_reg_6884(16 downto 5);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg13_fsm_23)) then
                    ap_reg_ppstg_tmp_27_12_reg_6931_pp1_it1(0) <= tmp_27_12_reg_6931(0);    ap_reg_ppstg_tmp_27_12_reg_6931_pp1_it1(2) <= tmp_27_12_reg_6931(2);    ap_reg_ppstg_tmp_27_12_reg_6931_pp1_it1(16 downto 5) <= tmp_27_12_reg_6931(16 downto 5);
                    ap_reg_ppstg_tmp_30_12_reg_6941_pp1_it1(2) <= tmp_30_12_reg_6941(2);    ap_reg_ppstg_tmp_30_12_reg_6941_pp1_it1(16 downto 5) <= tmp_30_12_reg_6941(16 downto 5);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg14_fsm_24)) then
                    ap_reg_ppstg_tmp_27_13_reg_6988_pp1_it1(1 downto 0) <= tmp_27_13_reg_6988(1 downto 0);    ap_reg_ppstg_tmp_27_13_reg_6988_pp1_it1(16 downto 5) <= tmp_27_13_reg_6988(16 downto 5);
                    ap_reg_ppstg_tmp_30_13_reg_6998_pp1_it1(1) <= tmp_30_13_reg_6998(1);    ap_reg_ppstg_tmp_30_13_reg_6998_pp1_it1(16 downto 5) <= tmp_30_13_reg_6998(16 downto 5);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg15_fsm_25)) then
                    ap_reg_ppstg_tmp_27_14_reg_7055_pp1_it1(0) <= tmp_27_14_reg_7055(0);    ap_reg_ppstg_tmp_27_14_reg_7055_pp1_it1(16 downto 5) <= tmp_27_14_reg_7055(16 downto 5);
                    ap_reg_ppstg_tmp_30_14_reg_7065_pp1_it1(16 downto 5) <= tmp_30_14_reg_7065(16 downto 5);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg5_fsm_15)) then
                    ap_reg_ppstg_tmp_27_5_reg_6303_pp1_it1(0) <= tmp_27_5_reg_6303(0);    ap_reg_ppstg_tmp_27_5_reg_6303_pp1_it1(2) <= tmp_27_5_reg_6303(2);    ap_reg_ppstg_tmp_27_5_reg_6303_pp1_it1(16 downto 4) <= tmp_27_5_reg_6303(16 downto 4);
                    ap_reg_ppstg_tmp_30_5_reg_6313_pp1_it1(2) <= tmp_30_5_reg_6313(2);    ap_reg_ppstg_tmp_30_5_reg_6313_pp1_it1(16 downto 4) <= tmp_30_5_reg_6313(16 downto 4);
                ap_reg_ppstg_tmp_83_reg_6323_pp1_it1 <= tmp_83_reg_6323;
                ap_reg_ppstg_tmp_86_reg_6337_pp1_it1 <= tmp_86_reg_6337;
                ap_reg_ppstg_yuv_struct_y2_write_assign_23_reg_6330_pp1_it1 <= yuv_struct_y2_write_assign_23_reg_6330;
                ap_reg_ppstg_yuv_struct_y2_write_assign_24_reg_6344_pp1_it1 <= yuv_struct_y2_write_assign_24_reg_6344;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg6_fsm_16)) then
                    ap_reg_ppstg_tmp_27_6_reg_6408_pp1_it1(1 downto 0) <= tmp_27_6_reg_6408(1 downto 0);    ap_reg_ppstg_tmp_27_6_reg_6408_pp1_it1(16 downto 4) <= tmp_27_6_reg_6408(16 downto 4);
                    ap_reg_ppstg_tmp_30_6_reg_6418_pp1_it1(1) <= tmp_30_6_reg_6418(1);    ap_reg_ppstg_tmp_30_6_reg_6418_pp1_it1(16 downto 4) <= tmp_30_6_reg_6418(16 downto 4);
                ap_reg_ppstg_tmp_89_reg_6428_pp1_it1 <= tmp_89_reg_6428;
                ap_reg_ppstg_tmp_92_reg_6442_pp1_it1 <= tmp_92_reg_6442;
                ap_reg_ppstg_yuv_struct_y2_write_assign_25_reg_6435_pp1_it1 <= yuv_struct_y2_write_assign_25_reg_6435;
                ap_reg_ppstg_yuv_struct_y2_write_assign_26_reg_6449_pp1_it1 <= yuv_struct_y2_write_assign_26_reg_6449;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg7_fsm_17)) then
                    ap_reg_ppstg_tmp_27_7_reg_6513_pp1_it1(0) <= tmp_27_7_reg_6513(0);    ap_reg_ppstg_tmp_27_7_reg_6513_pp1_it1(16 downto 4) <= tmp_27_7_reg_6513(16 downto 4);
                    ap_reg_ppstg_tmp_30_7_reg_6523_pp1_it1(16 downto 4) <= tmp_30_7_reg_6523(16 downto 4);
                ap_reg_ppstg_tmp_95_reg_6533_pp1_it1 <= tmp_95_reg_6533;
                ap_reg_ppstg_tmp_98_reg_6547_pp1_it1 <= tmp_98_reg_6547;
                ap_reg_ppstg_yuv_struct_y2_write_assign_27_reg_6540_pp1_it1 <= yuv_struct_y2_write_assign_27_reg_6540;
                ap_reg_ppstg_yuv_struct_y2_write_assign_28_reg_6554_pp1_it1 <= yuv_struct_y2_write_assign_28_reg_6554;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg9_fsm_19)) then
                    ap_reg_ppstg_tmp_27_9_reg_6703_pp1_it1(0) <= tmp_27_9_reg_6703(0);    ap_reg_ppstg_tmp_27_9_reg_6703_pp1_it1(3 downto 2) <= tmp_27_9_reg_6703(3 downto 2);    ap_reg_ppstg_tmp_27_9_reg_6703_pp1_it1(16 downto 5) <= tmp_27_9_reg_6703(16 downto 5);
                    ap_reg_ppstg_tmp_30_9_reg_6713_pp1_it1(3 downto 2) <= tmp_30_9_reg_6713(3 downto 2);    ap_reg_ppstg_tmp_30_9_reg_6713_pp1_it1(16 downto 5) <= tmp_30_9_reg_6713(16 downto 5);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg10_fsm_20)) then
                    ap_reg_ppstg_tmp_27_s_reg_6760_pp1_it1(1 downto 0) <= tmp_27_s_reg_6760(1 downto 0);    ap_reg_ppstg_tmp_27_s_reg_6760_pp1_it1(3) <= tmp_27_s_reg_6760(3);    ap_reg_ppstg_tmp_27_s_reg_6760_pp1_it1(16 downto 5) <= tmp_27_s_reg_6760(16 downto 5);
                    ap_reg_ppstg_tmp_30_s_reg_6770_pp1_it1(1) <= tmp_30_s_reg_6770(1);    ap_reg_ppstg_tmp_30_s_reg_6770_pp1_it1(3) <= tmp_30_s_reg_6770(3);    ap_reg_ppstg_tmp_30_s_reg_6770_pp1_it1(16 downto 5) <= tmp_30_s_reg_6770(16 downto 5);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_10) and not((ap_const_lv1_0 = tmp_5_fu_1970_p2)))) then
                frame_addr_32_reg_5892 <= tmp_12_fu_1991_p1(17 - 1 downto 0);
                    frame_addr_33_reg_5902(16 downto 1) <= tmp_15_fu_2002_p1(17 - 1 downto 0)(16 downto 1);
                    i_2_s_reg_5907(0) <= i_2_s_fu_2007_p2(0);    i_2_s_reg_5907(16 downto 2) <= i_2_s_fu_2007_p2(16 downto 2);
                    tmp_12_reg_5887(16 downto 0) <= tmp_12_fu_1991_p1(16 downto 0);
                    tmp_15_reg_5897(16 downto 1) <= tmp_15_fu_2002_p1(16 downto 1);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg1_fsm_11) and not((ap_const_lv1_0 = tmp_5_reg_5878)))) then
                    frame_addr_34_reg_5958(0) <= tmp_27_1_fu_2044_p1(17 - 1 downto 0)(0);    frame_addr_34_reg_5958(16 downto 2) <= tmp_27_1_fu_2044_p1(17 - 1 downto 0)(16 downto 2);
                    frame_addr_35_reg_5968(16 downto 2) <= tmp_30_1_fu_2054_p1(17 - 1 downto 0)(16 downto 2);
                    i_2_1_reg_5973(1 downto 0) <= i_2_1_fu_2059_p2(1 downto 0);    i_2_1_reg_5973(16 downto 3) <= i_2_1_fu_2059_p2(16 downto 3);
                    i_2_2_reg_5983(0) <= i_2_2_fu_2080_p2(0);    i_2_2_reg_5983(16 downto 3) <= i_2_2_fu_2080_p2(16 downto 3);
                    tmp_27_1_reg_5953(0) <= tmp_27_1_fu_2044_p1(0);    tmp_27_1_reg_5953(16 downto 2) <= tmp_27_1_fu_2044_p1(16 downto 2);
                    tmp_30_1_reg_5963(16 downto 2) <= tmp_30_1_fu_2054_p1(16 downto 2);
                tmp_59_reg_5917 <= tmp_59_fu_2028_p1;
                tmp_60_reg_5924 <= tmp_60_fu_2032_p1;
                tmp_61_reg_5935 <= tmp_61_fu_2036_p1;
                tmp_62_reg_5946 <= tmp_62_fu_2040_p1;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((ap_const_lv1_0 = tmp_5_reg_5878)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg2_fsm_12))) then
                    frame_addr_36_reg_6042(1 downto 0) <= tmp_27_2_fu_2126_p1(17 - 1 downto 0)(1 downto 0);    frame_addr_36_reg_6042(16 downto 3) <= tmp_27_2_fu_2126_p1(17 - 1 downto 0)(16 downto 3);
                    frame_addr_37_reg_6052(1) <= tmp_30_2_fu_2136_p1(17 - 1 downto 0)(1);    frame_addr_37_reg_6052(16 downto 3) <= tmp_30_2_fu_2136_p1(17 - 1 downto 0)(16 downto 3);
                    i_2_3_reg_6064(2 downto 0) <= i_2_3_fu_2145_p2(2 downto 0);    i_2_3_reg_6064(16 downto 4) <= i_2_3_fu_2145_p2(16 downto 4);
                    i_2_4_reg_6074(0) <= i_2_4_fu_2166_p2(0);    i_2_4_reg_6074(2) <= i_2_4_fu_2166_p2(2);    i_2_4_reg_6074(16 downto 4) <= i_2_4_fu_2166_p2(16 downto 4);
                    tmp_27_2_reg_6037(1 downto 0) <= tmp_27_2_fu_2126_p1(1 downto 0);    tmp_27_2_reg_6037(16 downto 3) <= tmp_27_2_fu_2126_p1(16 downto 3);
                    tmp_30_2_reg_6047(1) <= tmp_30_2_fu_2136_p1(1);    tmp_30_2_reg_6047(16 downto 3) <= tmp_30_2_fu_2136_p1(16 downto 3);
                tmp_63_reg_6008 <= tmp_63_fu_2114_p1;
                tmp_64_reg_6019 <= tmp_64_fu_2118_p1;
                tmp_65_reg_6030 <= tmp_65_fu_2122_p1;
                tmp_68_reg_6057 <= tmp_68_fu_2141_p1;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((ap_const_lv1_0 = tmp_5_reg_5878)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg3_fsm_13))) then
                    frame_addr_38_reg_6126(0) <= tmp_27_3_fu_2207_p1(17 - 1 downto 0)(0);    frame_addr_38_reg_6126(16 downto 3) <= tmp_27_3_fu_2207_p1(17 - 1 downto 0)(16 downto 3);
                    frame_addr_39_reg_6136(16 downto 3) <= tmp_30_3_fu_2217_p1(17 - 1 downto 0)(16 downto 3);
                    i_2_5_reg_6155(1 downto 0) <= i_2_5_fu_2230_p2(1 downto 0);    i_2_5_reg_6155(16 downto 4) <= i_2_5_fu_2230_p2(16 downto 4);
                    i_2_6_reg_6165(0) <= i_2_6_fu_2251_p2(0);    i_2_6_reg_6165(16 downto 4) <= i_2_6_fu_2251_p2(16 downto 4);
                    tmp_27_3_reg_6121(0) <= tmp_27_3_fu_2207_p1(0);    tmp_27_3_reg_6121(16 downto 3) <= tmp_27_3_fu_2207_p1(16 downto 3);
                    tmp_30_3_reg_6131(16 downto 3) <= tmp_30_3_fu_2217_p1(16 downto 3);
                tmp_66_reg_6099 <= tmp_66_fu_2199_p1;
                tmp_67_reg_6110 <= tmp_67_fu_2203_p1;
                tmp_71_reg_6141 <= tmp_71_fu_2222_p1;
                tmp_74_reg_6148 <= tmp_74_fu_2226_p1;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((ap_const_lv1_0 = tmp_5_reg_5878)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg4_fsm_14))) then
                    frame_addr_40_reg_6217(2 downto 0) <= tmp_27_4_fu_2293_p1(17 - 1 downto 0)(2 downto 0);    frame_addr_40_reg_6217(16 downto 4) <= tmp_27_4_fu_2293_p1(17 - 1 downto 0)(16 downto 4);
                    frame_addr_41_reg_6227(2 downto 1) <= tmp_30_4_fu_2303_p1(17 - 1 downto 0)(2 downto 1);    frame_addr_41_reg_6227(16 downto 4) <= tmp_30_4_fu_2303_p1(17 - 1 downto 0)(16 downto 4);
                    i_2_7_reg_6246(3 downto 0) <= i_2_7_fu_2316_p2(3 downto 0);    i_2_7_reg_6246(16 downto 5) <= i_2_7_fu_2316_p2(16 downto 5);
                    i_2_8_reg_6256(0) <= i_2_8_fu_2337_p2(0);    i_2_8_reg_6256(3 downto 2) <= i_2_8_fu_2337_p2(3 downto 2);    i_2_8_reg_6256(16 downto 5) <= i_2_8_fu_2337_p2(16 downto 5);
                    tmp_27_4_reg_6212(2 downto 0) <= tmp_27_4_fu_2293_p1(2 downto 0);    tmp_27_4_reg_6212(16 downto 4) <= tmp_27_4_fu_2293_p1(16 downto 4);
                    tmp_30_4_reg_6222(2 downto 1) <= tmp_30_4_fu_2303_p1(2 downto 1);    tmp_30_4_reg_6222(16 downto 4) <= tmp_30_4_fu_2303_p1(16 downto 4);
                tmp_69_reg_6190 <= tmp_69_fu_2285_p1;
                tmp_70_reg_6201 <= tmp_70_fu_2289_p1;
                tmp_77_reg_6232 <= tmp_77_fu_2308_p1;
                tmp_80_reg_6239 <= tmp_80_fu_2312_p1;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((ap_const_lv1_0 = tmp_5_reg_5878)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg5_fsm_15))) then
                    frame_addr_42_reg_6308(0) <= tmp_27_5_fu_2379_p1(17 - 1 downto 0)(0);    frame_addr_42_reg_6308(2) <= tmp_27_5_fu_2379_p1(17 - 1 downto 0)(2);    frame_addr_42_reg_6308(16 downto 4) <= tmp_27_5_fu_2379_p1(17 - 1 downto 0)(16 downto 4);
                    frame_addr_43_reg_6318(2) <= tmp_30_5_fu_2389_p1(17 - 1 downto 0)(2);    frame_addr_43_reg_6318(16 downto 4) <= tmp_30_5_fu_2389_p1(17 - 1 downto 0)(16 downto 4);
                    i_2_10_reg_6361(0) <= i_2_10_fu_2423_p2(0);    i_2_10_reg_6361(3) <= i_2_10_fu_2423_p2(3);    i_2_10_reg_6361(16 downto 5) <= i_2_10_fu_2423_p2(16 downto 5);
                    i_2_9_reg_6351(1 downto 0) <= i_2_9_fu_2402_p2(1 downto 0);    i_2_9_reg_6351(3) <= i_2_9_fu_2402_p2(3);    i_2_9_reg_6351(16 downto 5) <= i_2_9_fu_2402_p2(16 downto 5);
                    tmp_27_5_reg_6303(0) <= tmp_27_5_fu_2379_p1(0);    tmp_27_5_reg_6303(2) <= tmp_27_5_fu_2379_p1(2);    tmp_27_5_reg_6303(16 downto 4) <= tmp_27_5_fu_2379_p1(16 downto 4);
                    tmp_30_5_reg_6313(2) <= tmp_30_5_fu_2389_p1(2);    tmp_30_5_reg_6313(16 downto 4) <= tmp_30_5_fu_2389_p1(16 downto 4);
                tmp_72_reg_6281 <= tmp_72_fu_2371_p1;
                tmp_73_reg_6292 <= tmp_73_fu_2375_p1;
                tmp_83_reg_6323 <= tmp_83_fu_2394_p1;
                tmp_86_reg_6337 <= tmp_86_fu_2398_p1;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((ap_const_lv1_0 = tmp_5_reg_5878)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg6_fsm_16))) then
                    frame_addr_44_reg_6413(1 downto 0) <= tmp_27_6_fu_2465_p1(17 - 1 downto 0)(1 downto 0);    frame_addr_44_reg_6413(16 downto 4) <= tmp_27_6_fu_2465_p1(17 - 1 downto 0)(16 downto 4);
                    frame_addr_45_reg_6423(1) <= tmp_30_6_fu_2475_p1(17 - 1 downto 0)(1);    frame_addr_45_reg_6423(16 downto 4) <= tmp_30_6_fu_2475_p1(17 - 1 downto 0)(16 downto 4);
                    i_2_11_reg_6456(2 downto 0) <= i_2_11_fu_2488_p2(2 downto 0);    i_2_11_reg_6456(16 downto 5) <= i_2_11_fu_2488_p2(16 downto 5);
                    i_2_12_reg_6466(0) <= i_2_12_fu_2509_p2(0);    i_2_12_reg_6466(2) <= i_2_12_fu_2509_p2(2);    i_2_12_reg_6466(16 downto 5) <= i_2_12_fu_2509_p2(16 downto 5);
                    tmp_27_6_reg_6408(1 downto 0) <= tmp_27_6_fu_2465_p1(1 downto 0);    tmp_27_6_reg_6408(16 downto 4) <= tmp_27_6_fu_2465_p1(16 downto 4);
                    tmp_30_6_reg_6418(1) <= tmp_30_6_fu_2475_p1(1);    tmp_30_6_reg_6418(16 downto 4) <= tmp_30_6_fu_2475_p1(16 downto 4);
                tmp_75_reg_6386 <= tmp_75_fu_2457_p1;
                tmp_76_reg_6397 <= tmp_76_fu_2461_p1;
                tmp_89_reg_6428 <= tmp_89_fu_2480_p1;
                tmp_92_reg_6442 <= tmp_92_fu_2484_p1;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((ap_const_lv1_0 = tmp_5_reg_5878)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg7_fsm_17))) then
                    frame_addr_46_reg_6518(0) <= tmp_27_7_fu_2550_p1(17 - 1 downto 0)(0);    frame_addr_46_reg_6518(16 downto 4) <= tmp_27_7_fu_2550_p1(17 - 1 downto 0)(16 downto 4);
                    frame_addr_47_reg_6528(16 downto 4) <= tmp_30_7_fu_2560_p1(17 - 1 downto 0)(16 downto 4);
                    i_2_13_reg_6561(1 downto 0) <= i_2_13_fu_2573_p2(1 downto 0);    i_2_13_reg_6561(16 downto 5) <= i_2_13_fu_2573_p2(16 downto 5);
                    i_2_14_reg_6571(0) <= i_2_14_fu_2594_p2(0);    i_2_14_reg_6571(16 downto 5) <= i_2_14_fu_2594_p2(16 downto 5);
                    tmp_27_7_reg_6513(0) <= tmp_27_7_fu_2550_p1(0);    tmp_27_7_reg_6513(16 downto 4) <= tmp_27_7_fu_2550_p1(16 downto 4);
                    tmp_30_7_reg_6523(16 downto 4) <= tmp_30_7_fu_2560_p1(16 downto 4);
                tmp_78_reg_6491 <= tmp_78_fu_2542_p1;
                tmp_79_reg_6502 <= tmp_79_fu_2546_p1;
                tmp_95_reg_6533 <= tmp_95_fu_2565_p1;
                tmp_98_reg_6547 <= tmp_98_fu_2569_p1;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((ap_const_lv1_0 = tmp_5_reg_5878)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg8_fsm_18))) then
                    frame_addr_48_reg_6623(3 downto 0) <= tmp_27_8_fu_2636_p1(17 - 1 downto 0)(3 downto 0);    frame_addr_48_reg_6623(16 downto 5) <= tmp_27_8_fu_2636_p1(17 - 1 downto 0)(16 downto 5);
                    frame_addr_49_reg_6633(3 downto 1) <= tmp_30_8_fu_2646_p1(17 - 1 downto 0)(3 downto 1);    frame_addr_49_reg_6633(16 downto 5) <= tmp_30_8_fu_2646_p1(17 - 1 downto 0)(16 downto 5);
                tmp_101_reg_6638 <= tmp_101_fu_2651_p1;
                tmp_104_reg_6652 <= tmp_104_fu_2655_p1;
                    tmp_27_8_reg_6618(3 downto 0) <= tmp_27_8_fu_2636_p1(3 downto 0);    tmp_27_8_reg_6618(16 downto 5) <= tmp_27_8_fu_2636_p1(16 downto 5);
                    tmp_30_8_reg_6628(3 downto 1) <= tmp_30_8_fu_2646_p1(3 downto 1);    tmp_30_8_reg_6628(16 downto 5) <= tmp_30_8_fu_2646_p1(16 downto 5);
                tmp_81_reg_6596 <= tmp_81_fu_2628_p1;
                tmp_82_reg_6607 <= tmp_82_fu_2632_p1;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((ap_const_lv1_0 = tmp_5_reg_5878)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg9_fsm_19))) then
                    frame_addr_50_reg_6708(0) <= tmp_27_9_fu_2680_p1(17 - 1 downto 0)(0);    frame_addr_50_reg_6708(3 downto 2) <= tmp_27_9_fu_2680_p1(17 - 1 downto 0)(3 downto 2);    frame_addr_50_reg_6708(16 downto 5) <= tmp_27_9_fu_2680_p1(17 - 1 downto 0)(16 downto 5);
                    frame_addr_51_reg_6718(3 downto 2) <= tmp_30_9_fu_2690_p1(17 - 1 downto 0)(3 downto 2);    frame_addr_51_reg_6718(16 downto 5) <= tmp_30_9_fu_2690_p1(17 - 1 downto 0)(16 downto 5);
                    tmp_27_9_reg_6703(0) <= tmp_27_9_fu_2680_p1(0);    tmp_27_9_reg_6703(3 downto 2) <= tmp_27_9_fu_2680_p1(3 downto 2);    tmp_27_9_reg_6703(16 downto 5) <= tmp_27_9_fu_2680_p1(16 downto 5);
                    tmp_30_9_reg_6713(3 downto 2) <= tmp_30_9_fu_2690_p1(3 downto 2);    tmp_30_9_reg_6713(16 downto 5) <= tmp_30_9_fu_2690_p1(16 downto 5);
                tmp_84_reg_6681 <= tmp_84_fu_2672_p1;
                tmp_85_reg_6692 <= tmp_85_fu_2676_p1;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((ap_const_lv1_0 = tmp_5_reg_5878)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg10_fsm_20))) then
                    frame_addr_52_reg_6765(1 downto 0) <= tmp_27_s_fu_2716_p1(17 - 1 downto 0)(1 downto 0);    frame_addr_52_reg_6765(3) <= tmp_27_s_fu_2716_p1(17 - 1 downto 0)(3);    frame_addr_52_reg_6765(16 downto 5) <= tmp_27_s_fu_2716_p1(17 - 1 downto 0)(16 downto 5);
                    frame_addr_53_reg_6775(1) <= tmp_30_s_fu_2726_p1(17 - 1 downto 0)(1);    frame_addr_53_reg_6775(3) <= tmp_30_s_fu_2726_p1(17 - 1 downto 0)(3);    frame_addr_53_reg_6775(16 downto 5) <= tmp_30_s_fu_2726_p1(17 - 1 downto 0)(16 downto 5);
                    tmp_27_s_reg_6760(1 downto 0) <= tmp_27_s_fu_2716_p1(1 downto 0);    tmp_27_s_reg_6760(3) <= tmp_27_s_fu_2716_p1(3);    tmp_27_s_reg_6760(16 downto 5) <= tmp_27_s_fu_2716_p1(16 downto 5);
                    tmp_30_s_reg_6770(1) <= tmp_30_s_fu_2726_p1(1);    tmp_30_s_reg_6770(3) <= tmp_30_s_fu_2726_p1(3);    tmp_30_s_reg_6770(16 downto 5) <= tmp_30_s_fu_2726_p1(16 downto 5);
                tmp_87_reg_6738 <= tmp_87_fu_2708_p1;
                tmp_88_reg_6749 <= tmp_88_fu_2712_p1;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((ap_const_lv1_0 = tmp_5_reg_5878)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg11_fsm_21))) then
                    frame_addr_54_reg_6822(0) <= tmp_27_10_fu_2751_p1(17 - 1 downto 0)(0);    frame_addr_54_reg_6822(3) <= tmp_27_10_fu_2751_p1(17 - 1 downto 0)(3);    frame_addr_54_reg_6822(16 downto 5) <= tmp_27_10_fu_2751_p1(17 - 1 downto 0)(16 downto 5);
                    frame_addr_55_reg_6832(3) <= tmp_30_10_fu_2761_p1(17 - 1 downto 0)(3);    frame_addr_55_reg_6832(16 downto 5) <= tmp_30_10_fu_2761_p1(17 - 1 downto 0)(16 downto 5);
                    tmp_27_10_reg_6817(0) <= tmp_27_10_fu_2751_p1(0);    tmp_27_10_reg_6817(3) <= tmp_27_10_fu_2751_p1(3);    tmp_27_10_reg_6817(16 downto 5) <= tmp_27_10_fu_2751_p1(16 downto 5);
                    tmp_30_10_reg_6827(3) <= tmp_30_10_fu_2761_p1(3);    tmp_30_10_reg_6827(16 downto 5) <= tmp_30_10_fu_2761_p1(16 downto 5);
                tmp_90_reg_6795 <= tmp_90_fu_2743_p1;
                tmp_91_reg_6806 <= tmp_91_fu_2747_p1;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((ap_const_lv1_0 = tmp_5_reg_5878)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg12_fsm_22))) then
                    frame_addr_56_reg_6879(2 downto 0) <= tmp_27_11_fu_2787_p1(17 - 1 downto 0)(2 downto 0);    frame_addr_56_reg_6879(16 downto 5) <= tmp_27_11_fu_2787_p1(17 - 1 downto 0)(16 downto 5);
                    frame_addr_57_reg_6889(2 downto 1) <= tmp_30_11_fu_2797_p1(17 - 1 downto 0)(2 downto 1);    frame_addr_57_reg_6889(16 downto 5) <= tmp_30_11_fu_2797_p1(17 - 1 downto 0)(16 downto 5);
                    tmp_27_11_reg_6874(2 downto 0) <= tmp_27_11_fu_2787_p1(2 downto 0);    tmp_27_11_reg_6874(16 downto 5) <= tmp_27_11_fu_2787_p1(16 downto 5);
                    tmp_30_11_reg_6884(2 downto 1) <= tmp_30_11_fu_2797_p1(2 downto 1);    tmp_30_11_reg_6884(16 downto 5) <= tmp_30_11_fu_2797_p1(16 downto 5);
                tmp_93_reg_6852 <= tmp_93_fu_2779_p1;
                tmp_94_reg_6863 <= tmp_94_fu_2783_p1;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((ap_const_lv1_0 = tmp_5_reg_5878)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg13_fsm_23))) then
                    frame_addr_58_reg_6936(0) <= tmp_27_12_fu_2822_p1(17 - 1 downto 0)(0);    frame_addr_58_reg_6936(2) <= tmp_27_12_fu_2822_p1(17 - 1 downto 0)(2);    frame_addr_58_reg_6936(16 downto 5) <= tmp_27_12_fu_2822_p1(17 - 1 downto 0)(16 downto 5);
                    frame_addr_59_reg_6946(2) <= tmp_30_12_fu_2832_p1(17 - 1 downto 0)(2);    frame_addr_59_reg_6946(16 downto 5) <= tmp_30_12_fu_2832_p1(17 - 1 downto 0)(16 downto 5);
                    tmp_27_12_reg_6931(0) <= tmp_27_12_fu_2822_p1(0);    tmp_27_12_reg_6931(2) <= tmp_27_12_fu_2822_p1(2);    tmp_27_12_reg_6931(16 downto 5) <= tmp_27_12_fu_2822_p1(16 downto 5);
                    tmp_30_12_reg_6941(2) <= tmp_30_12_fu_2832_p1(2);    tmp_30_12_reg_6941(16 downto 5) <= tmp_30_12_fu_2832_p1(16 downto 5);
                tmp_96_reg_6909 <= tmp_96_fu_2814_p1;
                tmp_97_reg_6920 <= tmp_97_fu_2818_p1;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((ap_const_lv1_0 = tmp_5_reg_5878)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg14_fsm_24))) then
                    frame_addr_60_reg_6993(1 downto 0) <= tmp_27_13_fu_2857_p1(17 - 1 downto 0)(1 downto 0);    frame_addr_60_reg_6993(16 downto 5) <= tmp_27_13_fu_2857_p1(17 - 1 downto 0)(16 downto 5);
                    frame_addr_61_reg_7003(1) <= tmp_30_13_fu_2867_p1(17 - 1 downto 0)(1);    frame_addr_61_reg_7003(16 downto 5) <= tmp_30_13_fu_2867_p1(17 - 1 downto 0)(16 downto 5);
                tmp_100_reg_6977 <= tmp_100_fu_2853_p1;
                    tmp_27_13_reg_6988(1 downto 0) <= tmp_27_13_fu_2857_p1(1 downto 0);    tmp_27_13_reg_6988(16 downto 5) <= tmp_27_13_fu_2857_p1(16 downto 5);
                    tmp_29_14_reg_7008(16 downto 5) <= tmp_29_14_fu_2872_p2(16 downto 5);
                    tmp_30_13_reg_6998(1) <= tmp_30_13_fu_2867_p1(1);    tmp_30_13_reg_6998(16 downto 5) <= tmp_30_13_fu_2867_p1(16 downto 5);
                tmp_99_reg_6966 <= tmp_99_fu_2849_p1;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((ap_const_lv1_0 = tmp_5_reg_5878)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg15_fsm_25))) then
                    frame_addr_62_reg_7060(0) <= tmp_27_14_fu_2904_p1(17 - 1 downto 0)(0);    frame_addr_62_reg_7060(16 downto 5) <= tmp_27_14_fu_2904_p1(17 - 1 downto 0)(16 downto 5);
                    frame_addr_63_reg_7070(16 downto 5) <= tmp_30_14_fu_2908_p1(17 - 1 downto 0)(16 downto 5);
                tmp_102_reg_7033 <= tmp_102_fu_2896_p1;
                tmp_103_reg_7044 <= tmp_103_fu_2900_p1;
                    tmp_27_14_reg_7055(0) <= tmp_27_14_fu_2904_p1(0);    tmp_27_14_reg_7055(16 downto 5) <= tmp_27_14_fu_2904_p1(16 downto 5);
                    tmp_30_14_reg_7065(16 downto 5) <= tmp_30_14_fu_2908_p1(16 downto 5);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not((ap_start = ap_const_logic_0)))) then
                frame_out_read_reg_5848 <= frame_out;
                init_read_reg_5844 <= init_read_read_fu_222_p2;
                tmp_13_reg_5853 <= frame_in(31 downto 2);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_8) and (exitcond_reg_5864 = ap_const_lv1_0) and not((ap_sig_bdd_440 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))))) then
                gmem_addr_read_reg_5873 <= gmem_RDATA;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp3_stg0_fsm_59) and (ap_const_logic_1 = ap_reg_ppiten_pp3_it1) and not(((ap_const_lv1_0 = ap_reg_ppstg_exitcond1_reg_7966_pp3_it1) and (ap_const_logic_0 = ap_sig_ioackin_gmem_offset_WREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp3_it2))) and (ap_const_lv1_0 = exitcond1_reg_7966))) then
                grey_frame_load_reg_7980 <= grey_frame_q1;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((ap_const_lv1_0 = tmp_3_reg_7687)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg5_fsm_47))) then
                    i_1_10_reg_7859(0) <= i_1_10_fu_5320_p2(0);    i_1_10_reg_7859(3) <= i_1_10_fu_5320_p2(3);    i_1_10_reg_7859(16 downto 5) <= i_1_10_fu_5320_p2(16 downto 5);
                    i_1_9_reg_7849(1 downto 0) <= i_1_9_fu_5299_p2(1 downto 0);    i_1_9_reg_7849(3) <= i_1_9_fu_5299_p2(3);    i_1_9_reg_7849(16 downto 5) <= i_1_9_fu_5299_p2(16 downto 5);
                tmp_50_reg_7835 <= tmp_50_fu_5291_p1;
                tmp_51_reg_7842 <= tmp_51_fu_5295_p1;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((ap_const_lv1_0 = tmp_3_reg_7687)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg6_fsm_48))) then
                    i_1_11_reg_7883(2 downto 0) <= i_1_11_fu_5382_p2(2 downto 0);    i_1_11_reg_7883(16 downto 5) <= i_1_11_fu_5382_p2(16 downto 5);
                    i_1_12_reg_7893(0) <= i_1_12_fu_5403_p2(0);    i_1_12_reg_7893(2) <= i_1_12_fu_5403_p2(2);    i_1_12_reg_7893(16 downto 5) <= i_1_12_fu_5403_p2(16 downto 5);
                tmp_52_reg_7869 <= tmp_52_fu_5374_p1;
                tmp_53_reg_7876 <= tmp_53_fu_5378_p1;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((ap_const_lv1_0 = tmp_3_reg_7687)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg7_fsm_49))) then
                    i_1_13_reg_7917(1 downto 0) <= i_1_13_fu_5465_p2(1 downto 0);    i_1_13_reg_7917(16 downto 5) <= i_1_13_fu_5465_p2(16 downto 5);
                    i_1_14_reg_7927(0) <= i_1_14_fu_5486_p2(0);    i_1_14_reg_7927(16 downto 5) <= i_1_14_fu_5486_p2(16 downto 5);
                tmp_54_reg_7903 <= tmp_54_fu_5457_p1;
                tmp_55_reg_7910 <= tmp_55_fu_5461_p1;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and not((ap_const_lv1_0 = tmp_3_reg_7687)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg15_fsm_57))) then
                i_1_15_reg_7956 <= i_1_15_fu_5785_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg1_fsm_43) and not((ap_const_lv1_0 = tmp_3_reg_7687)))) then
                    i_1_1_reg_7713(1 downto 0) <= i_1_1_fu_4967_p2(1 downto 0);    i_1_1_reg_7713(16 downto 3) <= i_1_1_fu_4967_p2(16 downto 3);
                    i_1_2_reg_7723(0) <= i_1_2_fu_4988_p2(0);    i_1_2_reg_7723(16 downto 3) <= i_1_2_fu_4988_p2(16 downto 3);
                tmp_43_reg_7706 <= tmp_43_fu_4963_p1;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((ap_const_lv1_0 = tmp_3_reg_7687)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg2_fsm_44))) then
                    i_1_3_reg_7747(2 downto 0) <= i_1_3_fu_5050_p2(2 downto 0);    i_1_3_reg_7747(16 downto 4) <= i_1_3_fu_5050_p2(16 downto 4);
                    i_1_4_reg_7757(0) <= i_1_4_fu_5071_p2(0);    i_1_4_reg_7757(2) <= i_1_4_fu_5071_p2(2);    i_1_4_reg_7757(16 downto 4) <= i_1_4_fu_5071_p2(16 downto 4);
                tmp_44_reg_7733 <= tmp_44_fu_5042_p1;
                tmp_45_reg_7740 <= tmp_45_fu_5046_p1;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((ap_const_lv1_0 = tmp_3_reg_7687)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg3_fsm_45))) then
                    i_1_5_reg_7781(1 downto 0) <= i_1_5_fu_5133_p2(1 downto 0);    i_1_5_reg_7781(16 downto 4) <= i_1_5_fu_5133_p2(16 downto 4);
                    i_1_6_reg_7791(0) <= i_1_6_fu_5154_p2(0);    i_1_6_reg_7791(16 downto 4) <= i_1_6_fu_5154_p2(16 downto 4);
                tmp_46_reg_7767 <= tmp_46_fu_5125_p1;
                tmp_47_reg_7774 <= tmp_47_fu_5129_p1;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((ap_const_lv1_0 = tmp_3_reg_7687)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg4_fsm_46))) then
                    i_1_7_reg_7815(3 downto 0) <= i_1_7_fu_5216_p2(3 downto 0);    i_1_7_reg_7815(16 downto 5) <= i_1_7_fu_5216_p2(16 downto 5);
                    i_1_8_reg_7825(0) <= i_1_8_fu_5237_p2(0);    i_1_8_reg_7825(3 downto 2) <= i_1_8_fu_5237_p2(3 downto 2);    i_1_8_reg_7825(16 downto 5) <= i_1_8_fu_5237_p2(16 downto 5);
                tmp_48_reg_7801 <= tmp_48_fu_5208_p1;
                tmp_49_reg_7808 <= tmp_49_fu_5212_p1;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg0_fsm_42) and not((ap_const_lv1_0 = tmp_3_fu_4880_p2)))) then
                    i_1_s_reg_7696(0) <= i_1_s_fu_4901_p2(0);    i_1_s_reg_7696(16 downto 2) <= i_1_s_fu_4901_p2(16 downto 2);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not((ap_const_lv1_0 = tmp_5_reg_5878)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg14_fsm_24))) then
                i_2_15_reg_7013 <= i_2_15_fu_2878_p2;
                pix_13_12_reg_6972 <= frame_Dout_A(15 downto 8);
                pix_23_12_reg_6983 <= frame_Dout_B(15 downto 8);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_8) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not((ap_sig_bdd_440 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))))) then
                indvar_next_reg_5868 <= indvar_next_fu_1959_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((ap_const_lv1_0 = ap_reg_ppstg_tmp_5_reg_5878_pp1_it1)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg8_fsm_18))) then
                not_tmp_1_reg_7477 <= not_tmp_1_fu_3449_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((ap_const_lv1_0 = ap_reg_ppstg_tmp_5_reg_5878_pp1_it1)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg29_fsm_39))) then
                not_tmp_65_10_reg_7637 <= not_tmp_65_10_fu_4443_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg31_fsm_41) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_5_reg_5878_pp1_it1)))) then
                not_tmp_65_11_reg_7647 <= not_tmp_65_11_fu_4537_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg1_fsm_11) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_5_reg_5878_pp1_it2)))) then
                not_tmp_65_12_reg_7657 <= not_tmp_65_12_fu_4631_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg3_fsm_13) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_5_reg_5878_pp1_it2)))) then
                not_tmp_65_13_reg_7667 <= not_tmp_65_13_fu_4725_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg5_fsm_15) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_5_reg_5878_pp1_it2)))) then
                not_tmp_65_14_reg_7677 <= not_tmp_65_14_fu_4819_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((ap_const_lv1_0 = ap_reg_ppstg_tmp_5_reg_5878_pp1_it1)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg9_fsm_19))) then
                not_tmp_65_1_reg_7497 <= not_tmp_65_1_fu_3496_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg11_fsm_21) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_5_reg_5878_pp1_it1)))) then
                not_tmp_65_2_reg_7537 <= not_tmp_65_2_fu_3591_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((ap_const_lv1_0 = ap_reg_ppstg_tmp_5_reg_5878_pp1_it1)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg13_fsm_23))) then
                not_tmp_65_3_reg_7547 <= not_tmp_65_3_fu_3686_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg15_fsm_25) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_5_reg_5878_pp1_it1)))) then
                not_tmp_65_4_reg_7557 <= not_tmp_65_4_fu_3781_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((ap_const_lv1_0 = ap_reg_ppstg_tmp_5_reg_5878_pp1_it1)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg17_fsm_27))) then
                not_tmp_65_5_reg_7567 <= not_tmp_65_5_fu_3876_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg19_fsm_29) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_5_reg_5878_pp1_it1)))) then
                not_tmp_65_6_reg_7582 <= not_tmp_65_6_fu_3971_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((ap_const_lv1_0 = ap_reg_ppstg_tmp_5_reg_5878_pp1_it1)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg21_fsm_31))) then
                not_tmp_65_7_reg_7592 <= not_tmp_65_7_fu_4066_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg23_fsm_33) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_5_reg_5878_pp1_it1)))) then
                not_tmp_65_8_reg_7602 <= not_tmp_65_8_fu_4161_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((ap_const_lv1_0 = ap_reg_ppstg_tmp_5_reg_5878_pp1_it1)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg25_fsm_35))) then
                not_tmp_65_9_reg_7617 <= not_tmp_65_9_fu_4255_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg27_fsm_37) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_5_reg_5878_pp1_it1)))) then
                not_tmp_65_s_reg_7627 <= not_tmp_65_s_fu_4349_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((ap_const_lv1_0 = ap_reg_ppstg_tmp_5_reg_5878_pp1_it1)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg30_fsm_40))) then
                not_tmp_69_10_reg_7642 <= not_tmp_69_10_fu_4490_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((ap_const_lv1_0 = ap_reg_ppstg_tmp_5_reg_5878_pp1_it1)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_10))) then
                not_tmp_69_11_reg_7652 <= not_tmp_69_11_fu_4584_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg2_fsm_12) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_5_reg_5878_pp1_it2)))) then
                not_tmp_69_12_reg_7662 <= not_tmp_69_12_fu_4678_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg4_fsm_14) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_5_reg_5878_pp1_it2)))) then
                not_tmp_69_13_reg_7672 <= not_tmp_69_13_fu_4772_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg6_fsm_16) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_5_reg_5878_pp1_it2)))) then
                not_tmp_69_14_reg_7682 <= not_tmp_69_14_fu_4866_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((ap_const_lv1_0 = ap_reg_ppstg_tmp_5_reg_5878_pp1_it1)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg10_fsm_20))) then
                not_tmp_69_1_reg_7517 <= not_tmp_69_1_fu_3544_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((ap_const_lv1_0 = ap_reg_ppstg_tmp_5_reg_5878_pp1_it1)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg12_fsm_22))) then
                not_tmp_69_2_reg_7542 <= not_tmp_69_2_fu_3639_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((ap_const_lv1_0 = ap_reg_ppstg_tmp_5_reg_5878_pp1_it1)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg14_fsm_24))) then
                not_tmp_69_3_reg_7552 <= not_tmp_69_3_fu_3734_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((ap_const_lv1_0 = ap_reg_ppstg_tmp_5_reg_5878_pp1_it1)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg16_fsm_26))) then
                not_tmp_69_4_reg_7562 <= not_tmp_69_4_fu_3829_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((ap_const_lv1_0 = ap_reg_ppstg_tmp_5_reg_5878_pp1_it1)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg18_fsm_28))) then
                not_tmp_69_5_reg_7572 <= not_tmp_69_5_fu_3924_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((ap_const_lv1_0 = ap_reg_ppstg_tmp_5_reg_5878_pp1_it1)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg20_fsm_30))) then
                not_tmp_69_6_reg_7587 <= not_tmp_69_6_fu_4019_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((ap_const_lv1_0 = ap_reg_ppstg_tmp_5_reg_5878_pp1_it1)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg22_fsm_32))) then
                not_tmp_69_7_reg_7597 <= not_tmp_69_7_fu_4114_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((ap_const_lv1_0 = ap_reg_ppstg_tmp_5_reg_5878_pp1_it1)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg24_fsm_34))) then
                not_tmp_69_8_reg_7607 <= not_tmp_69_8_fu_4208_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((ap_const_lv1_0 = ap_reg_ppstg_tmp_5_reg_5878_pp1_it1)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg26_fsm_36))) then
                not_tmp_69_9_reg_7622 <= not_tmp_69_9_fu_4302_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((ap_const_lv1_0 = ap_reg_ppstg_tmp_5_reg_5878_pp1_it1)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg28_fsm_38))) then
                not_tmp_69_s_reg_7632 <= not_tmp_69_s_fu_4396_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg7_fsm_17) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_5_reg_5878_pp1_it1)))) then
                not_tmp_s_reg_7457 <= not_tmp_s_fu_3401_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not((ap_const_lv1_0 = tmp_5_reg_5878)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg12_fsm_22))) then
                pix_13_10_reg_6858 <= frame_Dout_A(15 downto 8);
                pix_23_10_reg_6869 <= frame_Dout_B(15 downto 8);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not((ap_const_lv1_0 = tmp_5_reg_5878)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg13_fsm_23))) then
                pix_13_11_reg_6915 <= frame_Dout_A(15 downto 8);
                pix_23_11_reg_6926 <= frame_Dout_B(15 downto 8);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not((ap_const_lv1_0 = tmp_5_reg_5878)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg15_fsm_25))) then
                pix_13_13_reg_7039 <= frame_Dout_A(15 downto 8);
                pix_23_13_reg_7050 <= frame_Dout_B(15 downto 8);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not((ap_const_lv1_0 = tmp_5_reg_5878)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg16_fsm_26))) then
                pix_13_14_reg_7096 <= frame_Dout_A(15 downto 8);
                pix_23_14_reg_7107 <= frame_Dout_B(15 downto 8);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not((ap_const_lv1_0 = tmp_5_reg_5878)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg2_fsm_12))) then
                pix_13_1_reg_6014 <= frame_Dout_A(15 downto 8);
                pix_23_1_reg_6025 <= frame_Dout_B(15 downto 8);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not((ap_const_lv1_0 = tmp_5_reg_5878)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg3_fsm_13))) then
                pix_13_2_reg_6105 <= frame_Dout_A(15 downto 8);
                pix_23_2_reg_6116 <= frame_Dout_B(15 downto 8);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not((ap_const_lv1_0 = tmp_5_reg_5878)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg4_fsm_14))) then
                pix_13_3_reg_6196 <= frame_Dout_A(15 downto 8);
                pix_23_3_reg_6207 <= frame_Dout_B(15 downto 8);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not((ap_const_lv1_0 = tmp_5_reg_5878)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg5_fsm_15))) then
                pix_13_4_reg_6287 <= frame_Dout_A(15 downto 8);
                pix_23_4_reg_6298 <= frame_Dout_B(15 downto 8);
                yuv_struct_y2_write_assign_23_reg_6330 <= yuv_frame_q1(23 downto 16);
                yuv_struct_y2_write_assign_24_reg_6344 <= yuv_frame_q0(23 downto 16);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not((ap_const_lv1_0 = tmp_5_reg_5878)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg6_fsm_16))) then
                pix_13_5_reg_6392 <= frame_Dout_A(15 downto 8);
                pix_23_5_reg_6403 <= frame_Dout_B(15 downto 8);
                yuv_struct_y2_write_assign_25_reg_6435 <= yuv_frame_q1(23 downto 16);
                yuv_struct_y2_write_assign_26_reg_6449 <= yuv_frame_q0(23 downto 16);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not((ap_const_lv1_0 = tmp_5_reg_5878)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg7_fsm_17))) then
                pix_13_6_reg_6497 <= frame_Dout_A(15 downto 8);
                pix_23_6_reg_6508 <= frame_Dout_B(15 downto 8);
                yuv_struct_y2_write_assign_27_reg_6540 <= yuv_frame_q1(23 downto 16);
                yuv_struct_y2_write_assign_28_reg_6554 <= yuv_frame_q0(23 downto 16);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not((ap_const_lv1_0 = tmp_5_reg_5878)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg8_fsm_18))) then
                pix_13_7_reg_6602 <= frame_Dout_A(15 downto 8);
                pix_23_7_reg_6613 <= frame_Dout_B(15 downto 8);
                yuv_struct_y2_write_assign_29_reg_6645 <= yuv_frame_q1(23 downto 16);
                yuv_struct_y2_write_assign_30_reg_6659 <= yuv_frame_q0(23 downto 16);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not((ap_const_lv1_0 = tmp_5_reg_5878)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg9_fsm_19))) then
                pix_13_8_reg_6687 <= frame_Dout_A(15 downto 8);
                pix_23_8_reg_6698 <= frame_Dout_B(15 downto 8);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not((ap_const_lv1_0 = tmp_5_reg_5878)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg10_fsm_20))) then
                pix_13_9_reg_6744 <= frame_Dout_A(15 downto 8);
                pix_23_9_reg_6755 <= frame_Dout_B(15 downto 8);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not((ap_const_lv1_0 = tmp_5_reg_5878)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg11_fsm_21))) then
                pix_13_s_reg_6801 <= frame_Dout_A(15 downto 8);
                pix_23_s_reg_6812 <= frame_Dout_B(15 downto 8);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg1_fsm_11) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not((ap_const_lv1_0 = tmp_5_reg_5878)))) then
                pix_1_reg_5930 <= frame_Dout_A(15 downto 8);
                pix_3_reg_5941 <= frame_Dout_B(15 downto 8);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg1_fsm_11) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not((ap_const_lv1_0 = tmp_5_reg_5878))) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg1_fsm_43) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and not((ap_const_lv1_0 = tmp_3_reg_7687))) or ((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and not((ap_const_lv1_0 = tmp_3_reg_7687)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg2_fsm_44)) or ((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and not((ap_const_lv1_0 = tmp_3_reg_7687)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg4_fsm_46)) or ((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and not((ap_const_lv1_0 = tmp_3_reg_7687)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg8_fsm_50)))) then
                reg_1613 <= yuv_frame_q0(23 downto 16);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg1_fsm_11) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not((ap_const_lv1_0 = tmp_5_reg_5878))) or ((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and not((ap_const_lv1_0 = tmp_3_reg_7687)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg2_fsm_44)) or ((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and not((ap_const_lv1_0 = tmp_3_reg_7687)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg3_fsm_45)) or ((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and not((ap_const_lv1_0 = tmp_3_reg_7687)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg5_fsm_47)))) then
                reg_1619 <= yuv_frame_q1(23 downto 16);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and not((ap_const_lv1_0 = tmp_3_reg_7687)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg4_fsm_46)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not((ap_const_lv1_0 = tmp_5_reg_5878)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg2_fsm_12)) or ((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and not((ap_const_lv1_0 = tmp_3_reg_7687)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg7_fsm_49)))) then
                reg_1624 <= yuv_frame_q1(23 downto 16);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and not((ap_const_lv1_0 = tmp_3_reg_7687)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg3_fsm_45)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not((ap_const_lv1_0 = tmp_5_reg_5878)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg2_fsm_12)) or ((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and not((ap_const_lv1_0 = tmp_3_reg_7687)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg6_fsm_48)))) then
                reg_1629 <= yuv_frame_q0(23 downto 16);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and not((ap_const_lv1_0 = tmp_3_reg_7687)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg6_fsm_48)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not((ap_const_lv1_0 = tmp_5_reg_5878)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg3_fsm_13)))) then
                reg_1634 <= yuv_frame_q1(23 downto 16);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and not((ap_const_lv1_0 = tmp_3_reg_7687)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg5_fsm_47)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not((ap_const_lv1_0 = tmp_5_reg_5878)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg3_fsm_13)))) then
                reg_1639 <= yuv_frame_q0(23 downto 16);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and not((ap_const_lv1_0 = tmp_3_reg_7687)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg8_fsm_50)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not((ap_const_lv1_0 = tmp_5_reg_5878)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg4_fsm_14)))) then
                reg_1644 <= yuv_frame_q1(23 downto 16);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and not((ap_const_lv1_0 = tmp_3_reg_7687)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg7_fsm_49)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not((ap_const_lv1_0 = tmp_5_reg_5878)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg4_fsm_14)))) then
                reg_1649 <= yuv_frame_q0(23 downto 16);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not((ap_const_lv1_0 = tmp_5_reg_5878)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg7_fsm_17)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not((ap_const_lv1_0 = tmp_5_reg_5878)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg11_fsm_21)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not((ap_const_lv1_0 = tmp_5_reg_5878)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg15_fsm_25)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not((ap_const_lv1_0 = tmp_5_reg_5878)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg19_fsm_29)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not((ap_const_lv1_0 = tmp_5_reg_5878)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg23_fsm_33)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not((ap_const_lv1_0 = tmp_5_reg_5878)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg27_fsm_37)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not((ap_const_lv1_0 = tmp_5_reg_5878)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg31_fsm_41)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg3_fsm_13) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_5_reg_5878_pp1_it1))))) then
                reg_1654 <= grp_fu_1563_p1;
                reg_1659 <= grp_fu_1566_p1;
                reg_1664 <= grp_fu_1569_p1;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not((ap_const_lv1_0 = tmp_5_reg_5878)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg8_fsm_18)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not((ap_const_lv1_0 = tmp_5_reg_5878)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg12_fsm_22)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not((ap_const_lv1_0 = tmp_5_reg_5878)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg16_fsm_26)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not((ap_const_lv1_0 = tmp_5_reg_5878)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg20_fsm_30)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not((ap_const_lv1_0 = tmp_5_reg_5878)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg24_fsm_34)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not((ap_const_lv1_0 = tmp_5_reg_5878)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg28_fsm_38)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and not((ap_const_lv1_0 = tmp_5_reg_5878)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_10)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg4_fsm_14) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_5_reg_5878_pp1_it1))))) then
                reg_1669 <= grp_fu_1563_p1;
                reg_1674 <= grp_fu_1566_p1;
                reg_1679 <= grp_fu_1569_p1;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not((ap_const_lv1_0 = tmp_5_reg_5878)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg9_fsm_19)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not((ap_const_lv1_0 = tmp_5_reg_5878)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg13_fsm_23)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not((ap_const_lv1_0 = tmp_5_reg_5878)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg17_fsm_27)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not((ap_const_lv1_0 = tmp_5_reg_5878)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg21_fsm_31)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not((ap_const_lv1_0 = tmp_5_reg_5878)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg25_fsm_35)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not((ap_const_lv1_0 = tmp_5_reg_5878)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg29_fsm_39)) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg1_fsm_11) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_5_reg_5878_pp1_it1))) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_5_reg_5878_pp1_it1)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg5_fsm_15)))) then
                reg_1684 <= grp_fu_1563_p1;
                reg_1689 <= grp_fu_1566_p1;
                reg_1694 <= grp_fu_1569_p1;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not((ap_const_lv1_0 = tmp_5_reg_5878)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg10_fsm_20)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not((ap_const_lv1_0 = tmp_5_reg_5878)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg14_fsm_24)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not((ap_const_lv1_0 = tmp_5_reg_5878)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg18_fsm_28)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not((ap_const_lv1_0 = tmp_5_reg_5878)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg22_fsm_32)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not((ap_const_lv1_0 = tmp_5_reg_5878)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg26_fsm_36)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not((ap_const_lv1_0 = tmp_5_reg_5878)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg30_fsm_40)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg2_fsm_12) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_5_reg_5878_pp1_it1))) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_5_reg_5878_pp1_it1)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg6_fsm_16)))) then
                reg_1699 <= grp_fu_1563_p1;
                reg_1704 <= grp_fu_1566_p1;
                reg_1709 <= grp_fu_1569_p1;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not((ap_const_lv1_0 = tmp_5_reg_5878)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg11_fsm_21)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not((ap_const_lv1_0 = tmp_5_reg_5878)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg31_fsm_41)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not((ap_const_lv1_0 = tmp_5_reg_5878)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg16_fsm_26)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg4_fsm_14) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_5_reg_5878_pp1_it1))) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not((ap_const_lv1_0 = tmp_5_reg_5878)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg21_fsm_31)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not((ap_const_lv1_0 = tmp_5_reg_5878)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg26_fsm_36)))) then
                reg_1714 <= grp_fu_1542_p2;
                reg_1720 <= grp_fu_1547_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not((ap_const_lv1_0 = tmp_5_reg_5878)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg11_fsm_21)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not((ap_const_lv1_0 = tmp_5_reg_5878)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg23_fsm_33)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg3_fsm_13) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_5_reg_5878_pp1_it1))) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not((ap_const_lv1_0 = tmp_5_reg_5878)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg17_fsm_27)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not((ap_const_lv1_0 = tmp_5_reg_5878)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg29_fsm_39)))) then
                reg_1727 <= grp_fu_1552_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not((ap_const_lv1_0 = tmp_5_reg_5878)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg27_fsm_37)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not((ap_const_lv1_0 = tmp_5_reg_5878)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg12_fsm_22)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and not((ap_const_lv1_0 = tmp_5_reg_5878)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_10)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not((ap_const_lv1_0 = tmp_5_reg_5878)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg17_fsm_27)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_5_reg_5878_pp1_it1)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg5_fsm_15)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not((ap_const_lv1_0 = tmp_5_reg_5878)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg22_fsm_32)))) then
                reg_1733 <= grp_fu_1542_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not((ap_const_lv1_0 = tmp_5_reg_5878)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg27_fsm_37)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not((ap_const_lv1_0 = tmp_5_reg_5878)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg12_fsm_22)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and not((ap_const_lv1_0 = tmp_5_reg_5878)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_10)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not((ap_const_lv1_0 = tmp_5_reg_5878)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg17_fsm_27)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not((ap_const_lv1_0 = tmp_5_reg_5878)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg22_fsm_32)))) then
                reg_1740 <= grp_fu_1547_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not((ap_const_lv1_0 = tmp_5_reg_5878)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg12_fsm_22)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not((ap_const_lv1_0 = tmp_5_reg_5878)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg24_fsm_34)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg4_fsm_14) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_5_reg_5878_pp1_it1))) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not((ap_const_lv1_0 = tmp_5_reg_5878)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg18_fsm_28)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not((ap_const_lv1_0 = tmp_5_reg_5878)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg30_fsm_40)))) then
                reg_1746 <= grp_fu_1552_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not((ap_const_lv1_0 = tmp_5_reg_5878)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg23_fsm_33)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not((ap_const_lv1_0 = tmp_5_reg_5878)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg28_fsm_38)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not((ap_const_lv1_0 = tmp_5_reg_5878)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg13_fsm_23)) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg1_fsm_11) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_5_reg_5878_pp1_it1))) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not((ap_const_lv1_0 = tmp_5_reg_5878)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg18_fsm_28)))) then
                reg_1752 <= grp_fu_1542_p2;
                reg_1759 <= grp_fu_1547_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not((ap_const_lv1_0 = tmp_5_reg_5878)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg19_fsm_29)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not((ap_const_lv1_0 = tmp_5_reg_5878)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg31_fsm_41)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not((ap_const_lv1_0 = tmp_5_reg_5878)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg13_fsm_23)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not((ap_const_lv1_0 = tmp_5_reg_5878)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg25_fsm_35)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_5_reg_5878_pp1_it1)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg5_fsm_15)))) then
                reg_1765 <= grp_fu_1552_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not((ap_const_lv1_0 = tmp_5_reg_5878)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg19_fsm_29)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not((ap_const_lv1_0 = tmp_5_reg_5878)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg24_fsm_34)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not((ap_const_lv1_0 = tmp_5_reg_5878)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg29_fsm_39)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not((ap_const_lv1_0 = tmp_5_reg_5878)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg14_fsm_24)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg2_fsm_12) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_5_reg_5878_pp1_it1))))) then
                reg_1772 <= grp_fu_1542_p2;
                reg_1778 <= grp_fu_1547_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not((ap_const_lv1_0 = tmp_5_reg_5878)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg20_fsm_30)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and not((ap_const_lv1_0 = tmp_5_reg_5878)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_10)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not((ap_const_lv1_0 = tmp_5_reg_5878)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg14_fsm_24)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not((ap_const_lv1_0 = tmp_5_reg_5878)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg26_fsm_36)))) then
                reg_1785 <= grp_fu_1552_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not((ap_const_lv1_0 = tmp_5_reg_5878)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg15_fsm_25)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg3_fsm_13) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_5_reg_5878_pp1_it1))) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not((ap_const_lv1_0 = tmp_5_reg_5878)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg20_fsm_30)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not((ap_const_lv1_0 = tmp_5_reg_5878)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg25_fsm_35)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not((ap_const_lv1_0 = tmp_5_reg_5878)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg30_fsm_40)))) then
                reg_1790 <= grp_fu_1542_p2;
                reg_1797 <= grp_fu_1547_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not((ap_const_lv1_0 = tmp_5_reg_5878)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg15_fsm_25)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not((ap_const_lv1_0 = tmp_5_reg_5878)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg27_fsm_37)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not((ap_const_lv1_0 = tmp_5_reg_5878)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg21_fsm_31)) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg1_fsm_11) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_5_reg_5878_pp1_it1))))) then
                reg_1803 <= grp_fu_1552_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not((ap_const_lv1_0 = tmp_5_reg_5878)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg16_fsm_26)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_5_reg_5878_pp1_it1)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg5_fsm_15)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_5_reg_5878_pp1_it1)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg6_fsm_16)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg7_fsm_17) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_5_reg_5878_pp1_it1))) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_5_reg_5878_pp1_it1)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg9_fsm_19)))) then
                reg_1809 <= grp_fu_1534_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not((ap_const_lv1_0 = tmp_5_reg_5878)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg16_fsm_26)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not((ap_const_lv1_0 = tmp_5_reg_5878)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg28_fsm_38)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not((ap_const_lv1_0 = tmp_5_reg_5878)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg22_fsm_32)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg2_fsm_12) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_5_reg_5878_pp1_it1))))) then
                reg_1815 <= grp_fu_1552_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not((ap_const_lv1_0 = tmp_5_reg_5878)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg17_fsm_27)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_5_reg_5878_pp1_it1)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg8_fsm_18)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg11_fsm_21) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_5_reg_5878_pp1_it1))))) then
                reg_1821 <= grp_fu_1534_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not((ap_const_lv1_0 = tmp_5_reg_5878)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg17_fsm_27)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_5_reg_5878_pp1_it1)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg6_fsm_16)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_5_reg_5878_pp1_it1)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg8_fsm_18)))) then
                reg_1827 <= grp_fu_1538_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not((ap_const_lv1_0 = tmp_5_reg_5878)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg18_fsm_28)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_5_reg_5878_pp1_it1)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg10_fsm_20)))) then
                reg_1833 <= grp_fu_1534_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not((ap_const_lv1_0 = tmp_5_reg_5878)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg19_fsm_29)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_5_reg_5878_pp1_it1)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg12_fsm_22)))) then
                reg_1839 <= grp_fu_1534_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not((ap_const_lv1_0 = tmp_5_reg_5878)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg19_fsm_29)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_5_reg_5878_pp1_it1)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg9_fsm_19)))) then
                reg_1845 <= grp_fu_1538_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not((ap_const_lv1_0 = tmp_5_reg_5878)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg21_fsm_31)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_5_reg_5878_pp1_it1)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg13_fsm_23)))) then
                reg_1851 <= grp_fu_1534_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not((ap_const_lv1_0 = tmp_5_reg_5878)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg21_fsm_31)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_5_reg_5878_pp1_it1)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg10_fsm_20)))) then
                reg_1857 <= grp_fu_1538_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not((ap_const_lv1_0 = tmp_5_reg_5878)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg23_fsm_33)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_5_reg_5878_pp1_it1)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg14_fsm_24)))) then
                reg_1863 <= grp_fu_1534_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not((ap_const_lv1_0 = tmp_5_reg_5878)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg23_fsm_33)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg11_fsm_21) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_5_reg_5878_pp1_it1))))) then
                reg_1869 <= grp_fu_1538_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not((ap_const_lv1_0 = tmp_5_reg_5878)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg25_fsm_35)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg15_fsm_25) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_5_reg_5878_pp1_it1))))) then
                reg_1875 <= grp_fu_1534_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not((ap_const_lv1_0 = tmp_5_reg_5878)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg25_fsm_35)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_5_reg_5878_pp1_it1)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg12_fsm_22)))) then
                reg_1881 <= grp_fu_1538_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not((ap_const_lv1_0 = tmp_5_reg_5878)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg27_fsm_37)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_5_reg_5878_pp1_it1)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg14_fsm_24)))) then
                reg_1887 <= grp_fu_1538_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not((ap_const_lv1_0 = tmp_5_reg_5878)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg29_fsm_39)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg15_fsm_25) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_5_reg_5878_pp1_it1))))) then
                reg_1893 <= grp_fu_1538_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not((ap_const_lv1_0 = tmp_5_reg_5878)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg31_fsm_41)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_5_reg_5878_pp1_it1)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg20_fsm_30)))) then
                reg_1899 <= grp_fu_1538_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg1_fsm_11) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_5_reg_5878_pp1_it1))) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_5_reg_5878_pp1_it1)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg26_fsm_36)))) then
                reg_1905 <= grp_fu_1538_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg3_fsm_13) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_5_reg_5878_pp1_it1))) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it2) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_5_reg_5878_pp1_it1)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_10)))) then
                reg_1911 <= grp_fu_1538_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_5_reg_5878_pp1_it1)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg5_fsm_15)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it2) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg4_fsm_14) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_5_reg_5878_pp1_it2))))) then
                reg_1917 <= grp_fu_1538_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg7_fsm_17) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_5_reg_5878_pp1_it1))) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_5_reg_5878_pp1_it1)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg13_fsm_23)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_5_reg_5878_pp1_it1)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg22_fsm_32)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_5_reg_5878_pp1_it1)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg30_fsm_40)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it2) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg2_fsm_12) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_5_reg_5878_pp1_it2))))) then
                reg_1923 <= grp_fu_1538_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_5_reg_5878_pp1_it1)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg16_fsm_26)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_5_reg_5878_pp1_it1)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg28_fsm_38)))) then
                reg_1928 <= grp_fu_1538_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((ap_const_lv1_0 = tmp_5_reg_5878)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg16_fsm_26))) then
                tmp_105_reg_7090 <= tmp_105_fu_2939_p1;
                tmp_106_reg_7101 <= tmp_106_fu_2943_p1;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((ap_const_lv1_0 = tmp_3_reg_7687)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg15_fsm_57))) then
                    tmp_21_14_reg_7951(16 downto 5) <= tmp_21_14_fu_5779_p2(16 downto 5);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg0_fsm_42)) then
                tmp_3_reg_7687 <= tmp_3_fu_4880_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not((ap_const_lv1_0 = tmp_5_reg_5878)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg31_fsm_41))) then
                tmp_46_10_reg_7362 <= grp_fu_1534_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and not((ap_const_lv1_0 = tmp_5_reg_5878)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_10))) then
                tmp_46_11_reg_7382 <= grp_fu_1534_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg3_fsm_13) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_5_reg_5878_pp1_it1)))) then
                tmp_46_13_reg_7427 <= grp_fu_1534_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg4_fsm_14) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_5_reg_5878_pp1_it1)))) then
                tmp_46_14_reg_7432 <= grp_fu_1534_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not((ap_const_lv1_0 = tmp_5_reg_5878)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg20_fsm_30))) then
                tmp_46_3_reg_7157 <= grp_fu_1534_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not((ap_const_lv1_0 = tmp_5_reg_5878)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg24_fsm_34))) then
                tmp_46_6_reg_7242 <= grp_fu_1534_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not((ap_const_lv1_0 = tmp_5_reg_5878)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg27_fsm_37))) then
                tmp_46_8_reg_7297 <= grp_fu_1534_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not((ap_const_lv1_0 = tmp_5_reg_5878)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg28_fsm_38))) then
                tmp_46_9_reg_7317 <= grp_fu_1534_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg7_fsm_17) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_5_reg_5878_pp1_it1)))) then
                tmp_49_10_reg_7472 <= grp_fu_1552_p2;
                tmp_49_s_reg_7462 <= grp_fu_1542_p2;
                tmp_60_s_reg_7467 <= grp_fu_1547_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_5_reg_5878_pp1_it1)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg8_fsm_18))) then
                tmp_49_11_reg_7487 <= grp_fu_1547_p2;
                tmp_60_10_reg_7482 <= grp_fu_1542_p2;
                tmp_60_11_reg_7492 <= grp_fu_1552_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_5_reg_5878_pp1_it1)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg9_fsm_19))) then
                tmp_49_12_reg_7502 <= grp_fu_1542_p2;
                tmp_49_13_reg_7512 <= grp_fu_1552_p2;
                tmp_60_12_reg_7507 <= grp_fu_1547_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_5_reg_5878_pp1_it1)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg10_fsm_20))) then
                tmp_49_14_reg_7527 <= grp_fu_1547_p2;
                tmp_60_13_reg_7522 <= grp_fu_1542_p2;
                tmp_60_14_reg_7532 <= grp_fu_1552_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_5_reg_5878_pp1_it1)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg6_fsm_16))) then
                tmp_49_9_reg_7447 <= grp_fu_1547_p2;
                tmp_60_8_reg_7442 <= grp_fu_1542_p2;
                tmp_60_9_reg_7452 <= grp_fu_1552_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_5_reg_5878_pp1_it1)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg18_fsm_28))) then
                tmp_50_10_reg_7577 <= grp_fu_1538_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((ap_const_lv1_0 = tmp_3_reg_7687)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg8_fsm_50))) then
                tmp_56_reg_7937 <= tmp_56_fu_5540_p1;
                tmp_57_reg_7944 <= tmp_57_fu_5544_p1;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg1_fsm_11) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_5_reg_5878_pp1_it1)))) then
                tmp_57_11_reg_7402 <= grp_fu_1534_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg2_fsm_12) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_5_reg_5878_pp1_it1)))) then
                tmp_57_12_reg_7422 <= grp_fu_1534_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not((ap_const_lv1_0 = tmp_5_reg_5878)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg22_fsm_32))) then
                tmp_57_4_reg_7192 <= grp_fu_1534_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not((ap_const_lv1_0 = tmp_5_reg_5878)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg26_fsm_36))) then
                tmp_57_7_reg_7277 <= grp_fu_1534_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not((ap_const_lv1_0 = tmp_5_reg_5878)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg29_fsm_39))) then
                tmp_57_9_reg_7332 <= grp_fu_1534_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not((ap_const_lv1_0 = tmp_5_reg_5878)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg30_fsm_40))) then
                tmp_57_s_reg_7347 <= grp_fu_1534_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_5_reg_5878_pp1_it1)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg5_fsm_15))) then
                tmp_60_7_reg_7437 <= grp_fu_1547_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_5_reg_5878_pp1_it1)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg24_fsm_34))) then
                tmp_61_11_reg_7612 <= grp_fu_1538_p2;
            end if;
        end if;
    end process;
    tmp_12_reg_5887(63 downto 17) <= "00000000000000000000000000000000000000000000000";
    ap_reg_ppstg_tmp_12_reg_5887_pp1_it1(63 downto 17) <= "00000000000000000000000000000000000000000000000";
    tmp_15_reg_5897(0) <= '1';
    tmp_15_reg_5897(63 downto 17) <= "00000000000000000000000000000000000000000000000";
    ap_reg_ppstg_tmp_15_reg_5897_pp1_it1(0) <= '1';
    ap_reg_ppstg_tmp_15_reg_5897_pp1_it1(63 downto 17) <= "00000000000000000000000000000000000000000000000";
    frame_addr_33_reg_5902(0) <= '1';
    i_2_s_reg_5907(1) <= '1';
    tmp_27_1_reg_5953(1) <= '1';
    tmp_27_1_reg_5953(63 downto 17) <= "00000000000000000000000000000000000000000000000";
    ap_reg_ppstg_tmp_27_1_reg_5953_pp1_it1(1) <= '1';
    ap_reg_ppstg_tmp_27_1_reg_5953_pp1_it1(63 downto 17) <= "00000000000000000000000000000000000000000000000";
    frame_addr_34_reg_5958(1) <= '1';
    tmp_30_1_reg_5963(1 downto 0) <= "11";
    tmp_30_1_reg_5963(63 downto 17) <= "00000000000000000000000000000000000000000000000";
    ap_reg_ppstg_tmp_30_1_reg_5963_pp1_it1(1 downto 0) <= "11";
    ap_reg_ppstg_tmp_30_1_reg_5963_pp1_it1(63 downto 17) <= "00000000000000000000000000000000000000000000000";
    frame_addr_35_reg_5968(1 downto 0) <= "11";
    i_2_1_reg_5973(2) <= '1';
    i_2_2_reg_5983(2 downto 1) <= "11";
    tmp_27_2_reg_6037(2) <= '1';
    tmp_27_2_reg_6037(63 downto 17) <= "00000000000000000000000000000000000000000000000";
    ap_reg_ppstg_tmp_27_2_reg_6037_pp1_it1(2) <= '1';
    ap_reg_ppstg_tmp_27_2_reg_6037_pp1_it1(63 downto 17) <= "00000000000000000000000000000000000000000000000";
    frame_addr_36_reg_6042(2) <= '1';
    tmp_30_2_reg_6047(0) <= '1';
    tmp_30_2_reg_6047(2 downto 2) <= "1";
    tmp_30_2_reg_6047(63 downto 17) <= "00000000000000000000000000000000000000000000000";
    ap_reg_ppstg_tmp_30_2_reg_6047_pp1_it1(0) <= '1';
    ap_reg_ppstg_tmp_30_2_reg_6047_pp1_it1(2 downto 2) <= "1";
    ap_reg_ppstg_tmp_30_2_reg_6047_pp1_it1(63 downto 17) <= "00000000000000000000000000000000000000000000000";
    frame_addr_37_reg_6052(0) <= '1';
    frame_addr_37_reg_6052(2) <= '1';
    i_2_3_reg_6064(3) <= '1';
    i_2_4_reg_6074(1) <= '1';
    i_2_4_reg_6074(3) <= '1';
    tmp_27_3_reg_6121(2 downto 1) <= "11";
    tmp_27_3_reg_6121(63 downto 17) <= "00000000000000000000000000000000000000000000000";
    ap_reg_ppstg_tmp_27_3_reg_6121_pp1_it1(2 downto 1) <= "11";
    ap_reg_ppstg_tmp_27_3_reg_6121_pp1_it1(63 downto 17) <= "00000000000000000000000000000000000000000000000";
    frame_addr_38_reg_6126(2 downto 1) <= "11";
    tmp_30_3_reg_6131(2 downto 0) <= "111";
    tmp_30_3_reg_6131(63 downto 17) <= "00000000000000000000000000000000000000000000000";
    ap_reg_ppstg_tmp_30_3_reg_6131_pp1_it1(2 downto 0) <= "111";
    ap_reg_ppstg_tmp_30_3_reg_6131_pp1_it1(63 downto 17) <= "00000000000000000000000000000000000000000000000";
    frame_addr_39_reg_6136(2 downto 0) <= "111";
    i_2_5_reg_6155(3 downto 2) <= "11";
    i_2_6_reg_6165(3 downto 1) <= "111";
    tmp_27_4_reg_6212(3) <= '1';
    tmp_27_4_reg_6212(63 downto 17) <= "00000000000000000000000000000000000000000000000";
    ap_reg_ppstg_tmp_27_4_reg_6212_pp1_it1(3) <= '1';
    ap_reg_ppstg_tmp_27_4_reg_6212_pp1_it1(63 downto 17) <= "00000000000000000000000000000000000000000000000";
    frame_addr_40_reg_6217(3) <= '1';
    tmp_30_4_reg_6222(0) <= '1';
    tmp_30_4_reg_6222(3 downto 3) <= "1";
    tmp_30_4_reg_6222(63 downto 17) <= "00000000000000000000000000000000000000000000000";
    ap_reg_ppstg_tmp_30_4_reg_6222_pp1_it1(0) <= '1';
    ap_reg_ppstg_tmp_30_4_reg_6222_pp1_it1(3 downto 3) <= "1";
    ap_reg_ppstg_tmp_30_4_reg_6222_pp1_it1(63 downto 17) <= "00000000000000000000000000000000000000000000000";
    frame_addr_41_reg_6227(0) <= '1';
    frame_addr_41_reg_6227(3) <= '1';
    i_2_7_reg_6246(4) <= '1';
    i_2_8_reg_6256(1) <= '1';
    i_2_8_reg_6256(4) <= '1';
    tmp_27_5_reg_6303(1) <= '1';
    tmp_27_5_reg_6303(3 downto 3) <= "1";
    tmp_27_5_reg_6303(63 downto 17) <= "00000000000000000000000000000000000000000000000";
    ap_reg_ppstg_tmp_27_5_reg_6303_pp1_it1(1) <= '1';
    ap_reg_ppstg_tmp_27_5_reg_6303_pp1_it1(3 downto 3) <= "1";
    ap_reg_ppstg_tmp_27_5_reg_6303_pp1_it1(63 downto 17) <= "00000000000000000000000000000000000000000000000";
    frame_addr_42_reg_6308(1) <= '1';
    frame_addr_42_reg_6308(3) <= '1';
    tmp_30_5_reg_6313(1 downto 0) <= "11";
    tmp_30_5_reg_6313(3 downto 3) <= "1";
    tmp_30_5_reg_6313(63 downto 17) <= "00000000000000000000000000000000000000000000000";
    ap_reg_ppstg_tmp_30_5_reg_6313_pp1_it1(1 downto 0) <= "11";
    ap_reg_ppstg_tmp_30_5_reg_6313_pp1_it1(3 downto 3) <= "1";
    ap_reg_ppstg_tmp_30_5_reg_6313_pp1_it1(63 downto 17) <= "00000000000000000000000000000000000000000000000";
    frame_addr_43_reg_6318(1 downto 0) <= "11";
    frame_addr_43_reg_6318(3) <= '1';
    i_2_9_reg_6351(2) <= '1';
    i_2_9_reg_6351(4) <= '1';
    i_2_10_reg_6361(2 downto 1) <= "11";
    i_2_10_reg_6361(4) <= '1';
    tmp_27_6_reg_6408(3 downto 2) <= "11";
    tmp_27_6_reg_6408(63 downto 17) <= "00000000000000000000000000000000000000000000000";
    ap_reg_ppstg_tmp_27_6_reg_6408_pp1_it1(3 downto 2) <= "11";
    ap_reg_ppstg_tmp_27_6_reg_6408_pp1_it1(63 downto 17) <= "00000000000000000000000000000000000000000000000";
    frame_addr_44_reg_6413(3 downto 2) <= "11";
    tmp_30_6_reg_6418(0) <= '1';
    tmp_30_6_reg_6418(3 downto 2) <= "11";
    tmp_30_6_reg_6418(63 downto 17) <= "00000000000000000000000000000000000000000000000";
    ap_reg_ppstg_tmp_30_6_reg_6418_pp1_it1(0) <= '1';
    ap_reg_ppstg_tmp_30_6_reg_6418_pp1_it1(3 downto 2) <= "11";
    ap_reg_ppstg_tmp_30_6_reg_6418_pp1_it1(63 downto 17) <= "00000000000000000000000000000000000000000000000";
    frame_addr_45_reg_6423(0) <= '1';
    frame_addr_45_reg_6423(3 downto 2) <= "11";
    i_2_11_reg_6456(4 downto 3) <= "11";
    i_2_12_reg_6466(1) <= '1';
    i_2_12_reg_6466(4 downto 3) <= "11";
    tmp_27_7_reg_6513(3 downto 1) <= "111";
    tmp_27_7_reg_6513(63 downto 17) <= "00000000000000000000000000000000000000000000000";
    ap_reg_ppstg_tmp_27_7_reg_6513_pp1_it1(3 downto 1) <= "111";
    ap_reg_ppstg_tmp_27_7_reg_6513_pp1_it1(63 downto 17) <= "00000000000000000000000000000000000000000000000";
    frame_addr_46_reg_6518(3 downto 1) <= "111";
    tmp_30_7_reg_6523(3 downto 0) <= "1111";
    tmp_30_7_reg_6523(63 downto 17) <= "00000000000000000000000000000000000000000000000";
    ap_reg_ppstg_tmp_30_7_reg_6523_pp1_it1(3 downto 0) <= "1111";
    ap_reg_ppstg_tmp_30_7_reg_6523_pp1_it1(63 downto 17) <= "00000000000000000000000000000000000000000000000";
    frame_addr_47_reg_6528(3 downto 0) <= "1111";
    i_2_13_reg_6561(4 downto 2) <= "111";
    i_2_14_reg_6571(4 downto 1) <= "1111";
    tmp_27_8_reg_6618(4) <= '1';
    tmp_27_8_reg_6618(63 downto 17) <= "00000000000000000000000000000000000000000000000";
    ap_reg_ppstg_tmp_27_8_reg_6618_pp1_it1(4) <= '1';
    ap_reg_ppstg_tmp_27_8_reg_6618_pp1_it1(63 downto 17) <= "00000000000000000000000000000000000000000000000";
    frame_addr_48_reg_6623(4) <= '1';
    tmp_30_8_reg_6628(0) <= '1';
    tmp_30_8_reg_6628(4 downto 4) <= "1";
    tmp_30_8_reg_6628(63 downto 17) <= "00000000000000000000000000000000000000000000000";
    ap_reg_ppstg_tmp_30_8_reg_6628_pp1_it1(0) <= '1';
    ap_reg_ppstg_tmp_30_8_reg_6628_pp1_it1(4 downto 4) <= "1";
    ap_reg_ppstg_tmp_30_8_reg_6628_pp1_it1(63 downto 17) <= "00000000000000000000000000000000000000000000000";
    frame_addr_49_reg_6633(0) <= '1';
    frame_addr_49_reg_6633(4) <= '1';
    tmp_27_9_reg_6703(1) <= '1';
    tmp_27_9_reg_6703(4 downto 4) <= "1";
    tmp_27_9_reg_6703(63 downto 17) <= "00000000000000000000000000000000000000000000000";
    ap_reg_ppstg_tmp_27_9_reg_6703_pp1_it1(1) <= '1';
    ap_reg_ppstg_tmp_27_9_reg_6703_pp1_it1(4 downto 4) <= "1";
    ap_reg_ppstg_tmp_27_9_reg_6703_pp1_it1(63 downto 17) <= "00000000000000000000000000000000000000000000000";
    frame_addr_50_reg_6708(1) <= '1';
    frame_addr_50_reg_6708(4) <= '1';
    tmp_30_9_reg_6713(1 downto 0) <= "11";
    tmp_30_9_reg_6713(4 downto 4) <= "1";
    tmp_30_9_reg_6713(63 downto 17) <= "00000000000000000000000000000000000000000000000";
    ap_reg_ppstg_tmp_30_9_reg_6713_pp1_it1(1 downto 0) <= "11";
    ap_reg_ppstg_tmp_30_9_reg_6713_pp1_it1(4 downto 4) <= "1";
    ap_reg_ppstg_tmp_30_9_reg_6713_pp1_it1(63 downto 17) <= "00000000000000000000000000000000000000000000000";
    frame_addr_51_reg_6718(1 downto 0) <= "11";
    frame_addr_51_reg_6718(4) <= '1';
    tmp_27_s_reg_6760(2) <= '1';
    tmp_27_s_reg_6760(4 downto 4) <= "1";
    tmp_27_s_reg_6760(63 downto 17) <= "00000000000000000000000000000000000000000000000";
    ap_reg_ppstg_tmp_27_s_reg_6760_pp1_it1(2) <= '1';
    ap_reg_ppstg_tmp_27_s_reg_6760_pp1_it1(4 downto 4) <= "1";
    ap_reg_ppstg_tmp_27_s_reg_6760_pp1_it1(63 downto 17) <= "00000000000000000000000000000000000000000000000";
    frame_addr_52_reg_6765(2) <= '1';
    frame_addr_52_reg_6765(4) <= '1';
    tmp_30_s_reg_6770(0) <= '1';
    tmp_30_s_reg_6770(2 downto 2) <= "1";
    tmp_30_s_reg_6770(4 downto 4) <= "1";
    tmp_30_s_reg_6770(63 downto 17) <= "00000000000000000000000000000000000000000000000";
    ap_reg_ppstg_tmp_30_s_reg_6770_pp1_it1(0) <= '1';
    ap_reg_ppstg_tmp_30_s_reg_6770_pp1_it1(2 downto 2) <= "1";
    ap_reg_ppstg_tmp_30_s_reg_6770_pp1_it1(4 downto 4) <= "1";
    ap_reg_ppstg_tmp_30_s_reg_6770_pp1_it1(63 downto 17) <= "00000000000000000000000000000000000000000000000";
    frame_addr_53_reg_6775(0) <= '1';
    frame_addr_53_reg_6775(2 downto 2) <= "1";
    frame_addr_53_reg_6775(4) <= '1';
    tmp_27_10_reg_6817(2 downto 1) <= "11";
    tmp_27_10_reg_6817(4 downto 4) <= "1";
    tmp_27_10_reg_6817(63 downto 17) <= "00000000000000000000000000000000000000000000000";
    ap_reg_ppstg_tmp_27_10_reg_6817_pp1_it1(2 downto 1) <= "11";
    ap_reg_ppstg_tmp_27_10_reg_6817_pp1_it1(4 downto 4) <= "1";
    ap_reg_ppstg_tmp_27_10_reg_6817_pp1_it1(63 downto 17) <= "00000000000000000000000000000000000000000000000";
    frame_addr_54_reg_6822(2 downto 1) <= "11";
    frame_addr_54_reg_6822(4) <= '1';
    tmp_30_10_reg_6827(2 downto 0) <= "111";
    tmp_30_10_reg_6827(4 downto 4) <= "1";
    tmp_30_10_reg_6827(63 downto 17) <= "00000000000000000000000000000000000000000000000";
    ap_reg_ppstg_tmp_30_10_reg_6827_pp1_it1(2 downto 0) <= "111";
    ap_reg_ppstg_tmp_30_10_reg_6827_pp1_it1(4 downto 4) <= "1";
    ap_reg_ppstg_tmp_30_10_reg_6827_pp1_it1(63 downto 17) <= "00000000000000000000000000000000000000000000000";
    frame_addr_55_reg_6832(2 downto 0) <= "111";
    frame_addr_55_reg_6832(4) <= '1';
    tmp_27_11_reg_6874(4 downto 3) <= "11";
    tmp_27_11_reg_6874(63 downto 17) <= "00000000000000000000000000000000000000000000000";
    ap_reg_ppstg_tmp_27_11_reg_6874_pp1_it1(4 downto 3) <= "11";
    ap_reg_ppstg_tmp_27_11_reg_6874_pp1_it1(63 downto 17) <= "00000000000000000000000000000000000000000000000";
    frame_addr_56_reg_6879(4 downto 3) <= "11";
    tmp_30_11_reg_6884(0) <= '1';
    tmp_30_11_reg_6884(4 downto 3) <= "11";
    tmp_30_11_reg_6884(63 downto 17) <= "00000000000000000000000000000000000000000000000";
    ap_reg_ppstg_tmp_30_11_reg_6884_pp1_it1(0) <= '1';
    ap_reg_ppstg_tmp_30_11_reg_6884_pp1_it1(4 downto 3) <= "11";
    ap_reg_ppstg_tmp_30_11_reg_6884_pp1_it1(63 downto 17) <= "00000000000000000000000000000000000000000000000";
    frame_addr_57_reg_6889(0) <= '1';
    frame_addr_57_reg_6889(4 downto 3) <= "11";
    tmp_27_12_reg_6931(1) <= '1';
    tmp_27_12_reg_6931(4 downto 3) <= "11";
    tmp_27_12_reg_6931(63 downto 17) <= "00000000000000000000000000000000000000000000000";
    ap_reg_ppstg_tmp_27_12_reg_6931_pp1_it1(1) <= '1';
    ap_reg_ppstg_tmp_27_12_reg_6931_pp1_it1(4 downto 3) <= "11";
    ap_reg_ppstg_tmp_27_12_reg_6931_pp1_it1(63 downto 17) <= "00000000000000000000000000000000000000000000000";
    frame_addr_58_reg_6936(1) <= '1';
    frame_addr_58_reg_6936(4 downto 3) <= "11";
    tmp_30_12_reg_6941(1 downto 0) <= "11";
    tmp_30_12_reg_6941(4 downto 3) <= "11";
    tmp_30_12_reg_6941(63 downto 17) <= "00000000000000000000000000000000000000000000000";
    ap_reg_ppstg_tmp_30_12_reg_6941_pp1_it1(1 downto 0) <= "11";
    ap_reg_ppstg_tmp_30_12_reg_6941_pp1_it1(4 downto 3) <= "11";
    ap_reg_ppstg_tmp_30_12_reg_6941_pp1_it1(63 downto 17) <= "00000000000000000000000000000000000000000000000";
    frame_addr_59_reg_6946(1 downto 0) <= "11";
    frame_addr_59_reg_6946(4 downto 3) <= "11";
    tmp_27_13_reg_6988(4 downto 2) <= "111";
    tmp_27_13_reg_6988(63 downto 17) <= "00000000000000000000000000000000000000000000000";
    ap_reg_ppstg_tmp_27_13_reg_6988_pp1_it1(4 downto 2) <= "111";
    ap_reg_ppstg_tmp_27_13_reg_6988_pp1_it1(63 downto 17) <= "00000000000000000000000000000000000000000000000";
    frame_addr_60_reg_6993(4 downto 2) <= "111";
    tmp_30_13_reg_6998(0) <= '1';
    tmp_30_13_reg_6998(4 downto 2) <= "111";
    tmp_30_13_reg_6998(63 downto 17) <= "00000000000000000000000000000000000000000000000";
    ap_reg_ppstg_tmp_30_13_reg_6998_pp1_it1(0) <= '1';
    ap_reg_ppstg_tmp_30_13_reg_6998_pp1_it1(4 downto 2) <= "111";
    ap_reg_ppstg_tmp_30_13_reg_6998_pp1_it1(63 downto 17) <= "00000000000000000000000000000000000000000000000";
    frame_addr_61_reg_7003(0) <= '1';
    frame_addr_61_reg_7003(4 downto 2) <= "111";
    tmp_29_14_reg_7008(4 downto 0) <= "11111";
    tmp_27_14_reg_7055(4 downto 1) <= "1111";
    tmp_27_14_reg_7055(63 downto 17) <= "00000000000000000000000000000000000000000000000";
    ap_reg_ppstg_tmp_27_14_reg_7055_pp1_it1(4 downto 1) <= "1111";
    ap_reg_ppstg_tmp_27_14_reg_7055_pp1_it1(63 downto 17) <= "00000000000000000000000000000000000000000000000";
    frame_addr_62_reg_7060(4 downto 1) <= "1111";
    tmp_30_14_reg_7065(4 downto 0) <= "11111";
    tmp_30_14_reg_7065(63 downto 17) <= "00000000000000000000000000000000000000000000000";
    ap_reg_ppstg_tmp_30_14_reg_7065_pp1_it1(4 downto 0) <= "11111";
    ap_reg_ppstg_tmp_30_14_reg_7065_pp1_it1(63 downto 17) <= "00000000000000000000000000000000000000000000000";
    frame_addr_63_reg_7070(4 downto 0) <= "11111";
    i_1_s_reg_7696(1) <= '1';
    i_1_1_reg_7713(2) <= '1';
    i_1_2_reg_7723(2 downto 1) <= "11";
    i_1_3_reg_7747(3) <= '1';
    i_1_4_reg_7757(1) <= '1';
    i_1_4_reg_7757(3) <= '1';
    i_1_5_reg_7781(3 downto 2) <= "11";
    i_1_6_reg_7791(3 downto 1) <= "111";
    i_1_7_reg_7815(4) <= '1';
    i_1_8_reg_7825(1) <= '1';
    i_1_8_reg_7825(4) <= '1';
    i_1_9_reg_7849(2) <= '1';
    i_1_9_reg_7849(4) <= '1';
    i_1_10_reg_7859(2 downto 1) <= "11";
    i_1_10_reg_7859(4) <= '1';
    i_1_11_reg_7883(4 downto 3) <= "11";
    i_1_12_reg_7893(1) <= '1';
    i_1_12_reg_7893(4 downto 3) <= "11";
    i_1_13_reg_7917(4 downto 2) <= "111";
    i_1_14_reg_7927(4 downto 1) <= "1111";
    tmp_21_14_reg_7951(4 downto 0) <= "11111";

    -- the next state (ap_NS_fsm) of the state machine. --
    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, gmem_offset_BVALID, ap_reg_ppiten_pp0_it0, ap_sig_bdd_440, ap_reg_ppiten_pp0_it1, ap_reg_ppiten_pp0_it2, ap_reg_ppiten_pp1_it0, ap_reg_ppiten_pp1_it1, ap_reg_ppiten_pp1_it2, ap_reg_ppiten_pp2_it0, ap_sig_cseq_ST_pp1_stg7_fsm_17, init_read_reg_5844, ap_sig_ioackin_gmem_ARREADY, exitcond_fu_1953_p2, tmp_5_fu_1970_p2, tmp_3_fu_4880_p2, ap_sig_ioackin_gmem_offset_AWREADY, exitcond1_fu_5827_p2, ap_reg_ppiten_pp3_it0, ap_reg_ppiten_pp3_it1, ap_reg_ppstg_exitcond1_reg_7966_pp3_it1, ap_sig_ioackin_gmem_offset_WREADY, ap_reg_ppiten_pp3_it2)
    begin
        case ap_CS_fsm is
            when ap_ST_st1_fsm_0 => 
                if (not((ap_start = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_st2_fsm_1;
                else
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                end if;
            when ap_ST_st2_fsm_1 => 
                if (not((ap_const_logic_0 = ap_sig_ioackin_gmem_ARREADY))) then
                    ap_NS_fsm <= ap_ST_st3_fsm_2;
                else
                    ap_NS_fsm <= ap_ST_st2_fsm_1;
                end if;
            when ap_ST_st3_fsm_2 => 
                ap_NS_fsm <= ap_ST_st4_fsm_3;
            when ap_ST_st4_fsm_3 => 
                ap_NS_fsm <= ap_ST_st5_fsm_4;
            when ap_ST_st5_fsm_4 => 
                ap_NS_fsm <= ap_ST_st6_fsm_5;
            when ap_ST_st6_fsm_5 => 
                ap_NS_fsm <= ap_ST_st7_fsm_6;
            when ap_ST_st7_fsm_6 => 
                ap_NS_fsm <= ap_ST_st8_fsm_7;
            when ap_ST_st8_fsm_7 => 
                ap_NS_fsm <= ap_ST_pp0_stg0_fsm_8;
            when ap_ST_pp0_stg0_fsm_8 => 
                if ((not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not((ap_sig_bdd_440 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it1)))) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not((ap_sig_bdd_440 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))) and not((ap_const_lv1_0 = exitcond_fu_1953_p2)) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it1)))))) then
                    ap_NS_fsm <= ap_ST_pp0_stg0_fsm_8;
                elsif ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not((ap_sig_bdd_440 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it1))) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not((ap_sig_bdd_440 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))) and not((ap_const_lv1_0 = exitcond_fu_1953_p2)) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it1))))) then
                    ap_NS_fsm <= ap_ST_st12_fsm_9;
                else
                    ap_NS_fsm <= ap_ST_pp0_stg0_fsm_8;
                end if;
            when ap_ST_st12_fsm_9 => 
                if (not((ap_const_lv1_0 = init_read_reg_5844))) then
                    ap_NS_fsm <= ap_ST_pp2_stg0_fsm_42;
                else
                    ap_NS_fsm <= ap_ST_pp1_stg0_fsm_10;
                end if;
            when ap_ST_pp1_stg0_fsm_10 => 
                if (not(((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_lv1_0 = tmp_5_fu_1970_p2) and not((ap_const_logic_1 = ap_reg_ppiten_pp1_it1))))) then
                    ap_NS_fsm <= ap_ST_pp1_stg1_fsm_11;
                else
                    ap_NS_fsm <= ap_ST_st102_fsm_58;
                end if;
            when ap_ST_pp1_stg1_fsm_11 => 
                ap_NS_fsm <= ap_ST_pp1_stg2_fsm_12;
            when ap_ST_pp1_stg2_fsm_12 => 
                ap_NS_fsm <= ap_ST_pp1_stg3_fsm_13;
            when ap_ST_pp1_stg3_fsm_13 => 
                ap_NS_fsm <= ap_ST_pp1_stg4_fsm_14;
            when ap_ST_pp1_stg4_fsm_14 => 
                ap_NS_fsm <= ap_ST_pp1_stg5_fsm_15;
            when ap_ST_pp1_stg5_fsm_15 => 
                ap_NS_fsm <= ap_ST_pp1_stg6_fsm_16;
            when ap_ST_pp1_stg6_fsm_16 => 
                ap_NS_fsm <= ap_ST_pp1_stg7_fsm_17;
            when ap_ST_pp1_stg7_fsm_17 => 
                if (not(((ap_const_logic_1 = ap_reg_ppiten_pp1_it2) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg7_fsm_17) and not((ap_const_logic_1 = ap_reg_ppiten_pp1_it1))))) then
                    ap_NS_fsm <= ap_ST_pp1_stg8_fsm_18;
                else
                    ap_NS_fsm <= ap_ST_st102_fsm_58;
                end if;
            when ap_ST_pp1_stg8_fsm_18 => 
                ap_NS_fsm <= ap_ST_pp1_stg9_fsm_19;
            when ap_ST_pp1_stg9_fsm_19 => 
                ap_NS_fsm <= ap_ST_pp1_stg10_fsm_20;
            when ap_ST_pp1_stg10_fsm_20 => 
                ap_NS_fsm <= ap_ST_pp1_stg11_fsm_21;
            when ap_ST_pp1_stg11_fsm_21 => 
                ap_NS_fsm <= ap_ST_pp1_stg12_fsm_22;
            when ap_ST_pp1_stg12_fsm_22 => 
                ap_NS_fsm <= ap_ST_pp1_stg13_fsm_23;
            when ap_ST_pp1_stg13_fsm_23 => 
                ap_NS_fsm <= ap_ST_pp1_stg14_fsm_24;
            when ap_ST_pp1_stg14_fsm_24 => 
                ap_NS_fsm <= ap_ST_pp1_stg15_fsm_25;
            when ap_ST_pp1_stg15_fsm_25 => 
                ap_NS_fsm <= ap_ST_pp1_stg16_fsm_26;
            when ap_ST_pp1_stg16_fsm_26 => 
                ap_NS_fsm <= ap_ST_pp1_stg17_fsm_27;
            when ap_ST_pp1_stg17_fsm_27 => 
                ap_NS_fsm <= ap_ST_pp1_stg18_fsm_28;
            when ap_ST_pp1_stg18_fsm_28 => 
                ap_NS_fsm <= ap_ST_pp1_stg19_fsm_29;
            when ap_ST_pp1_stg19_fsm_29 => 
                ap_NS_fsm <= ap_ST_pp1_stg20_fsm_30;
            when ap_ST_pp1_stg20_fsm_30 => 
                ap_NS_fsm <= ap_ST_pp1_stg21_fsm_31;
            when ap_ST_pp1_stg21_fsm_31 => 
                ap_NS_fsm <= ap_ST_pp1_stg22_fsm_32;
            when ap_ST_pp1_stg22_fsm_32 => 
                ap_NS_fsm <= ap_ST_pp1_stg23_fsm_33;
            when ap_ST_pp1_stg23_fsm_33 => 
                ap_NS_fsm <= ap_ST_pp1_stg24_fsm_34;
            when ap_ST_pp1_stg24_fsm_34 => 
                ap_NS_fsm <= ap_ST_pp1_stg25_fsm_35;
            when ap_ST_pp1_stg25_fsm_35 => 
                ap_NS_fsm <= ap_ST_pp1_stg26_fsm_36;
            when ap_ST_pp1_stg26_fsm_36 => 
                ap_NS_fsm <= ap_ST_pp1_stg27_fsm_37;
            when ap_ST_pp1_stg27_fsm_37 => 
                ap_NS_fsm <= ap_ST_pp1_stg28_fsm_38;
            when ap_ST_pp1_stg28_fsm_38 => 
                ap_NS_fsm <= ap_ST_pp1_stg29_fsm_39;
            when ap_ST_pp1_stg29_fsm_39 => 
                ap_NS_fsm <= ap_ST_pp1_stg30_fsm_40;
            when ap_ST_pp1_stg30_fsm_40 => 
                ap_NS_fsm <= ap_ST_pp1_stg31_fsm_41;
            when ap_ST_pp1_stg31_fsm_41 => 
                ap_NS_fsm <= ap_ST_pp1_stg0_fsm_10;
            when ap_ST_pp2_stg0_fsm_42 => 
                if (not(((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and (ap_const_lv1_0 = tmp_3_fu_4880_p2)))) then
                    ap_NS_fsm <= ap_ST_pp2_stg1_fsm_43;
                else
                    ap_NS_fsm <= ap_ST_st102_fsm_58;
                end if;
            when ap_ST_pp2_stg1_fsm_43 => 
                ap_NS_fsm <= ap_ST_pp2_stg2_fsm_44;
            when ap_ST_pp2_stg2_fsm_44 => 
                ap_NS_fsm <= ap_ST_pp2_stg3_fsm_45;
            when ap_ST_pp2_stg3_fsm_45 => 
                ap_NS_fsm <= ap_ST_pp2_stg4_fsm_46;
            when ap_ST_pp2_stg4_fsm_46 => 
                ap_NS_fsm <= ap_ST_pp2_stg5_fsm_47;
            when ap_ST_pp2_stg5_fsm_47 => 
                ap_NS_fsm <= ap_ST_pp2_stg6_fsm_48;
            when ap_ST_pp2_stg6_fsm_48 => 
                ap_NS_fsm <= ap_ST_pp2_stg7_fsm_49;
            when ap_ST_pp2_stg7_fsm_49 => 
                ap_NS_fsm <= ap_ST_pp2_stg8_fsm_50;
            when ap_ST_pp2_stg8_fsm_50 => 
                ap_NS_fsm <= ap_ST_pp2_stg9_fsm_51;
            when ap_ST_pp2_stg9_fsm_51 => 
                ap_NS_fsm <= ap_ST_pp2_stg10_fsm_52;
            when ap_ST_pp2_stg10_fsm_52 => 
                ap_NS_fsm <= ap_ST_pp2_stg11_fsm_53;
            when ap_ST_pp2_stg11_fsm_53 => 
                ap_NS_fsm <= ap_ST_pp2_stg12_fsm_54;
            when ap_ST_pp2_stg12_fsm_54 => 
                ap_NS_fsm <= ap_ST_pp2_stg13_fsm_55;
            when ap_ST_pp2_stg13_fsm_55 => 
                ap_NS_fsm <= ap_ST_pp2_stg14_fsm_56;
            when ap_ST_pp2_stg14_fsm_56 => 
                ap_NS_fsm <= ap_ST_pp2_stg15_fsm_57;
            when ap_ST_pp2_stg15_fsm_57 => 
                ap_NS_fsm <= ap_ST_pp2_stg0_fsm_42;
            when ap_ST_st102_fsm_58 => 
                if (not((ap_const_logic_0 = ap_sig_ioackin_gmem_offset_AWREADY))) then
                    ap_NS_fsm <= ap_ST_pp3_stg0_fsm_59;
                else
                    ap_NS_fsm <= ap_ST_st102_fsm_58;
                end if;
            when ap_ST_pp3_stg0_fsm_59 => 
                if ((not(((ap_const_logic_1 = ap_reg_ppiten_pp3_it2) and not(((ap_const_lv1_0 = ap_reg_ppstg_exitcond1_reg_7966_pp3_it1) and (ap_const_logic_0 = ap_sig_ioackin_gmem_offset_WREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp3_it2))) and not((ap_const_logic_1 = ap_reg_ppiten_pp3_it1)))) and not(((ap_const_logic_1 = ap_reg_ppiten_pp3_it0) and not(((ap_const_lv1_0 = ap_reg_ppstg_exitcond1_reg_7966_pp3_it1) and (ap_const_logic_0 = ap_sig_ioackin_gmem_offset_WREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp3_it2))) and not((ap_const_lv1_0 = exitcond1_fu_5827_p2)) and not((ap_const_logic_1 = ap_reg_ppiten_pp3_it1)))))) then
                    ap_NS_fsm <= ap_ST_pp3_stg0_fsm_59;
                elsif ((((ap_const_logic_1 = ap_reg_ppiten_pp3_it2) and not(((ap_const_lv1_0 = ap_reg_ppstg_exitcond1_reg_7966_pp3_it1) and (ap_const_logic_0 = ap_sig_ioackin_gmem_offset_WREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp3_it2))) and not((ap_const_logic_1 = ap_reg_ppiten_pp3_it1))) or ((ap_const_logic_1 = ap_reg_ppiten_pp3_it0) and not(((ap_const_lv1_0 = ap_reg_ppstg_exitcond1_reg_7966_pp3_it1) and (ap_const_logic_0 = ap_sig_ioackin_gmem_offset_WREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp3_it2))) and not((ap_const_lv1_0 = exitcond1_fu_5827_p2)) and not((ap_const_logic_1 = ap_reg_ppiten_pp3_it1))))) then
                    ap_NS_fsm <= ap_ST_st106_fsm_60;
                else
                    ap_NS_fsm <= ap_ST_pp3_stg0_fsm_59;
                end if;
            when ap_ST_st106_fsm_60 => 
                ap_NS_fsm <= ap_ST_st107_fsm_61;
            when ap_ST_st107_fsm_61 => 
                ap_NS_fsm <= ap_ST_st108_fsm_62;
            when ap_ST_st108_fsm_62 => 
                ap_NS_fsm <= ap_ST_st109_fsm_63;
            when ap_ST_st109_fsm_63 => 
                ap_NS_fsm <= ap_ST_st110_fsm_64;
            when ap_ST_st110_fsm_64 => 
                if (not((gmem_offset_BVALID = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                else
                    ap_NS_fsm <= ap_ST_st110_fsm_64;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    abs_i10_fu_3868_p3 <= 
        x_assign_s_fu_3850_p2 when (abscond_i10_fu_3862_p2(0) = '1') else 
        neg_i10_fu_3856_p2;
    abs_i11_fu_3916_p3 <= 
        x_assign_10_fu_3898_p2 when (abscond_i11_fu_3910_p2(0) = '1') else 
        neg_i11_fu_3904_p2;
    abs_i12_fu_3963_p3 <= 
        x_assign_11_fu_3945_p2 when (abscond_i12_fu_3957_p2(0) = '1') else 
        neg_i12_fu_3951_p2;
    abs_i13_fu_4011_p3 <= 
        x_assign_12_fu_3993_p2 when (abscond_i13_fu_4005_p2(0) = '1') else 
        neg_i13_fu_3999_p2;
    abs_i14_fu_4058_p3 <= 
        x_assign_13_fu_4040_p2 when (abscond_i14_fu_4052_p2(0) = '1') else 
        neg_i14_fu_4046_p2;
    abs_i15_fu_4106_p3 <= 
        x_assign_14_fu_4088_p2 when (abscond_i15_fu_4100_p2(0) = '1') else 
        neg_i15_fu_4094_p2;
    abs_i16_fu_4153_p3 <= 
        x_assign_15_fu_4135_p2 when (abscond_i16_fu_4147_p2(0) = '1') else 
        neg_i16_fu_4141_p2;
    abs_i17_fu_4200_p3 <= 
        x_assign_16_fu_4182_p2 when (abscond_i17_fu_4194_p2(0) = '1') else 
        neg_i17_fu_4188_p2;
    abs_i18_fu_4247_p3 <= 
        x_assign_17_fu_4229_p2 when (abscond_i18_fu_4241_p2(0) = '1') else 
        neg_i18_fu_4235_p2;
    abs_i19_fu_4294_p3 <= 
        x_assign_18_fu_4276_p2 when (abscond_i19_fu_4288_p2(0) = '1') else 
        neg_i19_fu_4282_p2;
    abs_i1_fu_3393_p3 <= 
        x_assign_fu_3375_p2 when (abscond_i1_fu_3387_p2(0) = '1') else 
        neg_i1_fu_3381_p2;
    abs_i20_fu_4341_p3 <= 
        x_assign_19_fu_4323_p2 when (abscond_i20_fu_4335_p2(0) = '1') else 
        neg_i20_fu_4329_p2;
    abs_i21_fu_4388_p3 <= 
        x_assign_20_fu_4370_p2 when (abscond_i21_fu_4382_p2(0) = '1') else 
        neg_i21_fu_4376_p2;
    abs_i22_fu_4435_p3 <= 
        x_assign_21_fu_4417_p2 when (abscond_i22_fu_4429_p2(0) = '1') else 
        neg_i22_fu_4423_p2;
    abs_i23_fu_4482_p3 <= 
        x_assign_22_fu_4464_p2 when (abscond_i23_fu_4476_p2(0) = '1') else 
        neg_i23_fu_4470_p2;
    abs_i24_fu_4529_p3 <= 
        x_assign_23_fu_4511_p2 when (abscond_i24_fu_4523_p2(0) = '1') else 
        neg_i24_fu_4517_p2;
    abs_i25_fu_4576_p3 <= 
        x_assign_24_fu_4558_p2 when (abscond_i25_fu_4570_p2(0) = '1') else 
        neg_i25_fu_4564_p2;
    abs_i26_fu_4623_p3 <= 
        x_assign_25_fu_4605_p2 when (abscond_i26_fu_4617_p2(0) = '1') else 
        neg_i26_fu_4611_p2;
    abs_i27_fu_4670_p3 <= 
        x_assign_26_fu_4652_p2 when (abscond_i27_fu_4664_p2(0) = '1') else 
        neg_i27_fu_4658_p2;
    abs_i28_fu_4717_p3 <= 
        x_assign_27_fu_4699_p2 when (abscond_i28_fu_4711_p2(0) = '1') else 
        neg_i28_fu_4705_p2;
    abs_i29_fu_4764_p3 <= 
        x_assign_28_fu_4746_p2 when (abscond_i29_fu_4758_p2(0) = '1') else 
        neg_i29_fu_4752_p2;
    abs_i2_fu_3441_p3 <= 
        x_assign_1_fu_3423_p2 when (abscond_i2_fu_3435_p2(0) = '1') else 
        neg_i2_fu_3429_p2;
    abs_i30_fu_4811_p3 <= 
        x_assign_29_fu_4793_p2 when (abscond_i30_fu_4805_p2(0) = '1') else 
        neg_i30_fu_4799_p2;
    abs_i31_fu_4858_p3 <= 
        x_assign_30_fu_4840_p2 when (abscond_i31_fu_4852_p2(0) = '1') else 
        neg_i31_fu_4846_p2;
    abs_i3_fu_3536_p3 <= 
        x_assign_3_fu_3518_p2 when (abscond_i3_fu_3530_p2(0) = '1') else 
        neg_i3_fu_3524_p2;
    abs_i4_fu_3583_p3 <= 
        x_assign_4_fu_3565_p2 when (abscond_i4_fu_3577_p2(0) = '1') else 
        neg_i4_fu_3571_p2;
    abs_i5_fu_3631_p3 <= 
        x_assign_5_fu_3613_p2 when (abscond_i5_fu_3625_p2(0) = '1') else 
        neg_i5_fu_3619_p2;
    abs_i6_fu_3678_p3 <= 
        x_assign_6_fu_3660_p2 when (abscond_i6_fu_3672_p2(0) = '1') else 
        neg_i6_fu_3666_p2;
    abs_i7_fu_3726_p3 <= 
        x_assign_7_fu_3708_p2 when (abscond_i7_fu_3720_p2(0) = '1') else 
        neg_i7_fu_3714_p2;
    abs_i8_fu_3773_p3 <= 
        x_assign_8_fu_3755_p2 when (abscond_i8_fu_3767_p2(0) = '1') else 
        neg_i8_fu_3761_p2;
    abs_i9_fu_3821_p3 <= 
        x_assign_9_fu_3803_p2 when (abscond_i9_fu_3815_p2(0) = '1') else 
        neg_i9_fu_3809_p2;
    abs_i_fu_3488_p3 <= 
        x_assign_2_fu_3470_p2 when (abscond_i_fu_3482_p2(0) = '1') else 
        neg_i_fu_3476_p2;
    abscond_i10_fu_3862_p2 <= "1" when (signed(x_assign_s_fu_3850_p2) > signed(ap_const_lv9_0)) else "0";
    abscond_i11_fu_3910_p2 <= "1" when (signed(x_assign_10_fu_3898_p2) > signed(ap_const_lv9_0)) else "0";
    abscond_i12_fu_3957_p2 <= "1" when (signed(x_assign_11_fu_3945_p2) > signed(ap_const_lv9_0)) else "0";
    abscond_i13_fu_4005_p2 <= "1" when (signed(x_assign_12_fu_3993_p2) > signed(ap_const_lv9_0)) else "0";
    abscond_i14_fu_4052_p2 <= "1" when (signed(x_assign_13_fu_4040_p2) > signed(ap_const_lv9_0)) else "0";
    abscond_i15_fu_4100_p2 <= "1" when (signed(x_assign_14_fu_4088_p2) > signed(ap_const_lv9_0)) else "0";
    abscond_i16_fu_4147_p2 <= "1" when (signed(x_assign_15_fu_4135_p2) > signed(ap_const_lv9_0)) else "0";
    abscond_i17_fu_4194_p2 <= "1" when (signed(x_assign_16_fu_4182_p2) > signed(ap_const_lv9_0)) else "0";
    abscond_i18_fu_4241_p2 <= "1" when (signed(x_assign_17_fu_4229_p2) > signed(ap_const_lv9_0)) else "0";
    abscond_i19_fu_4288_p2 <= "1" when (signed(x_assign_18_fu_4276_p2) > signed(ap_const_lv9_0)) else "0";
    abscond_i1_fu_3387_p2 <= "1" when (signed(x_assign_fu_3375_p2) > signed(ap_const_lv9_0)) else "0";
    abscond_i20_fu_4335_p2 <= "1" when (signed(x_assign_19_fu_4323_p2) > signed(ap_const_lv9_0)) else "0";
    abscond_i21_fu_4382_p2 <= "1" when (signed(x_assign_20_fu_4370_p2) > signed(ap_const_lv9_0)) else "0";
    abscond_i22_fu_4429_p2 <= "1" when (signed(x_assign_21_fu_4417_p2) > signed(ap_const_lv9_0)) else "0";
    abscond_i23_fu_4476_p2 <= "1" when (signed(x_assign_22_fu_4464_p2) > signed(ap_const_lv9_0)) else "0";
    abscond_i24_fu_4523_p2 <= "1" when (signed(x_assign_23_fu_4511_p2) > signed(ap_const_lv9_0)) else "0";
    abscond_i25_fu_4570_p2 <= "1" when (signed(x_assign_24_fu_4558_p2) > signed(ap_const_lv9_0)) else "0";
    abscond_i26_fu_4617_p2 <= "1" when (signed(x_assign_25_fu_4605_p2) > signed(ap_const_lv9_0)) else "0";
    abscond_i27_fu_4664_p2 <= "1" when (signed(x_assign_26_fu_4652_p2) > signed(ap_const_lv9_0)) else "0";
    abscond_i28_fu_4711_p2 <= "1" when (signed(x_assign_27_fu_4699_p2) > signed(ap_const_lv9_0)) else "0";
    abscond_i29_fu_4758_p2 <= "1" when (signed(x_assign_28_fu_4746_p2) > signed(ap_const_lv9_0)) else "0";
    abscond_i2_fu_3435_p2 <= "1" when (signed(x_assign_1_fu_3423_p2) > signed(ap_const_lv9_0)) else "0";
    abscond_i30_fu_4805_p2 <= "1" when (signed(x_assign_29_fu_4793_p2) > signed(ap_const_lv9_0)) else "0";
    abscond_i31_fu_4852_p2 <= "1" when (signed(x_assign_30_fu_4840_p2) > signed(ap_const_lv9_0)) else "0";
    abscond_i3_fu_3530_p2 <= "1" when (signed(x_assign_3_fu_3518_p2) > signed(ap_const_lv9_0)) else "0";
    abscond_i4_fu_3577_p2 <= "1" when (signed(x_assign_4_fu_3565_p2) > signed(ap_const_lv9_0)) else "0";
    abscond_i5_fu_3625_p2 <= "1" when (signed(x_assign_5_fu_3613_p2) > signed(ap_const_lv9_0)) else "0";
    abscond_i6_fu_3672_p2 <= "1" when (signed(x_assign_6_fu_3660_p2) > signed(ap_const_lv9_0)) else "0";
    abscond_i7_fu_3720_p2 <= "1" when (signed(x_assign_7_fu_3708_p2) > signed(ap_const_lv9_0)) else "0";
    abscond_i8_fu_3767_p2 <= "1" when (signed(x_assign_8_fu_3755_p2) > signed(ap_const_lv9_0)) else "0";
    abscond_i9_fu_3815_p2 <= "1" when (signed(x_assign_9_fu_3803_p2) > signed(ap_const_lv9_0)) else "0";
    abscond_i_fu_3482_p2 <= "1" when (signed(x_assign_2_fu_3470_p2) > signed(ap_const_lv9_0)) else "0";

    -- ap_done assign process. --
    ap_done_assign_proc : process(gmem_offset_BVALID, ap_sig_cseq_ST_st110_fsm_64)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st110_fsm_64) and not((gmem_offset_BVALID = ap_const_logic_0)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_idle assign process. --
    ap_idle_assign_proc : process(ap_start, ap_sig_cseq_ST_st1_fsm_0)
    begin
        if ((not((ap_const_logic_1 = ap_start)) and (ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_ready assign process. --
    ap_ready_assign_proc : process(gmem_offset_BVALID, ap_sig_cseq_ST_st110_fsm_64)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st110_fsm_64) and not((gmem_offset_BVALID = ap_const_logic_0)))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    ap_return <= ap_const_lv32_0;

    -- ap_rst_n_inv assign process. --
    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;


    -- ap_sig_bdd_1090 assign process. --
    ap_sig_bdd_1090_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_1090 <= (ap_const_lv1_1 = ap_CS_fsm(1 downto 1));
    end process;


    -- ap_sig_bdd_1922 assign process. --
    ap_sig_bdd_1922_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_1922 <= (ap_const_lv1_1 = ap_CS_fsm(42 downto 42));
    end process;


    -- ap_sig_bdd_2036 assign process. --
    ap_sig_bdd_2036_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_2036 <= (ap_const_lv1_1 = ap_CS_fsm(57 downto 57));
    end process;


    -- ap_sig_bdd_2050 assign process. --
    ap_sig_bdd_2050_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_2050 <= (ap_const_lv1_1 = ap_CS_fsm(58 downto 58));
    end process;


    -- ap_sig_bdd_2063 assign process. --
    ap_sig_bdd_2063_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_2063 <= (ap_const_lv1_1 = ap_CS_fsm(59 downto 59));
    end process;


    -- ap_sig_bdd_2099 assign process. --
    ap_sig_bdd_2099_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_2099 <= (ap_const_lv1_1 = ap_CS_fsm(7 downto 7));
    end process;


    -- ap_sig_bdd_2111 assign process. --
    ap_sig_bdd_2111_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_2111 <= (ap_const_lv1_1 = ap_CS_fsm(9 downto 9));
    end process;


    -- ap_sig_bdd_2367 assign process. --
    ap_sig_bdd_2367_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_2367 <= (ap_const_lv1_1 = ap_CS_fsm(51 downto 51));
    end process;


    -- ap_sig_bdd_2382 assign process. --
    ap_sig_bdd_2382_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_2382 <= (ap_const_lv1_1 = ap_CS_fsm(52 downto 52));
    end process;


    -- ap_sig_bdd_2397 assign process. --
    ap_sig_bdd_2397_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_2397 <= (ap_const_lv1_1 = ap_CS_fsm(53 downto 53));
    end process;


    -- ap_sig_bdd_2412 assign process. --
    ap_sig_bdd_2412_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_2412 <= (ap_const_lv1_1 = ap_CS_fsm(54 downto 54));
    end process;


    -- ap_sig_bdd_2427 assign process. --
    ap_sig_bdd_2427_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_2427 <= (ap_const_lv1_1 = ap_CS_fsm(55 downto 55));
    end process;


    -- ap_sig_bdd_2442 assign process. --
    ap_sig_bdd_2442_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_2442 <= (ap_const_lv1_1 = ap_CS_fsm(56 downto 56));
    end process;


    -- ap_sig_bdd_2486 assign process. --
    ap_sig_bdd_2486_assign_proc : process(ap_reg_ppstg_exitcond1_reg_7966_pp3_it1, ap_reg_ppiten_pp3_it2)
    begin
                ap_sig_bdd_2486 <= ((ap_const_lv1_0 = ap_reg_ppstg_exitcond1_reg_7966_pp3_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp3_it2));
    end process;


    -- ap_sig_bdd_2497 assign process. --
    ap_sig_bdd_2497_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_2497 <= (ap_const_lv1_1 = ap_CS_fsm(64 downto 64));
    end process;


    -- ap_sig_bdd_431 assign process. --
    ap_sig_bdd_431_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_431 <= (ap_const_lv1_1 = ap_CS_fsm(8 downto 8));
    end process;


    -- ap_sig_bdd_440 assign process. --
    ap_sig_bdd_440_assign_proc : process(gmem_RVALID, exitcond_reg_5864)
    begin
                ap_sig_bdd_440 <= ((gmem_RVALID = ap_const_logic_0) and (exitcond_reg_5864 = ap_const_lv1_0));
    end process;


    -- ap_sig_bdd_461 assign process. --
    ap_sig_bdd_461_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_461 <= (ap_const_lv1_1 = ap_CS_fsm(11 downto 11));
    end process;


    -- ap_sig_bdd_481 assign process. --
    ap_sig_bdd_481_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_481 <= (ap_const_lv1_1 = ap_CS_fsm(43 downto 43));
    end process;


    -- ap_sig_bdd_496 assign process. --
    ap_sig_bdd_496_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_496 <= (ap_const_lv1_1 = ap_CS_fsm(44 downto 44));
    end process;


    -- ap_sig_bdd_506 assign process. --
    ap_sig_bdd_506_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_506 <= (ap_const_lv1_1 = ap_CS_fsm(46 downto 46));
    end process;


    -- ap_sig_bdd_516 assign process. --
    ap_sig_bdd_516_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_516 <= (ap_const_lv1_1 = ap_CS_fsm(50 downto 50));
    end process;


    -- ap_sig_bdd_531 assign process. --
    ap_sig_bdd_531_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_531 <= (ap_const_lv1_1 = ap_CS_fsm(45 downto 45));
    end process;


    -- ap_sig_bdd_541 assign process. --
    ap_sig_bdd_541_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_541 <= (ap_const_lv1_1 = ap_CS_fsm(47 downto 47));
    end process;


    -- ap_sig_bdd_552 assign process. --
    ap_sig_bdd_552_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_552 <= (ap_const_lv1_1 = ap_CS_fsm(12 downto 12));
    end process;


    -- ap_sig_bdd_564 assign process. --
    ap_sig_bdd_564_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_564 <= (ap_const_lv1_1 = ap_CS_fsm(49 downto 49));
    end process;


    -- ap_sig_bdd_578 assign process. --
    ap_sig_bdd_578_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_578 <= (ap_const_lv1_1 = ap_CS_fsm(48 downto 48));
    end process;


    -- ap_sig_bdd_589 assign process. --
    ap_sig_bdd_589_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_589 <= (ap_const_lv1_1 = ap_CS_fsm(13 downto 13));
    end process;


    -- ap_sig_bdd_606 assign process. --
    ap_sig_bdd_606_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_606 <= (ap_const_lv1_1 = ap_CS_fsm(14 downto 14));
    end process;


    -- ap_sig_bdd_624 assign process. --
    ap_sig_bdd_624_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_624 <= (ap_const_lv1_1 = ap_CS_fsm(17 downto 17));
    end process;


    -- ap_sig_bdd_633 assign process. --
    ap_sig_bdd_633_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_633 <= (ap_const_lv1_1 = ap_CS_fsm(21 downto 21));
    end process;


    -- ap_sig_bdd_643 assign process. --
    ap_sig_bdd_643_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_643 <= (ap_const_lv1_1 = ap_CS_fsm(25 downto 25));
    end process;


    -- ap_sig_bdd_653 assign process. --
    ap_sig_bdd_653_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_653 <= (ap_const_lv1_1 = ap_CS_fsm(29 downto 29));
    end process;


    -- ap_sig_bdd_663 assign process. --
    ap_sig_bdd_663_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_663 <= (ap_const_lv1_1 = ap_CS_fsm(33 downto 33));
    end process;


    -- ap_sig_bdd_673 assign process. --
    ap_sig_bdd_673_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_673 <= (ap_const_lv1_1 = ap_CS_fsm(37 downto 37));
    end process;


    -- ap_sig_bdd_683 assign process. --
    ap_sig_bdd_683_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_683 <= (ap_const_lv1_1 = ap_CS_fsm(41 downto 41));
    end process;


    -- ap_sig_bdd_704 assign process. --
    ap_sig_bdd_704_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_704 <= (ap_const_lv1_1 = ap_CS_fsm(18 downto 18));
    end process;


    -- ap_sig_bdd_713 assign process. --
    ap_sig_bdd_713_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_713 <= (ap_const_lv1_1 = ap_CS_fsm(22 downto 22));
    end process;


    -- ap_sig_bdd_723 assign process. --
    ap_sig_bdd_723_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_723 <= (ap_const_lv1_1 = ap_CS_fsm(26 downto 26));
    end process;


    -- ap_sig_bdd_733 assign process. --
    ap_sig_bdd_733_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_733 <= (ap_const_lv1_1 = ap_CS_fsm(30 downto 30));
    end process;


    -- ap_sig_bdd_743 assign process. --
    ap_sig_bdd_743_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_743 <= (ap_const_lv1_1 = ap_CS_fsm(34 downto 34));
    end process;


    -- ap_sig_bdd_753 assign process. --
    ap_sig_bdd_753_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_753 <= (ap_const_lv1_1 = ap_CS_fsm(38 downto 38));
    end process;


    -- ap_sig_bdd_763 assign process. --
    ap_sig_bdd_763_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_763 <= (ap_const_lv1_1 = ap_CS_fsm(10 downto 10));
    end process;


    -- ap_sig_bdd_779 assign process. --
    ap_sig_bdd_779_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_779 <= (ap_const_lv1_1 = ap_CS_fsm(19 downto 19));
    end process;


    -- ap_sig_bdd_788 assign process. --
    ap_sig_bdd_788_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_788 <= (ap_const_lv1_1 = ap_CS_fsm(23 downto 23));
    end process;


    -- ap_sig_bdd_798 assign process. --
    ap_sig_bdd_798_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_798 <= (ap_const_lv1_1 = ap_CS_fsm(27 downto 27));
    end process;


    -- ap_sig_bdd_808 assign process. --
    ap_sig_bdd_808_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_808 <= (ap_const_lv1_1 = ap_CS_fsm(31 downto 31));
    end process;


    -- ap_sig_bdd_818 assign process. --
    ap_sig_bdd_818_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_818 <= (ap_const_lv1_1 = ap_CS_fsm(35 downto 35));
    end process;


    -- ap_sig_bdd_828 assign process. --
    ap_sig_bdd_828_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_828 <= (ap_const_lv1_1 = ap_CS_fsm(39 downto 39));
    end process;


    -- ap_sig_bdd_83 assign process. --
    ap_sig_bdd_83_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_83 <= (ap_CS_fsm(0 downto 0) = ap_const_lv1_1);
    end process;


    -- ap_sig_bdd_841 assign process. --
    ap_sig_bdd_841_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_841 <= (ap_const_lv1_1 = ap_CS_fsm(15 downto 15));
    end process;


    -- ap_sig_bdd_854 assign process. --
    ap_sig_bdd_854_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_854 <= (ap_const_lv1_1 = ap_CS_fsm(20 downto 20));
    end process;


    -- ap_sig_bdd_863 assign process. --
    ap_sig_bdd_863_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_863 <= (ap_const_lv1_1 = ap_CS_fsm(24 downto 24));
    end process;


    -- ap_sig_bdd_873 assign process. --
    ap_sig_bdd_873_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_873 <= (ap_const_lv1_1 = ap_CS_fsm(28 downto 28));
    end process;


    -- ap_sig_bdd_883 assign process. --
    ap_sig_bdd_883_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_883 <= (ap_const_lv1_1 = ap_CS_fsm(32 downto 32));
    end process;


    -- ap_sig_bdd_893 assign process. --
    ap_sig_bdd_893_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_893 <= (ap_const_lv1_1 = ap_CS_fsm(36 downto 36));
    end process;


    -- ap_sig_bdd_903 assign process. --
    ap_sig_bdd_903_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_903 <= (ap_const_lv1_1 = ap_CS_fsm(40 downto 40));
    end process;


    -- ap_sig_bdd_916 assign process. --
    ap_sig_bdd_916_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_916 <= (ap_const_lv1_1 = ap_CS_fsm(16 downto 16));
    end process;


    -- ap_sig_cseq_ST_pp0_stg0_fsm_8 assign process. --
    ap_sig_cseq_ST_pp0_stg0_fsm_8_assign_proc : process(ap_sig_bdd_431)
    begin
        if (ap_sig_bdd_431) then 
            ap_sig_cseq_ST_pp0_stg0_fsm_8 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp0_stg0_fsm_8 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_pp1_stg0_fsm_10 assign process. --
    ap_sig_cseq_ST_pp1_stg0_fsm_10_assign_proc : process(ap_sig_bdd_763)
    begin
        if (ap_sig_bdd_763) then 
            ap_sig_cseq_ST_pp1_stg0_fsm_10 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp1_stg0_fsm_10 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_pp1_stg10_fsm_20 assign process. --
    ap_sig_cseq_ST_pp1_stg10_fsm_20_assign_proc : process(ap_sig_bdd_854)
    begin
        if (ap_sig_bdd_854) then 
            ap_sig_cseq_ST_pp1_stg10_fsm_20 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp1_stg10_fsm_20 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_pp1_stg11_fsm_21 assign process. --
    ap_sig_cseq_ST_pp1_stg11_fsm_21_assign_proc : process(ap_sig_bdd_633)
    begin
        if (ap_sig_bdd_633) then 
            ap_sig_cseq_ST_pp1_stg11_fsm_21 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp1_stg11_fsm_21 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_pp1_stg12_fsm_22 assign process. --
    ap_sig_cseq_ST_pp1_stg12_fsm_22_assign_proc : process(ap_sig_bdd_713)
    begin
        if (ap_sig_bdd_713) then 
            ap_sig_cseq_ST_pp1_stg12_fsm_22 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp1_stg12_fsm_22 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_pp1_stg13_fsm_23 assign process. --
    ap_sig_cseq_ST_pp1_stg13_fsm_23_assign_proc : process(ap_sig_bdd_788)
    begin
        if (ap_sig_bdd_788) then 
            ap_sig_cseq_ST_pp1_stg13_fsm_23 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp1_stg13_fsm_23 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_pp1_stg14_fsm_24 assign process. --
    ap_sig_cseq_ST_pp1_stg14_fsm_24_assign_proc : process(ap_sig_bdd_863)
    begin
        if (ap_sig_bdd_863) then 
            ap_sig_cseq_ST_pp1_stg14_fsm_24 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp1_stg14_fsm_24 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_pp1_stg15_fsm_25 assign process. --
    ap_sig_cseq_ST_pp1_stg15_fsm_25_assign_proc : process(ap_sig_bdd_643)
    begin
        if (ap_sig_bdd_643) then 
            ap_sig_cseq_ST_pp1_stg15_fsm_25 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp1_stg15_fsm_25 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_pp1_stg16_fsm_26 assign process. --
    ap_sig_cseq_ST_pp1_stg16_fsm_26_assign_proc : process(ap_sig_bdd_723)
    begin
        if (ap_sig_bdd_723) then 
            ap_sig_cseq_ST_pp1_stg16_fsm_26 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp1_stg16_fsm_26 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_pp1_stg17_fsm_27 assign process. --
    ap_sig_cseq_ST_pp1_stg17_fsm_27_assign_proc : process(ap_sig_bdd_798)
    begin
        if (ap_sig_bdd_798) then 
            ap_sig_cseq_ST_pp1_stg17_fsm_27 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp1_stg17_fsm_27 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_pp1_stg18_fsm_28 assign process. --
    ap_sig_cseq_ST_pp1_stg18_fsm_28_assign_proc : process(ap_sig_bdd_873)
    begin
        if (ap_sig_bdd_873) then 
            ap_sig_cseq_ST_pp1_stg18_fsm_28 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp1_stg18_fsm_28 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_pp1_stg19_fsm_29 assign process. --
    ap_sig_cseq_ST_pp1_stg19_fsm_29_assign_proc : process(ap_sig_bdd_653)
    begin
        if (ap_sig_bdd_653) then 
            ap_sig_cseq_ST_pp1_stg19_fsm_29 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp1_stg19_fsm_29 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_pp1_stg1_fsm_11 assign process. --
    ap_sig_cseq_ST_pp1_stg1_fsm_11_assign_proc : process(ap_sig_bdd_461)
    begin
        if (ap_sig_bdd_461) then 
            ap_sig_cseq_ST_pp1_stg1_fsm_11 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp1_stg1_fsm_11 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_pp1_stg20_fsm_30 assign process. --
    ap_sig_cseq_ST_pp1_stg20_fsm_30_assign_proc : process(ap_sig_bdd_733)
    begin
        if (ap_sig_bdd_733) then 
            ap_sig_cseq_ST_pp1_stg20_fsm_30 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp1_stg20_fsm_30 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_pp1_stg21_fsm_31 assign process. --
    ap_sig_cseq_ST_pp1_stg21_fsm_31_assign_proc : process(ap_sig_bdd_808)
    begin
        if (ap_sig_bdd_808) then 
            ap_sig_cseq_ST_pp1_stg21_fsm_31 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp1_stg21_fsm_31 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_pp1_stg22_fsm_32 assign process. --
    ap_sig_cseq_ST_pp1_stg22_fsm_32_assign_proc : process(ap_sig_bdd_883)
    begin
        if (ap_sig_bdd_883) then 
            ap_sig_cseq_ST_pp1_stg22_fsm_32 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp1_stg22_fsm_32 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_pp1_stg23_fsm_33 assign process. --
    ap_sig_cseq_ST_pp1_stg23_fsm_33_assign_proc : process(ap_sig_bdd_663)
    begin
        if (ap_sig_bdd_663) then 
            ap_sig_cseq_ST_pp1_stg23_fsm_33 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp1_stg23_fsm_33 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_pp1_stg24_fsm_34 assign process. --
    ap_sig_cseq_ST_pp1_stg24_fsm_34_assign_proc : process(ap_sig_bdd_743)
    begin
        if (ap_sig_bdd_743) then 
            ap_sig_cseq_ST_pp1_stg24_fsm_34 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp1_stg24_fsm_34 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_pp1_stg25_fsm_35 assign process. --
    ap_sig_cseq_ST_pp1_stg25_fsm_35_assign_proc : process(ap_sig_bdd_818)
    begin
        if (ap_sig_bdd_818) then 
            ap_sig_cseq_ST_pp1_stg25_fsm_35 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp1_stg25_fsm_35 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_pp1_stg26_fsm_36 assign process. --
    ap_sig_cseq_ST_pp1_stg26_fsm_36_assign_proc : process(ap_sig_bdd_893)
    begin
        if (ap_sig_bdd_893) then 
            ap_sig_cseq_ST_pp1_stg26_fsm_36 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp1_stg26_fsm_36 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_pp1_stg27_fsm_37 assign process. --
    ap_sig_cseq_ST_pp1_stg27_fsm_37_assign_proc : process(ap_sig_bdd_673)
    begin
        if (ap_sig_bdd_673) then 
            ap_sig_cseq_ST_pp1_stg27_fsm_37 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp1_stg27_fsm_37 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_pp1_stg28_fsm_38 assign process. --
    ap_sig_cseq_ST_pp1_stg28_fsm_38_assign_proc : process(ap_sig_bdd_753)
    begin
        if (ap_sig_bdd_753) then 
            ap_sig_cseq_ST_pp1_stg28_fsm_38 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp1_stg28_fsm_38 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_pp1_stg29_fsm_39 assign process. --
    ap_sig_cseq_ST_pp1_stg29_fsm_39_assign_proc : process(ap_sig_bdd_828)
    begin
        if (ap_sig_bdd_828) then 
            ap_sig_cseq_ST_pp1_stg29_fsm_39 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp1_stg29_fsm_39 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_pp1_stg2_fsm_12 assign process. --
    ap_sig_cseq_ST_pp1_stg2_fsm_12_assign_proc : process(ap_sig_bdd_552)
    begin
        if (ap_sig_bdd_552) then 
            ap_sig_cseq_ST_pp1_stg2_fsm_12 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp1_stg2_fsm_12 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_pp1_stg30_fsm_40 assign process. --
    ap_sig_cseq_ST_pp1_stg30_fsm_40_assign_proc : process(ap_sig_bdd_903)
    begin
        if (ap_sig_bdd_903) then 
            ap_sig_cseq_ST_pp1_stg30_fsm_40 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp1_stg30_fsm_40 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_pp1_stg31_fsm_41 assign process. --
    ap_sig_cseq_ST_pp1_stg31_fsm_41_assign_proc : process(ap_sig_bdd_683)
    begin
        if (ap_sig_bdd_683) then 
            ap_sig_cseq_ST_pp1_stg31_fsm_41 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp1_stg31_fsm_41 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_pp1_stg3_fsm_13 assign process. --
    ap_sig_cseq_ST_pp1_stg3_fsm_13_assign_proc : process(ap_sig_bdd_589)
    begin
        if (ap_sig_bdd_589) then 
            ap_sig_cseq_ST_pp1_stg3_fsm_13 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp1_stg3_fsm_13 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_pp1_stg4_fsm_14 assign process. --
    ap_sig_cseq_ST_pp1_stg4_fsm_14_assign_proc : process(ap_sig_bdd_606)
    begin
        if (ap_sig_bdd_606) then 
            ap_sig_cseq_ST_pp1_stg4_fsm_14 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp1_stg4_fsm_14 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_pp1_stg5_fsm_15 assign process. --
    ap_sig_cseq_ST_pp1_stg5_fsm_15_assign_proc : process(ap_sig_bdd_841)
    begin
        if (ap_sig_bdd_841) then 
            ap_sig_cseq_ST_pp1_stg5_fsm_15 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp1_stg5_fsm_15 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_pp1_stg6_fsm_16 assign process. --
    ap_sig_cseq_ST_pp1_stg6_fsm_16_assign_proc : process(ap_sig_bdd_916)
    begin
        if (ap_sig_bdd_916) then 
            ap_sig_cseq_ST_pp1_stg6_fsm_16 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp1_stg6_fsm_16 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_pp1_stg7_fsm_17 assign process. --
    ap_sig_cseq_ST_pp1_stg7_fsm_17_assign_proc : process(ap_sig_bdd_624)
    begin
        if (ap_sig_bdd_624) then 
            ap_sig_cseq_ST_pp1_stg7_fsm_17 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp1_stg7_fsm_17 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_pp1_stg8_fsm_18 assign process. --
    ap_sig_cseq_ST_pp1_stg8_fsm_18_assign_proc : process(ap_sig_bdd_704)
    begin
        if (ap_sig_bdd_704) then 
            ap_sig_cseq_ST_pp1_stg8_fsm_18 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp1_stg8_fsm_18 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_pp1_stg9_fsm_19 assign process. --
    ap_sig_cseq_ST_pp1_stg9_fsm_19_assign_proc : process(ap_sig_bdd_779)
    begin
        if (ap_sig_bdd_779) then 
            ap_sig_cseq_ST_pp1_stg9_fsm_19 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp1_stg9_fsm_19 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_pp2_stg0_fsm_42 assign process. --
    ap_sig_cseq_ST_pp2_stg0_fsm_42_assign_proc : process(ap_sig_bdd_1922)
    begin
        if (ap_sig_bdd_1922) then 
            ap_sig_cseq_ST_pp2_stg0_fsm_42 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp2_stg0_fsm_42 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_pp2_stg10_fsm_52 assign process. --
    ap_sig_cseq_ST_pp2_stg10_fsm_52_assign_proc : process(ap_sig_bdd_2382)
    begin
        if (ap_sig_bdd_2382) then 
            ap_sig_cseq_ST_pp2_stg10_fsm_52 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp2_stg10_fsm_52 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_pp2_stg11_fsm_53 assign process. --
    ap_sig_cseq_ST_pp2_stg11_fsm_53_assign_proc : process(ap_sig_bdd_2397)
    begin
        if (ap_sig_bdd_2397) then 
            ap_sig_cseq_ST_pp2_stg11_fsm_53 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp2_stg11_fsm_53 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_pp2_stg12_fsm_54 assign process. --
    ap_sig_cseq_ST_pp2_stg12_fsm_54_assign_proc : process(ap_sig_bdd_2412)
    begin
        if (ap_sig_bdd_2412) then 
            ap_sig_cseq_ST_pp2_stg12_fsm_54 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp2_stg12_fsm_54 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_pp2_stg13_fsm_55 assign process. --
    ap_sig_cseq_ST_pp2_stg13_fsm_55_assign_proc : process(ap_sig_bdd_2427)
    begin
        if (ap_sig_bdd_2427) then 
            ap_sig_cseq_ST_pp2_stg13_fsm_55 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp2_stg13_fsm_55 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_pp2_stg14_fsm_56 assign process. --
    ap_sig_cseq_ST_pp2_stg14_fsm_56_assign_proc : process(ap_sig_bdd_2442)
    begin
        if (ap_sig_bdd_2442) then 
            ap_sig_cseq_ST_pp2_stg14_fsm_56 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp2_stg14_fsm_56 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_pp2_stg15_fsm_57 assign process. --
    ap_sig_cseq_ST_pp2_stg15_fsm_57_assign_proc : process(ap_sig_bdd_2036)
    begin
        if (ap_sig_bdd_2036) then 
            ap_sig_cseq_ST_pp2_stg15_fsm_57 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp2_stg15_fsm_57 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_pp2_stg1_fsm_43 assign process. --
    ap_sig_cseq_ST_pp2_stg1_fsm_43_assign_proc : process(ap_sig_bdd_481)
    begin
        if (ap_sig_bdd_481) then 
            ap_sig_cseq_ST_pp2_stg1_fsm_43 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp2_stg1_fsm_43 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_pp2_stg2_fsm_44 assign process. --
    ap_sig_cseq_ST_pp2_stg2_fsm_44_assign_proc : process(ap_sig_bdd_496)
    begin
        if (ap_sig_bdd_496) then 
            ap_sig_cseq_ST_pp2_stg2_fsm_44 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp2_stg2_fsm_44 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_pp2_stg3_fsm_45 assign process. --
    ap_sig_cseq_ST_pp2_stg3_fsm_45_assign_proc : process(ap_sig_bdd_531)
    begin
        if (ap_sig_bdd_531) then 
            ap_sig_cseq_ST_pp2_stg3_fsm_45 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp2_stg3_fsm_45 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_pp2_stg4_fsm_46 assign process. --
    ap_sig_cseq_ST_pp2_stg4_fsm_46_assign_proc : process(ap_sig_bdd_506)
    begin
        if (ap_sig_bdd_506) then 
            ap_sig_cseq_ST_pp2_stg4_fsm_46 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp2_stg4_fsm_46 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_pp2_stg5_fsm_47 assign process. --
    ap_sig_cseq_ST_pp2_stg5_fsm_47_assign_proc : process(ap_sig_bdd_541)
    begin
        if (ap_sig_bdd_541) then 
            ap_sig_cseq_ST_pp2_stg5_fsm_47 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp2_stg5_fsm_47 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_pp2_stg6_fsm_48 assign process. --
    ap_sig_cseq_ST_pp2_stg6_fsm_48_assign_proc : process(ap_sig_bdd_578)
    begin
        if (ap_sig_bdd_578) then 
            ap_sig_cseq_ST_pp2_stg6_fsm_48 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp2_stg6_fsm_48 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_pp2_stg7_fsm_49 assign process. --
    ap_sig_cseq_ST_pp2_stg7_fsm_49_assign_proc : process(ap_sig_bdd_564)
    begin
        if (ap_sig_bdd_564) then 
            ap_sig_cseq_ST_pp2_stg7_fsm_49 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp2_stg7_fsm_49 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_pp2_stg8_fsm_50 assign process. --
    ap_sig_cseq_ST_pp2_stg8_fsm_50_assign_proc : process(ap_sig_bdd_516)
    begin
        if (ap_sig_bdd_516) then 
            ap_sig_cseq_ST_pp2_stg8_fsm_50 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp2_stg8_fsm_50 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_pp2_stg9_fsm_51 assign process. --
    ap_sig_cseq_ST_pp2_stg9_fsm_51_assign_proc : process(ap_sig_bdd_2367)
    begin
        if (ap_sig_bdd_2367) then 
            ap_sig_cseq_ST_pp2_stg9_fsm_51 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp2_stg9_fsm_51 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_pp3_stg0_fsm_59 assign process. --
    ap_sig_cseq_ST_pp3_stg0_fsm_59_assign_proc : process(ap_sig_bdd_2063)
    begin
        if (ap_sig_bdd_2063) then 
            ap_sig_cseq_ST_pp3_stg0_fsm_59 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp3_stg0_fsm_59 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st102_fsm_58 assign process. --
    ap_sig_cseq_ST_st102_fsm_58_assign_proc : process(ap_sig_bdd_2050)
    begin
        if (ap_sig_bdd_2050) then 
            ap_sig_cseq_ST_st102_fsm_58 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st102_fsm_58 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st110_fsm_64 assign process. --
    ap_sig_cseq_ST_st110_fsm_64_assign_proc : process(ap_sig_bdd_2497)
    begin
        if (ap_sig_bdd_2497) then 
            ap_sig_cseq_ST_st110_fsm_64 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st110_fsm_64 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st12_fsm_9 assign process. --
    ap_sig_cseq_ST_st12_fsm_9_assign_proc : process(ap_sig_bdd_2111)
    begin
        if (ap_sig_bdd_2111) then 
            ap_sig_cseq_ST_st12_fsm_9 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st12_fsm_9 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st1_fsm_0 assign process. --
    ap_sig_cseq_ST_st1_fsm_0_assign_proc : process(ap_sig_bdd_83)
    begin
        if (ap_sig_bdd_83) then 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st2_fsm_1 assign process. --
    ap_sig_cseq_ST_st2_fsm_1_assign_proc : process(ap_sig_bdd_1090)
    begin
        if (ap_sig_bdd_1090) then 
            ap_sig_cseq_ST_st2_fsm_1 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st2_fsm_1 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st8_fsm_7 assign process. --
    ap_sig_cseq_ST_st8_fsm_7_assign_proc : process(ap_sig_bdd_2099)
    begin
        if (ap_sig_bdd_2099) then 
            ap_sig_cseq_ST_st8_fsm_7 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st8_fsm_7 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_ioackin_gmem_ARREADY assign process. --
    ap_sig_ioackin_gmem_ARREADY_assign_proc : process(gmem_ARREADY, ap_reg_ioackin_gmem_ARREADY)
    begin
        if ((ap_const_logic_0 = ap_reg_ioackin_gmem_ARREADY)) then 
            ap_sig_ioackin_gmem_ARREADY <= gmem_ARREADY;
        else 
            ap_sig_ioackin_gmem_ARREADY <= ap_const_logic_1;
        end if; 
    end process;


    -- ap_sig_ioackin_gmem_offset_AWREADY assign process. --
    ap_sig_ioackin_gmem_offset_AWREADY_assign_proc : process(gmem_offset_AWREADY, ap_reg_ioackin_gmem_offset_AWREADY)
    begin
        if ((ap_const_logic_0 = ap_reg_ioackin_gmem_offset_AWREADY)) then 
            ap_sig_ioackin_gmem_offset_AWREADY <= gmem_offset_AWREADY;
        else 
            ap_sig_ioackin_gmem_offset_AWREADY <= ap_const_logic_1;
        end if; 
    end process;


    -- ap_sig_ioackin_gmem_offset_WREADY assign process. --
    ap_sig_ioackin_gmem_offset_WREADY_assign_proc : process(gmem_offset_WREADY, ap_reg_ioackin_gmem_offset_WREADY)
    begin
        if ((ap_const_logic_0 = ap_reg_ioackin_gmem_offset_WREADY)) then 
            ap_sig_ioackin_gmem_offset_WREADY <= gmem_offset_WREADY;
        else 
            ap_sig_ioackin_gmem_offset_WREADY <= ap_const_logic_1;
        end if; 
    end process;

    backsub_AXILiteS_s_axi_U_ap_dummy_ce <= ap_const_logic_1;
    backsub_CRTL_BUS_s_axi_U_ap_dummy_ce <= ap_const_logic_1;
    backsub_gmem_m_axi_U_ap_dummy_ce <= ap_const_logic_1;
    backsub_gmem_offset_m_axi_U_ap_dummy_ce <= ap_const_logic_1;
    exitcond1_fu_5827_p2 <= "1" when (indvar8_reg_1518 = ap_const_lv17_12C00) else "0";
    exitcond_fu_1953_p2 <= "1" when (indvar_phi_fu_1486_p4 = ap_const_lv16_9600) else "0";
    frame_Addr_A <= std_logic_vector(shift_left(unsigned(frame_Addr_A_orig),to_integer(unsigned('0' & ap_const_lv32_1(31-1 downto 0)))));

    -- frame_Addr_A_orig assign process. --
    frame_Addr_A_orig_assign_proc : process(ap_sig_cseq_ST_pp1_stg1_fsm_11, ap_reg_ppiten_pp1_it0, ap_sig_cseq_ST_pp2_stg1_fsm_43, ap_reg_ppiten_pp2_it0, ap_sig_cseq_ST_pp2_stg2_fsm_44, ap_sig_cseq_ST_pp2_stg4_fsm_46, ap_sig_cseq_ST_pp2_stg8_fsm_50, ap_sig_cseq_ST_pp2_stg3_fsm_45, ap_sig_cseq_ST_pp2_stg5_fsm_47, ap_sig_cseq_ST_pp1_stg2_fsm_12, ap_sig_cseq_ST_pp2_stg7_fsm_49, ap_sig_cseq_ST_pp2_stg6_fsm_48, ap_sig_cseq_ST_pp1_stg3_fsm_13, ap_sig_cseq_ST_pp1_stg4_fsm_14, ap_sig_cseq_ST_pp1_stg7_fsm_17, ap_sig_cseq_ST_pp1_stg11_fsm_21, ap_sig_cseq_ST_pp1_stg15_fsm_25, ap_sig_cseq_ST_pp1_stg19_fsm_29, ap_sig_cseq_ST_pp1_stg23_fsm_33, ap_sig_cseq_ST_pp1_stg27_fsm_37, ap_sig_cseq_ST_pp1_stg31_fsm_41, ap_sig_cseq_ST_pp1_stg8_fsm_18, ap_sig_cseq_ST_pp1_stg12_fsm_22, ap_sig_cseq_ST_pp1_stg16_fsm_26, ap_sig_cseq_ST_pp1_stg20_fsm_30, ap_sig_cseq_ST_pp1_stg24_fsm_34, ap_sig_cseq_ST_pp1_stg28_fsm_38, ap_sig_cseq_ST_pp1_stg0_fsm_10, ap_sig_cseq_ST_pp1_stg9_fsm_19, ap_sig_cseq_ST_pp1_stg13_fsm_23, ap_sig_cseq_ST_pp1_stg17_fsm_27, ap_sig_cseq_ST_pp1_stg21_fsm_31, ap_sig_cseq_ST_pp1_stg25_fsm_35, ap_sig_cseq_ST_pp1_stg29_fsm_39, ap_sig_cseq_ST_pp1_stg5_fsm_15, ap_sig_cseq_ST_pp1_stg10_fsm_20, ap_sig_cseq_ST_pp1_stg14_fsm_24, ap_sig_cseq_ST_pp1_stg18_fsm_28, ap_sig_cseq_ST_pp1_stg22_fsm_32, ap_sig_cseq_ST_pp1_stg26_fsm_36, ap_sig_cseq_ST_pp1_stg30_fsm_40, ap_sig_cseq_ST_pp1_stg6_fsm_16, tmp_12_fu_1991_p1, frame_addr_32_reg_5892, tmp_27_1_fu_2044_p1, frame_addr_34_reg_5958, tmp_27_2_fu_2126_p1, frame_addr_36_reg_6042, tmp_27_3_fu_2207_p1, frame_addr_38_reg_6126, tmp_27_4_fu_2293_p1, frame_addr_40_reg_6217, tmp_27_5_fu_2379_p1, frame_addr_42_reg_6308, tmp_27_6_fu_2465_p1, frame_addr_44_reg_6413, tmp_27_7_fu_2550_p1, frame_addr_46_reg_6518, tmp_27_8_fu_2636_p1, frame_addr_48_reg_6623, tmp_27_9_fu_2680_p1, frame_addr_50_reg_6708, tmp_27_s_fu_2716_p1, frame_addr_52_reg_6765, tmp_27_10_fu_2751_p1, frame_addr_54_reg_6822, tmp_27_11_fu_2787_p1, frame_addr_56_reg_6879, tmp_27_12_fu_2822_p1, frame_addr_58_reg_6936, tmp_27_13_fu_2857_p1, frame_addr_60_reg_6993, tmp_27_14_fu_2904_p1, frame_addr_62_reg_7060, ap_sig_cseq_ST_pp2_stg0_fsm_42, ap_reg_ppiten_pp2_it1, ap_sig_cseq_ST_pp2_stg15_fsm_57, tmp_9_fu_4927_p1, tmp_19_1_fu_5009_p1, tmp_19_2_fu_5092_p1, tmp_19_3_fu_5175_p1, tmp_19_4_fu_5258_p1, tmp_19_5_fu_5341_p1, tmp_19_6_fu_5424_p1, tmp_19_7_fu_5507_p1, tmp_19_8_fu_5548_p1, ap_sig_cseq_ST_pp2_stg9_fsm_51, tmp_19_9_fu_5581_p1, ap_sig_cseq_ST_pp2_stg10_fsm_52, tmp_19_s_fu_5614_p1, ap_sig_cseq_ST_pp2_stg11_fsm_53, tmp_19_10_fu_5647_p1, ap_sig_cseq_ST_pp2_stg12_fsm_54, tmp_19_11_fu_5680_p1, ap_sig_cseq_ST_pp2_stg13_fsm_55, tmp_19_12_fu_5713_p1, ap_sig_cseq_ST_pp2_stg14_fsm_56, tmp_19_13_fu_5746_p1, tmp_19_14_fu_5791_p1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg0_fsm_42) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it1))) then 
            frame_Addr_A_orig <= tmp_19_14_fu_5791_p1(32 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg15_fsm_57))) then 
            frame_Addr_A_orig <= tmp_19_13_fu_5746_p1(32 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg14_fsm_56))) then 
            frame_Addr_A_orig <= tmp_19_12_fu_5713_p1(32 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg13_fsm_55))) then 
            frame_Addr_A_orig <= tmp_19_11_fu_5680_p1(32 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg12_fsm_54))) then 
            frame_Addr_A_orig <= tmp_19_10_fu_5647_p1(32 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg11_fsm_53))) then 
            frame_Addr_A_orig <= tmp_19_s_fu_5614_p1(32 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg10_fsm_52))) then 
            frame_Addr_A_orig <= tmp_19_9_fu_5581_p1(32 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg9_fsm_51))) then 
            frame_Addr_A_orig <= tmp_19_8_fu_5548_p1(32 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg8_fsm_50))) then 
            frame_Addr_A_orig <= tmp_19_7_fu_5507_p1(32 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg7_fsm_49))) then 
            frame_Addr_A_orig <= tmp_19_6_fu_5424_p1(32 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg6_fsm_48))) then 
            frame_Addr_A_orig <= tmp_19_5_fu_5341_p1(32 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg5_fsm_47))) then 
            frame_Addr_A_orig <= tmp_19_4_fu_5258_p1(32 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg4_fsm_46))) then 
            frame_Addr_A_orig <= tmp_19_3_fu_5175_p1(32 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg3_fsm_45))) then 
            frame_Addr_A_orig <= tmp_19_2_fu_5092_p1(32 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg2_fsm_44))) then 
            frame_Addr_A_orig <= tmp_19_1_fu_5009_p1(32 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg1_fsm_43) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it0))) then 
            frame_Addr_A_orig <= tmp_9_fu_4927_p1(32 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg31_fsm_41))) then 
            frame_Addr_A_orig <= std_logic_vector(resize(unsigned(frame_addr_62_reg_7060),32));
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg30_fsm_40))) then 
            frame_Addr_A_orig <= std_logic_vector(resize(unsigned(frame_addr_60_reg_6993),32));
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg29_fsm_39))) then 
            frame_Addr_A_orig <= std_logic_vector(resize(unsigned(frame_addr_58_reg_6936),32));
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg28_fsm_38))) then 
            frame_Addr_A_orig <= std_logic_vector(resize(unsigned(frame_addr_56_reg_6879),32));
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg27_fsm_37))) then 
            frame_Addr_A_orig <= std_logic_vector(resize(unsigned(frame_addr_54_reg_6822),32));
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg26_fsm_36))) then 
            frame_Addr_A_orig <= std_logic_vector(resize(unsigned(frame_addr_52_reg_6765),32));
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg25_fsm_35))) then 
            frame_Addr_A_orig <= std_logic_vector(resize(unsigned(frame_addr_50_reg_6708),32));
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg24_fsm_34))) then 
            frame_Addr_A_orig <= std_logic_vector(resize(unsigned(frame_addr_48_reg_6623),32));
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg23_fsm_33))) then 
            frame_Addr_A_orig <= std_logic_vector(resize(unsigned(frame_addr_46_reg_6518),32));
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg22_fsm_32))) then 
            frame_Addr_A_orig <= std_logic_vector(resize(unsigned(frame_addr_44_reg_6413),32));
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg21_fsm_31))) then 
            frame_Addr_A_orig <= std_logic_vector(resize(unsigned(frame_addr_42_reg_6308),32));
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg20_fsm_30))) then 
            frame_Addr_A_orig <= std_logic_vector(resize(unsigned(frame_addr_40_reg_6217),32));
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg19_fsm_29))) then 
            frame_Addr_A_orig <= std_logic_vector(resize(unsigned(frame_addr_38_reg_6126),32));
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg18_fsm_28))) then 
            frame_Addr_A_orig <= std_logic_vector(resize(unsigned(frame_addr_36_reg_6042),32));
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg17_fsm_27))) then 
            frame_Addr_A_orig <= std_logic_vector(resize(unsigned(frame_addr_34_reg_5958),32));
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg16_fsm_26))) then 
            frame_Addr_A_orig <= std_logic_vector(resize(unsigned(frame_addr_32_reg_5892),32));
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg15_fsm_25))) then 
            frame_Addr_A_orig <= tmp_27_14_fu_2904_p1(32 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg14_fsm_24))) then 
            frame_Addr_A_orig <= tmp_27_13_fu_2857_p1(32 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg13_fsm_23))) then 
            frame_Addr_A_orig <= tmp_27_12_fu_2822_p1(32 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg12_fsm_22))) then 
            frame_Addr_A_orig <= tmp_27_11_fu_2787_p1(32 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg11_fsm_21))) then 
            frame_Addr_A_orig <= tmp_27_10_fu_2751_p1(32 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg10_fsm_20))) then 
            frame_Addr_A_orig <= tmp_27_s_fu_2716_p1(32 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg9_fsm_19))) then 
            frame_Addr_A_orig <= tmp_27_9_fu_2680_p1(32 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg8_fsm_18))) then 
            frame_Addr_A_orig <= tmp_27_8_fu_2636_p1(32 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg7_fsm_17))) then 
            frame_Addr_A_orig <= tmp_27_7_fu_2550_p1(32 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg6_fsm_16))) then 
            frame_Addr_A_orig <= tmp_27_6_fu_2465_p1(32 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg5_fsm_15))) then 
            frame_Addr_A_orig <= tmp_27_5_fu_2379_p1(32 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg4_fsm_14))) then 
            frame_Addr_A_orig <= tmp_27_4_fu_2293_p1(32 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg3_fsm_13))) then 
            frame_Addr_A_orig <= tmp_27_3_fu_2207_p1(32 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg2_fsm_12))) then 
            frame_Addr_A_orig <= tmp_27_2_fu_2126_p1(32 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg1_fsm_11) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0))) then 
            frame_Addr_A_orig <= tmp_27_1_fu_2044_p1(32 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_10))) then 
            frame_Addr_A_orig <= tmp_12_fu_1991_p1(32 - 1 downto 0);
        else 
            frame_Addr_A_orig <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    frame_Addr_B <= std_logic_vector(shift_left(unsigned(frame_Addr_B_orig),to_integer(unsigned('0' & ap_const_lv32_1(31-1 downto 0)))));

    -- frame_Addr_B_orig assign process. --
    frame_Addr_B_orig_assign_proc : process(ap_sig_cseq_ST_pp1_stg1_fsm_11, ap_reg_ppiten_pp1_it0, ap_sig_cseq_ST_pp2_stg1_fsm_43, ap_reg_ppiten_pp2_it0, ap_sig_cseq_ST_pp2_stg2_fsm_44, ap_sig_cseq_ST_pp2_stg4_fsm_46, ap_sig_cseq_ST_pp2_stg8_fsm_50, ap_sig_cseq_ST_pp2_stg3_fsm_45, ap_sig_cseq_ST_pp2_stg5_fsm_47, ap_sig_cseq_ST_pp1_stg2_fsm_12, ap_sig_cseq_ST_pp2_stg7_fsm_49, ap_sig_cseq_ST_pp2_stg6_fsm_48, ap_sig_cseq_ST_pp1_stg3_fsm_13, ap_sig_cseq_ST_pp1_stg4_fsm_14, ap_sig_cseq_ST_pp1_stg7_fsm_17, ap_sig_cseq_ST_pp1_stg11_fsm_21, ap_sig_cseq_ST_pp1_stg15_fsm_25, ap_sig_cseq_ST_pp1_stg19_fsm_29, ap_sig_cseq_ST_pp1_stg23_fsm_33, ap_sig_cseq_ST_pp1_stg27_fsm_37, ap_sig_cseq_ST_pp1_stg31_fsm_41, ap_sig_cseq_ST_pp1_stg8_fsm_18, ap_sig_cseq_ST_pp1_stg12_fsm_22, ap_sig_cseq_ST_pp1_stg16_fsm_26, ap_sig_cseq_ST_pp1_stg20_fsm_30, ap_sig_cseq_ST_pp1_stg24_fsm_34, ap_sig_cseq_ST_pp1_stg28_fsm_38, ap_sig_cseq_ST_pp1_stg0_fsm_10, ap_sig_cseq_ST_pp1_stg9_fsm_19, ap_sig_cseq_ST_pp1_stg13_fsm_23, ap_sig_cseq_ST_pp1_stg17_fsm_27, ap_sig_cseq_ST_pp1_stg21_fsm_31, ap_sig_cseq_ST_pp1_stg25_fsm_35, ap_sig_cseq_ST_pp1_stg29_fsm_39, ap_sig_cseq_ST_pp1_stg5_fsm_15, ap_sig_cseq_ST_pp1_stg10_fsm_20, ap_sig_cseq_ST_pp1_stg14_fsm_24, ap_sig_cseq_ST_pp1_stg18_fsm_28, ap_sig_cseq_ST_pp1_stg22_fsm_32, ap_sig_cseq_ST_pp1_stg26_fsm_36, ap_sig_cseq_ST_pp1_stg30_fsm_40, ap_sig_cseq_ST_pp1_stg6_fsm_16, tmp_15_fu_2002_p1, frame_addr_33_reg_5902, tmp_30_1_fu_2054_p1, frame_addr_35_reg_5968, tmp_30_2_fu_2136_p1, frame_addr_37_reg_6052, tmp_30_3_fu_2217_p1, frame_addr_39_reg_6136, tmp_30_4_fu_2303_p1, frame_addr_41_reg_6227, tmp_30_5_fu_2389_p1, frame_addr_43_reg_6318, tmp_30_6_fu_2475_p1, frame_addr_45_reg_6423, tmp_30_7_fu_2560_p1, frame_addr_47_reg_6528, tmp_30_8_fu_2646_p1, frame_addr_49_reg_6633, tmp_30_9_fu_2690_p1, frame_addr_51_reg_6718, tmp_30_s_fu_2726_p1, frame_addr_53_reg_6775, tmp_30_10_fu_2761_p1, frame_addr_55_reg_6832, tmp_30_11_fu_2797_p1, frame_addr_57_reg_6889, tmp_30_12_fu_2832_p1, frame_addr_59_reg_6946, tmp_30_13_fu_2867_p1, frame_addr_61_reg_7003, tmp_30_14_fu_2908_p1, frame_addr_63_reg_7070, ap_sig_cseq_ST_pp2_stg0_fsm_42, ap_reg_ppiten_pp2_it1, ap_sig_cseq_ST_pp2_stg15_fsm_57, tmp_4_fu_4939_p1, tmp_22_1_fu_5020_p1, tmp_22_2_fu_5103_p1, tmp_22_3_fu_5186_p1, tmp_22_4_fu_5269_p1, tmp_22_5_fu_5352_p1, tmp_22_6_fu_5435_p1, tmp_22_7_fu_5518_p1, ap_sig_cseq_ST_pp2_stg9_fsm_51, tmp_22_8_fu_5559_p1, ap_sig_cseq_ST_pp2_stg10_fsm_52, tmp_22_9_fu_5592_p1, ap_sig_cseq_ST_pp2_stg11_fsm_53, tmp_22_s_fu_5625_p1, ap_sig_cseq_ST_pp2_stg12_fsm_54, tmp_22_10_fu_5658_p1, ap_sig_cseq_ST_pp2_stg13_fsm_55, tmp_22_11_fu_5691_p1, ap_sig_cseq_ST_pp2_stg14_fsm_56, tmp_22_12_fu_5724_p1, tmp_22_13_fu_5757_p1, tmp_22_14_fu_5796_p1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg0_fsm_42) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it1))) then 
            frame_Addr_B_orig <= tmp_22_14_fu_5796_p1(32 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg15_fsm_57))) then 
            frame_Addr_B_orig <= tmp_22_13_fu_5757_p1(32 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg14_fsm_56))) then 
            frame_Addr_B_orig <= tmp_22_12_fu_5724_p1(32 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg13_fsm_55))) then 
            frame_Addr_B_orig <= tmp_22_11_fu_5691_p1(32 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg12_fsm_54))) then 
            frame_Addr_B_orig <= tmp_22_10_fu_5658_p1(32 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg11_fsm_53))) then 
            frame_Addr_B_orig <= tmp_22_s_fu_5625_p1(32 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg10_fsm_52))) then 
            frame_Addr_B_orig <= tmp_22_9_fu_5592_p1(32 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg9_fsm_51))) then 
            frame_Addr_B_orig <= tmp_22_8_fu_5559_p1(32 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg8_fsm_50))) then 
            frame_Addr_B_orig <= tmp_22_7_fu_5518_p1(32 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg7_fsm_49))) then 
            frame_Addr_B_orig <= tmp_22_6_fu_5435_p1(32 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg6_fsm_48))) then 
            frame_Addr_B_orig <= tmp_22_5_fu_5352_p1(32 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg5_fsm_47))) then 
            frame_Addr_B_orig <= tmp_22_4_fu_5269_p1(32 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg4_fsm_46))) then 
            frame_Addr_B_orig <= tmp_22_3_fu_5186_p1(32 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg3_fsm_45))) then 
            frame_Addr_B_orig <= tmp_22_2_fu_5103_p1(32 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg2_fsm_44))) then 
            frame_Addr_B_orig <= tmp_22_1_fu_5020_p1(32 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg1_fsm_43) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it0))) then 
            frame_Addr_B_orig <= tmp_4_fu_4939_p1(32 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg31_fsm_41))) then 
            frame_Addr_B_orig <= std_logic_vector(resize(unsigned(frame_addr_63_reg_7070),32));
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg30_fsm_40))) then 
            frame_Addr_B_orig <= std_logic_vector(resize(unsigned(frame_addr_61_reg_7003),32));
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg29_fsm_39))) then 
            frame_Addr_B_orig <= std_logic_vector(resize(unsigned(frame_addr_59_reg_6946),32));
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg28_fsm_38))) then 
            frame_Addr_B_orig <= std_logic_vector(resize(unsigned(frame_addr_57_reg_6889),32));
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg27_fsm_37))) then 
            frame_Addr_B_orig <= std_logic_vector(resize(unsigned(frame_addr_55_reg_6832),32));
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg26_fsm_36))) then 
            frame_Addr_B_orig <= std_logic_vector(resize(unsigned(frame_addr_53_reg_6775),32));
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg25_fsm_35))) then 
            frame_Addr_B_orig <= std_logic_vector(resize(unsigned(frame_addr_51_reg_6718),32));
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg24_fsm_34))) then 
            frame_Addr_B_orig <= std_logic_vector(resize(unsigned(frame_addr_49_reg_6633),32));
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg23_fsm_33))) then 
            frame_Addr_B_orig <= std_logic_vector(resize(unsigned(frame_addr_47_reg_6528),32));
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg22_fsm_32))) then 
            frame_Addr_B_orig <= std_logic_vector(resize(unsigned(frame_addr_45_reg_6423),32));
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg21_fsm_31))) then 
            frame_Addr_B_orig <= std_logic_vector(resize(unsigned(frame_addr_43_reg_6318),32));
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg20_fsm_30))) then 
            frame_Addr_B_orig <= std_logic_vector(resize(unsigned(frame_addr_41_reg_6227),32));
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg19_fsm_29))) then 
            frame_Addr_B_orig <= std_logic_vector(resize(unsigned(frame_addr_39_reg_6136),32));
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg18_fsm_28))) then 
            frame_Addr_B_orig <= std_logic_vector(resize(unsigned(frame_addr_37_reg_6052),32));
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg17_fsm_27))) then 
            frame_Addr_B_orig <= std_logic_vector(resize(unsigned(frame_addr_35_reg_5968),32));
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg16_fsm_26))) then 
            frame_Addr_B_orig <= std_logic_vector(resize(unsigned(frame_addr_33_reg_5902),32));
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg15_fsm_25))) then 
            frame_Addr_B_orig <= tmp_30_14_fu_2908_p1(32 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg14_fsm_24))) then 
            frame_Addr_B_orig <= tmp_30_13_fu_2867_p1(32 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg13_fsm_23))) then 
            frame_Addr_B_orig <= tmp_30_12_fu_2832_p1(32 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg12_fsm_22))) then 
            frame_Addr_B_orig <= tmp_30_11_fu_2797_p1(32 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg11_fsm_21))) then 
            frame_Addr_B_orig <= tmp_30_10_fu_2761_p1(32 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg10_fsm_20))) then 
            frame_Addr_B_orig <= tmp_30_s_fu_2726_p1(32 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg9_fsm_19))) then 
            frame_Addr_B_orig <= tmp_30_9_fu_2690_p1(32 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg8_fsm_18))) then 
            frame_Addr_B_orig <= tmp_30_8_fu_2646_p1(32 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg7_fsm_17))) then 
            frame_Addr_B_orig <= tmp_30_7_fu_2560_p1(32 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg6_fsm_16))) then 
            frame_Addr_B_orig <= tmp_30_6_fu_2475_p1(32 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg5_fsm_15))) then 
            frame_Addr_B_orig <= tmp_30_5_fu_2389_p1(32 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg4_fsm_14))) then 
            frame_Addr_B_orig <= tmp_30_4_fu_2303_p1(32 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg3_fsm_13))) then 
            frame_Addr_B_orig <= tmp_30_3_fu_2217_p1(32 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg2_fsm_12))) then 
            frame_Addr_B_orig <= tmp_30_2_fu_2136_p1(32 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg1_fsm_11) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0))) then 
            frame_Addr_B_orig <= tmp_30_1_fu_2054_p1(32 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_10))) then 
            frame_Addr_B_orig <= tmp_15_fu_2002_p1(32 - 1 downto 0);
        else 
            frame_Addr_B_orig <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    frame_Clk_A <= ap_clk;
    frame_Clk_B <= ap_clk;

    -- frame_Din_A assign process. --
    frame_Din_A_assign_proc : process(ap_reg_ppiten_pp1_it0, ap_sig_cseq_ST_pp2_stg1_fsm_43, ap_reg_ppiten_pp2_it0, ap_sig_cseq_ST_pp2_stg2_fsm_44, ap_sig_cseq_ST_pp2_stg4_fsm_46, ap_sig_cseq_ST_pp2_stg8_fsm_50, ap_sig_cseq_ST_pp2_stg3_fsm_45, ap_sig_cseq_ST_pp2_stg5_fsm_47, ap_sig_cseq_ST_pp2_stg7_fsm_49, ap_sig_cseq_ST_pp2_stg6_fsm_48, ap_sig_cseq_ST_pp1_stg19_fsm_29, ap_sig_cseq_ST_pp1_stg23_fsm_33, ap_sig_cseq_ST_pp1_stg27_fsm_37, ap_sig_cseq_ST_pp1_stg31_fsm_41, ap_sig_cseq_ST_pp1_stg16_fsm_26, ap_sig_cseq_ST_pp1_stg20_fsm_30, ap_sig_cseq_ST_pp1_stg24_fsm_34, ap_sig_cseq_ST_pp1_stg28_fsm_38, ap_sig_cseq_ST_pp1_stg17_fsm_27, ap_sig_cseq_ST_pp1_stg21_fsm_31, ap_sig_cseq_ST_pp1_stg25_fsm_35, ap_sig_cseq_ST_pp1_stg29_fsm_39, ap_sig_cseq_ST_pp1_stg18_fsm_28, ap_sig_cseq_ST_pp1_stg22_fsm_32, ap_sig_cseq_ST_pp1_stg26_fsm_36, ap_sig_cseq_ST_pp1_stg30_fsm_40, ap_sig_cseq_ST_pp2_stg0_fsm_42, ap_reg_ppiten_pp2_it1, ap_sig_cseq_ST_pp2_stg15_fsm_57, ap_sig_cseq_ST_pp2_stg9_fsm_51, ap_sig_cseq_ST_pp2_stg10_fsm_52, ap_sig_cseq_ST_pp2_stg11_fsm_53, ap_sig_cseq_ST_pp2_stg12_fsm_54, ap_sig_cseq_ST_pp2_stg13_fsm_55, ap_sig_cseq_ST_pp2_stg14_fsm_56, tmp_17_fu_2912_p3, tmp_35_1_fu_2947_p3, tmp_35_2_fu_2974_p3, tmp_35_3_fu_3001_p3, tmp_35_4_fu_3028_p3, tmp_35_5_fu_3055_p3, tmp_35_6_fu_3082_p3, tmp_35_7_fu_3117_p3, tmp_35_8_fu_3148_p3, tmp_35_9_fu_3174_p3, tmp_35_s_fu_3200_p3, tmp_35_10_fu_3226_p3, tmp_35_11_fu_3252_p3, tmp_35_12_fu_3278_p3, tmp_35_13_fu_3304_p3, tmp_35_14_fu_3330_p3, tmp_6_fu_4945_p3, tmp_23_1_fu_5026_p3, tmp_23_2_fu_5109_p3, tmp_23_3_fu_5192_p3, tmp_23_4_fu_5275_p3, tmp_23_5_fu_5358_p3, tmp_23_6_fu_5441_p3, tmp_23_7_fu_5524_p3, tmp_23_8_fu_5565_p3, tmp_23_9_fu_5598_p3, tmp_23_s_fu_5631_p3, tmp_23_10_fu_5664_p3, tmp_23_11_fu_5697_p3, tmp_23_12_fu_5730_p3, tmp_23_13_fu_5763_p3, tmp_23_14_fu_5801_p3)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg0_fsm_42) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it1))) then 
            frame_Din_A <= tmp_23_14_fu_5801_p3;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg15_fsm_57))) then 
            frame_Din_A <= tmp_23_13_fu_5763_p3;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg14_fsm_56))) then 
            frame_Din_A <= tmp_23_12_fu_5730_p3;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg13_fsm_55))) then 
            frame_Din_A <= tmp_23_11_fu_5697_p3;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg12_fsm_54))) then 
            frame_Din_A <= tmp_23_10_fu_5664_p3;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg11_fsm_53))) then 
            frame_Din_A <= tmp_23_s_fu_5631_p3;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg10_fsm_52))) then 
            frame_Din_A <= tmp_23_9_fu_5598_p3;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg9_fsm_51))) then 
            frame_Din_A <= tmp_23_8_fu_5565_p3;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg8_fsm_50))) then 
            frame_Din_A <= tmp_23_7_fu_5524_p3;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg7_fsm_49))) then 
            frame_Din_A <= tmp_23_6_fu_5441_p3;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg6_fsm_48))) then 
            frame_Din_A <= tmp_23_5_fu_5358_p3;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg5_fsm_47))) then 
            frame_Din_A <= tmp_23_4_fu_5275_p3;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg4_fsm_46))) then 
            frame_Din_A <= tmp_23_3_fu_5192_p3;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg3_fsm_45))) then 
            frame_Din_A <= tmp_23_2_fu_5109_p3;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg2_fsm_44))) then 
            frame_Din_A <= tmp_23_1_fu_5026_p3;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg1_fsm_43) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it0))) then 
            frame_Din_A <= tmp_6_fu_4945_p3;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg31_fsm_41))) then 
            frame_Din_A <= tmp_35_14_fu_3330_p3;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg30_fsm_40))) then 
            frame_Din_A <= tmp_35_13_fu_3304_p3;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg29_fsm_39))) then 
            frame_Din_A <= tmp_35_12_fu_3278_p3;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg28_fsm_38))) then 
            frame_Din_A <= tmp_35_11_fu_3252_p3;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg27_fsm_37))) then 
            frame_Din_A <= tmp_35_10_fu_3226_p3;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg26_fsm_36))) then 
            frame_Din_A <= tmp_35_s_fu_3200_p3;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg25_fsm_35))) then 
            frame_Din_A <= tmp_35_9_fu_3174_p3;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg24_fsm_34))) then 
            frame_Din_A <= tmp_35_8_fu_3148_p3;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg23_fsm_33))) then 
            frame_Din_A <= tmp_35_7_fu_3117_p3;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg22_fsm_32))) then 
            frame_Din_A <= tmp_35_6_fu_3082_p3;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg21_fsm_31))) then 
            frame_Din_A <= tmp_35_5_fu_3055_p3;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg20_fsm_30))) then 
            frame_Din_A <= tmp_35_4_fu_3028_p3;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg19_fsm_29))) then 
            frame_Din_A <= tmp_35_3_fu_3001_p3;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg18_fsm_28))) then 
            frame_Din_A <= tmp_35_2_fu_2974_p3;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg17_fsm_27))) then 
            frame_Din_A <= tmp_35_1_fu_2947_p3;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg16_fsm_26))) then 
            frame_Din_A <= tmp_17_fu_2912_p3;
        else 
            frame_Din_A <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    -- frame_Din_B assign process. --
    frame_Din_B_assign_proc : process(ap_reg_ppiten_pp1_it0, ap_sig_cseq_ST_pp2_stg1_fsm_43, ap_reg_ppiten_pp2_it0, ap_sig_cseq_ST_pp2_stg2_fsm_44, ap_sig_cseq_ST_pp2_stg4_fsm_46, ap_sig_cseq_ST_pp2_stg8_fsm_50, ap_sig_cseq_ST_pp2_stg3_fsm_45, ap_sig_cseq_ST_pp2_stg5_fsm_47, ap_sig_cseq_ST_pp2_stg7_fsm_49, ap_sig_cseq_ST_pp2_stg6_fsm_48, ap_sig_cseq_ST_pp1_stg19_fsm_29, ap_sig_cseq_ST_pp1_stg23_fsm_33, ap_sig_cseq_ST_pp1_stg27_fsm_37, ap_sig_cseq_ST_pp1_stg31_fsm_41, ap_sig_cseq_ST_pp1_stg16_fsm_26, ap_sig_cseq_ST_pp1_stg20_fsm_30, ap_sig_cseq_ST_pp1_stg24_fsm_34, ap_sig_cseq_ST_pp1_stg28_fsm_38, ap_sig_cseq_ST_pp1_stg17_fsm_27, ap_sig_cseq_ST_pp1_stg21_fsm_31, ap_sig_cseq_ST_pp1_stg25_fsm_35, ap_sig_cseq_ST_pp1_stg29_fsm_39, ap_sig_cseq_ST_pp1_stg18_fsm_28, ap_sig_cseq_ST_pp1_stg22_fsm_32, ap_sig_cseq_ST_pp1_stg26_fsm_36, ap_sig_cseq_ST_pp1_stg30_fsm_40, ap_sig_cseq_ST_pp2_stg0_fsm_42, ap_reg_ppiten_pp2_it1, ap_sig_cseq_ST_pp2_stg15_fsm_57, ap_sig_cseq_ST_pp2_stg9_fsm_51, ap_sig_cseq_ST_pp2_stg10_fsm_52, ap_sig_cseq_ST_pp2_stg11_fsm_53, ap_sig_cseq_ST_pp2_stg12_fsm_54, ap_sig_cseq_ST_pp2_stg13_fsm_55, ap_sig_cseq_ST_pp2_stg14_fsm_56, tmp_18_fu_2919_p3, tmp_39_1_fu_2954_p3, tmp_39_2_fu_2981_p3, tmp_39_3_fu_3008_p3, tmp_39_4_fu_3035_p3, tmp_39_5_fu_3062_p3, tmp_39_6_fu_3089_p3, tmp_39_7_fu_3124_p3, tmp_39_8_fu_3155_p3, tmp_39_9_fu_3181_p3, tmp_39_s_fu_3207_p3, tmp_39_10_fu_3233_p3, tmp_39_11_fu_3259_p3, tmp_39_12_fu_3285_p3, tmp_39_13_fu_3311_p3, tmp_39_14_fu_3337_p3, tmp_8_fu_4954_p3, tmp_24_1_fu_5033_p3, tmp_24_2_fu_5116_p3, tmp_24_3_fu_5199_p3, tmp_24_4_fu_5282_p3, tmp_24_5_fu_5365_p3, tmp_24_6_fu_5448_p3, tmp_24_7_fu_5531_p3, tmp_24_8_fu_5572_p3, tmp_24_9_fu_5605_p3, tmp_24_s_fu_5638_p3, tmp_24_10_fu_5671_p3, tmp_24_11_fu_5704_p3, tmp_24_12_fu_5737_p3, tmp_24_13_fu_5770_p3, tmp_24_14_fu_5808_p3)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg0_fsm_42) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it1))) then 
            frame_Din_B <= tmp_24_14_fu_5808_p3;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg15_fsm_57))) then 
            frame_Din_B <= tmp_24_13_fu_5770_p3;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg14_fsm_56))) then 
            frame_Din_B <= tmp_24_12_fu_5737_p3;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg13_fsm_55))) then 
            frame_Din_B <= tmp_24_11_fu_5704_p3;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg12_fsm_54))) then 
            frame_Din_B <= tmp_24_10_fu_5671_p3;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg11_fsm_53))) then 
            frame_Din_B <= tmp_24_s_fu_5638_p3;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg10_fsm_52))) then 
            frame_Din_B <= tmp_24_9_fu_5605_p3;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg9_fsm_51))) then 
            frame_Din_B <= tmp_24_8_fu_5572_p3;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg8_fsm_50))) then 
            frame_Din_B <= tmp_24_7_fu_5531_p3;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg7_fsm_49))) then 
            frame_Din_B <= tmp_24_6_fu_5448_p3;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg6_fsm_48))) then 
            frame_Din_B <= tmp_24_5_fu_5365_p3;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg5_fsm_47))) then 
            frame_Din_B <= tmp_24_4_fu_5282_p3;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg4_fsm_46))) then 
            frame_Din_B <= tmp_24_3_fu_5199_p3;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg3_fsm_45))) then 
            frame_Din_B <= tmp_24_2_fu_5116_p3;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg2_fsm_44))) then 
            frame_Din_B <= tmp_24_1_fu_5033_p3;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg1_fsm_43) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it0))) then 
            frame_Din_B <= tmp_8_fu_4954_p3;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg31_fsm_41))) then 
            frame_Din_B <= tmp_39_14_fu_3337_p3;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg30_fsm_40))) then 
            frame_Din_B <= tmp_39_13_fu_3311_p3;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg29_fsm_39))) then 
            frame_Din_B <= tmp_39_12_fu_3285_p3;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg28_fsm_38))) then 
            frame_Din_B <= tmp_39_11_fu_3259_p3;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg27_fsm_37))) then 
            frame_Din_B <= tmp_39_10_fu_3233_p3;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg26_fsm_36))) then 
            frame_Din_B <= tmp_39_s_fu_3207_p3;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg25_fsm_35))) then 
            frame_Din_B <= tmp_39_9_fu_3181_p3;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg24_fsm_34))) then 
            frame_Din_B <= tmp_39_8_fu_3155_p3;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg23_fsm_33))) then 
            frame_Din_B <= tmp_39_7_fu_3124_p3;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg22_fsm_32))) then 
            frame_Din_B <= tmp_39_6_fu_3089_p3;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg21_fsm_31))) then 
            frame_Din_B <= tmp_39_5_fu_3062_p3;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg20_fsm_30))) then 
            frame_Din_B <= tmp_39_4_fu_3035_p3;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg19_fsm_29))) then 
            frame_Din_B <= tmp_39_3_fu_3008_p3;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg18_fsm_28))) then 
            frame_Din_B <= tmp_39_2_fu_2981_p3;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg17_fsm_27))) then 
            frame_Din_B <= tmp_39_1_fu_2954_p3;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg16_fsm_26))) then 
            frame_Din_B <= tmp_18_fu_2919_p3;
        else 
            frame_Din_B <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    -- frame_EN_A assign process. --
    frame_EN_A_assign_proc : process(ap_sig_cseq_ST_pp1_stg1_fsm_11, ap_reg_ppiten_pp1_it0, ap_sig_cseq_ST_pp2_stg1_fsm_43, ap_reg_ppiten_pp2_it0, ap_sig_cseq_ST_pp2_stg2_fsm_44, ap_sig_cseq_ST_pp2_stg4_fsm_46, ap_sig_cseq_ST_pp2_stg8_fsm_50, ap_sig_cseq_ST_pp2_stg3_fsm_45, ap_sig_cseq_ST_pp2_stg5_fsm_47, ap_sig_cseq_ST_pp1_stg2_fsm_12, ap_sig_cseq_ST_pp2_stg7_fsm_49, ap_sig_cseq_ST_pp2_stg6_fsm_48, ap_sig_cseq_ST_pp1_stg3_fsm_13, ap_sig_cseq_ST_pp1_stg4_fsm_14, ap_sig_cseq_ST_pp1_stg7_fsm_17, ap_sig_cseq_ST_pp1_stg11_fsm_21, ap_sig_cseq_ST_pp1_stg15_fsm_25, ap_sig_cseq_ST_pp1_stg19_fsm_29, ap_sig_cseq_ST_pp1_stg23_fsm_33, ap_sig_cseq_ST_pp1_stg27_fsm_37, ap_sig_cseq_ST_pp1_stg31_fsm_41, ap_sig_cseq_ST_pp1_stg8_fsm_18, ap_sig_cseq_ST_pp1_stg12_fsm_22, ap_sig_cseq_ST_pp1_stg16_fsm_26, ap_sig_cseq_ST_pp1_stg20_fsm_30, ap_sig_cseq_ST_pp1_stg24_fsm_34, ap_sig_cseq_ST_pp1_stg28_fsm_38, ap_sig_cseq_ST_pp1_stg0_fsm_10, ap_sig_cseq_ST_pp1_stg9_fsm_19, ap_sig_cseq_ST_pp1_stg13_fsm_23, ap_sig_cseq_ST_pp1_stg17_fsm_27, ap_sig_cseq_ST_pp1_stg21_fsm_31, ap_sig_cseq_ST_pp1_stg25_fsm_35, ap_sig_cseq_ST_pp1_stg29_fsm_39, ap_sig_cseq_ST_pp1_stg5_fsm_15, ap_sig_cseq_ST_pp1_stg10_fsm_20, ap_sig_cseq_ST_pp1_stg14_fsm_24, ap_sig_cseq_ST_pp1_stg18_fsm_28, ap_sig_cseq_ST_pp1_stg22_fsm_32, ap_sig_cseq_ST_pp1_stg26_fsm_36, ap_sig_cseq_ST_pp1_stg30_fsm_40, ap_sig_cseq_ST_pp1_stg6_fsm_16, ap_sig_cseq_ST_pp2_stg0_fsm_42, ap_reg_ppiten_pp2_it1, ap_sig_cseq_ST_pp2_stg15_fsm_57, ap_sig_cseq_ST_pp2_stg9_fsm_51, ap_sig_cseq_ST_pp2_stg10_fsm_52, ap_sig_cseq_ST_pp2_stg11_fsm_53, ap_sig_cseq_ST_pp2_stg12_fsm_54, ap_sig_cseq_ST_pp2_stg13_fsm_55, ap_sig_cseq_ST_pp2_stg14_fsm_56)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg1_fsm_11) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0)) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg1_fsm_43) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it0)) or ((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg2_fsm_44)) or ((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg4_fsm_46)) or ((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg8_fsm_50)) or ((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg3_fsm_45)) or ((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg5_fsm_47)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg2_fsm_12)) or ((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg7_fsm_49)) or ((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg6_fsm_48)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg3_fsm_13)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg4_fsm_14)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg7_fsm_17)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg11_fsm_21)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg15_fsm_25)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg19_fsm_29)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg23_fsm_33)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg27_fsm_37)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg31_fsm_41)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg8_fsm_18)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg12_fsm_22)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg16_fsm_26)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg20_fsm_30)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg24_fsm_34)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg28_fsm_38)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg9_fsm_19)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg13_fsm_23)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg17_fsm_27)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg21_fsm_31)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg25_fsm_35)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg29_fsm_39)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg10_fsm_20)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg14_fsm_24)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg18_fsm_28)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg22_fsm_32)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg26_fsm_36)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg30_fsm_40)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg5_fsm_15)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg6_fsm_16)) or ((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg15_fsm_57)) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg0_fsm_42) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it1)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_10)) or ((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg9_fsm_51)) or ((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg10_fsm_52)) or ((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg11_fsm_53)) or ((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg12_fsm_54)) or ((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg13_fsm_55)) or ((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg14_fsm_56)))) then 
            frame_EN_A <= ap_const_logic_1;
        else 
            frame_EN_A <= ap_const_logic_0;
        end if; 
    end process;


    -- frame_EN_B assign process. --
    frame_EN_B_assign_proc : process(ap_sig_cseq_ST_pp1_stg1_fsm_11, ap_reg_ppiten_pp1_it0, ap_sig_cseq_ST_pp2_stg1_fsm_43, ap_reg_ppiten_pp2_it0, ap_sig_cseq_ST_pp2_stg2_fsm_44, ap_sig_cseq_ST_pp2_stg4_fsm_46, ap_sig_cseq_ST_pp2_stg8_fsm_50, ap_sig_cseq_ST_pp2_stg3_fsm_45, ap_sig_cseq_ST_pp2_stg5_fsm_47, ap_sig_cseq_ST_pp1_stg2_fsm_12, ap_sig_cseq_ST_pp2_stg7_fsm_49, ap_sig_cseq_ST_pp2_stg6_fsm_48, ap_sig_cseq_ST_pp1_stg3_fsm_13, ap_sig_cseq_ST_pp1_stg4_fsm_14, ap_sig_cseq_ST_pp1_stg7_fsm_17, ap_sig_cseq_ST_pp1_stg11_fsm_21, ap_sig_cseq_ST_pp1_stg15_fsm_25, ap_sig_cseq_ST_pp1_stg19_fsm_29, ap_sig_cseq_ST_pp1_stg23_fsm_33, ap_sig_cseq_ST_pp1_stg27_fsm_37, ap_sig_cseq_ST_pp1_stg31_fsm_41, ap_sig_cseq_ST_pp1_stg8_fsm_18, ap_sig_cseq_ST_pp1_stg12_fsm_22, ap_sig_cseq_ST_pp1_stg16_fsm_26, ap_sig_cseq_ST_pp1_stg20_fsm_30, ap_sig_cseq_ST_pp1_stg24_fsm_34, ap_sig_cseq_ST_pp1_stg28_fsm_38, ap_sig_cseq_ST_pp1_stg0_fsm_10, ap_sig_cseq_ST_pp1_stg9_fsm_19, ap_sig_cseq_ST_pp1_stg13_fsm_23, ap_sig_cseq_ST_pp1_stg17_fsm_27, ap_sig_cseq_ST_pp1_stg21_fsm_31, ap_sig_cseq_ST_pp1_stg25_fsm_35, ap_sig_cseq_ST_pp1_stg29_fsm_39, ap_sig_cseq_ST_pp1_stg5_fsm_15, ap_sig_cseq_ST_pp1_stg10_fsm_20, ap_sig_cseq_ST_pp1_stg14_fsm_24, ap_sig_cseq_ST_pp1_stg18_fsm_28, ap_sig_cseq_ST_pp1_stg22_fsm_32, ap_sig_cseq_ST_pp1_stg26_fsm_36, ap_sig_cseq_ST_pp1_stg30_fsm_40, ap_sig_cseq_ST_pp1_stg6_fsm_16, ap_sig_cseq_ST_pp2_stg0_fsm_42, ap_reg_ppiten_pp2_it1, ap_sig_cseq_ST_pp2_stg15_fsm_57, ap_sig_cseq_ST_pp2_stg9_fsm_51, ap_sig_cseq_ST_pp2_stg10_fsm_52, ap_sig_cseq_ST_pp2_stg11_fsm_53, ap_sig_cseq_ST_pp2_stg12_fsm_54, ap_sig_cseq_ST_pp2_stg13_fsm_55, ap_sig_cseq_ST_pp2_stg14_fsm_56)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg1_fsm_11) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0)) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg1_fsm_43) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it0)) or ((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg2_fsm_44)) or ((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg4_fsm_46)) or ((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg8_fsm_50)) or ((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg3_fsm_45)) or ((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg5_fsm_47)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg2_fsm_12)) or ((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg7_fsm_49)) or ((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg6_fsm_48)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg3_fsm_13)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg4_fsm_14)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg7_fsm_17)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg11_fsm_21)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg15_fsm_25)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg19_fsm_29)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg23_fsm_33)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg27_fsm_37)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg31_fsm_41)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg8_fsm_18)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg12_fsm_22)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg16_fsm_26)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg20_fsm_30)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg24_fsm_34)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg28_fsm_38)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg9_fsm_19)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg13_fsm_23)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg17_fsm_27)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg21_fsm_31)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg25_fsm_35)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg29_fsm_39)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg10_fsm_20)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg14_fsm_24)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg18_fsm_28)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg22_fsm_32)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg26_fsm_36)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg30_fsm_40)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg5_fsm_15)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg6_fsm_16)) or ((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg15_fsm_57)) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg0_fsm_42) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it1)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_10)) or ((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg9_fsm_51)) or ((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg10_fsm_52)) or ((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg11_fsm_53)) or ((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg12_fsm_54)) or ((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg13_fsm_55)) or ((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg14_fsm_56)))) then 
            frame_EN_B <= ap_const_logic_1;
        else 
            frame_EN_B <= ap_const_logic_0;
        end if; 
    end process;

    frame_Rst_A <= ap_rst_n_inv;
    frame_Rst_B <= ap_rst_n_inv;

    -- frame_WEN_A assign process. --
    frame_WEN_A_assign_proc : process(ap_reg_ppiten_pp1_it0, tmp_5_reg_5878, ap_sig_cseq_ST_pp2_stg1_fsm_43, ap_reg_ppiten_pp2_it0, tmp_3_reg_7687, ap_sig_cseq_ST_pp2_stg2_fsm_44, ap_sig_cseq_ST_pp2_stg4_fsm_46, ap_sig_cseq_ST_pp2_stg8_fsm_50, ap_sig_cseq_ST_pp2_stg3_fsm_45, ap_sig_cseq_ST_pp2_stg5_fsm_47, ap_sig_cseq_ST_pp2_stg7_fsm_49, ap_sig_cseq_ST_pp2_stg6_fsm_48, ap_sig_cseq_ST_pp1_stg19_fsm_29, ap_sig_cseq_ST_pp1_stg23_fsm_33, ap_sig_cseq_ST_pp1_stg27_fsm_37, ap_sig_cseq_ST_pp1_stg31_fsm_41, ap_sig_cseq_ST_pp1_stg16_fsm_26, ap_sig_cseq_ST_pp1_stg20_fsm_30, ap_sig_cseq_ST_pp1_stg24_fsm_34, ap_sig_cseq_ST_pp1_stg28_fsm_38, ap_sig_cseq_ST_pp1_stg17_fsm_27, ap_sig_cseq_ST_pp1_stg21_fsm_31, ap_sig_cseq_ST_pp1_stg25_fsm_35, ap_sig_cseq_ST_pp1_stg29_fsm_39, ap_sig_cseq_ST_pp1_stg18_fsm_28, ap_sig_cseq_ST_pp1_stg22_fsm_32, ap_sig_cseq_ST_pp1_stg26_fsm_36, ap_sig_cseq_ST_pp1_stg30_fsm_40, ap_sig_cseq_ST_pp2_stg0_fsm_42, ap_reg_ppiten_pp2_it1, ap_sig_cseq_ST_pp2_stg15_fsm_57, ap_sig_cseq_ST_pp2_stg9_fsm_51, ap_sig_cseq_ST_pp2_stg10_fsm_52, ap_sig_cseq_ST_pp2_stg11_fsm_53, ap_sig_cseq_ST_pp2_stg12_fsm_54, ap_sig_cseq_ST_pp2_stg13_fsm_55, ap_sig_cseq_ST_pp2_stg14_fsm_56)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg1_fsm_43) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and not((ap_const_lv1_0 = tmp_3_reg_7687))) or ((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and not((ap_const_lv1_0 = tmp_3_reg_7687)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg2_fsm_44)) or ((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and not((ap_const_lv1_0 = tmp_3_reg_7687)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg4_fsm_46)) or ((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and not((ap_const_lv1_0 = tmp_3_reg_7687)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg8_fsm_50)) or ((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and not((ap_const_lv1_0 = tmp_3_reg_7687)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg3_fsm_45)) or ((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and not((ap_const_lv1_0 = tmp_3_reg_7687)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg5_fsm_47)) or ((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and not((ap_const_lv1_0 = tmp_3_reg_7687)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg7_fsm_49)) or ((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and not((ap_const_lv1_0 = tmp_3_reg_7687)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg6_fsm_48)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not((ap_const_lv1_0 = tmp_5_reg_5878)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg19_fsm_29)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not((ap_const_lv1_0 = tmp_5_reg_5878)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg23_fsm_33)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not((ap_const_lv1_0 = tmp_5_reg_5878)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg27_fsm_37)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not((ap_const_lv1_0 = tmp_5_reg_5878)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg31_fsm_41)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not((ap_const_lv1_0 = tmp_5_reg_5878)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg16_fsm_26)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not((ap_const_lv1_0 = tmp_5_reg_5878)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg20_fsm_30)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not((ap_const_lv1_0 = tmp_5_reg_5878)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg24_fsm_34)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not((ap_const_lv1_0 = tmp_5_reg_5878)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg28_fsm_38)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not((ap_const_lv1_0 = tmp_5_reg_5878)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg17_fsm_27)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not((ap_const_lv1_0 = tmp_5_reg_5878)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg21_fsm_31)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not((ap_const_lv1_0 = tmp_5_reg_5878)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg25_fsm_35)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not((ap_const_lv1_0 = tmp_5_reg_5878)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg29_fsm_39)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not((ap_const_lv1_0 = tmp_5_reg_5878)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg18_fsm_28)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not((ap_const_lv1_0 = tmp_5_reg_5878)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg22_fsm_32)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not((ap_const_lv1_0 = tmp_5_reg_5878)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg26_fsm_36)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not((ap_const_lv1_0 = tmp_5_reg_5878)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg30_fsm_40)) or ((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and not((ap_const_lv1_0 = tmp_3_reg_7687)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg15_fsm_57)) or (not((ap_const_lv1_0 = tmp_3_reg_7687)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg0_fsm_42) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it1)) or ((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and not((ap_const_lv1_0 = tmp_3_reg_7687)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg9_fsm_51)) or ((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and not((ap_const_lv1_0 = tmp_3_reg_7687)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg10_fsm_52)) or ((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and not((ap_const_lv1_0 = tmp_3_reg_7687)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg11_fsm_53)) or ((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and not((ap_const_lv1_0 = tmp_3_reg_7687)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg12_fsm_54)) or ((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and not((ap_const_lv1_0 = tmp_3_reg_7687)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg13_fsm_55)) or ((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and not((ap_const_lv1_0 = tmp_3_reg_7687)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg14_fsm_56)))) then 
            frame_WEN_A <= ap_const_lv2_3;
        else 
            frame_WEN_A <= ap_const_lv2_0;
        end if; 
    end process;


    -- frame_WEN_B assign process. --
    frame_WEN_B_assign_proc : process(ap_reg_ppiten_pp1_it0, tmp_5_reg_5878, ap_sig_cseq_ST_pp2_stg1_fsm_43, ap_reg_ppiten_pp2_it0, tmp_3_reg_7687, ap_sig_cseq_ST_pp2_stg2_fsm_44, ap_sig_cseq_ST_pp2_stg4_fsm_46, ap_sig_cseq_ST_pp2_stg8_fsm_50, ap_sig_cseq_ST_pp2_stg3_fsm_45, ap_sig_cseq_ST_pp2_stg5_fsm_47, ap_sig_cseq_ST_pp2_stg7_fsm_49, ap_sig_cseq_ST_pp2_stg6_fsm_48, ap_sig_cseq_ST_pp1_stg19_fsm_29, ap_sig_cseq_ST_pp1_stg23_fsm_33, ap_sig_cseq_ST_pp1_stg27_fsm_37, ap_sig_cseq_ST_pp1_stg31_fsm_41, ap_sig_cseq_ST_pp1_stg16_fsm_26, ap_sig_cseq_ST_pp1_stg20_fsm_30, ap_sig_cseq_ST_pp1_stg24_fsm_34, ap_sig_cseq_ST_pp1_stg28_fsm_38, ap_sig_cseq_ST_pp1_stg17_fsm_27, ap_sig_cseq_ST_pp1_stg21_fsm_31, ap_sig_cseq_ST_pp1_stg25_fsm_35, ap_sig_cseq_ST_pp1_stg29_fsm_39, ap_sig_cseq_ST_pp1_stg18_fsm_28, ap_sig_cseq_ST_pp1_stg22_fsm_32, ap_sig_cseq_ST_pp1_stg26_fsm_36, ap_sig_cseq_ST_pp1_stg30_fsm_40, ap_sig_cseq_ST_pp2_stg0_fsm_42, ap_reg_ppiten_pp2_it1, ap_sig_cseq_ST_pp2_stg15_fsm_57, ap_sig_cseq_ST_pp2_stg9_fsm_51, ap_sig_cseq_ST_pp2_stg10_fsm_52, ap_sig_cseq_ST_pp2_stg11_fsm_53, ap_sig_cseq_ST_pp2_stg12_fsm_54, ap_sig_cseq_ST_pp2_stg13_fsm_55, ap_sig_cseq_ST_pp2_stg14_fsm_56)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg1_fsm_43) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and not((ap_const_lv1_0 = tmp_3_reg_7687))) or ((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and not((ap_const_lv1_0 = tmp_3_reg_7687)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg2_fsm_44)) or ((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and not((ap_const_lv1_0 = tmp_3_reg_7687)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg4_fsm_46)) or ((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and not((ap_const_lv1_0 = tmp_3_reg_7687)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg8_fsm_50)) or ((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and not((ap_const_lv1_0 = tmp_3_reg_7687)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg3_fsm_45)) or ((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and not((ap_const_lv1_0 = tmp_3_reg_7687)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg5_fsm_47)) or ((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and not((ap_const_lv1_0 = tmp_3_reg_7687)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg7_fsm_49)) or ((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and not((ap_const_lv1_0 = tmp_3_reg_7687)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg6_fsm_48)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not((ap_const_lv1_0 = tmp_5_reg_5878)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg19_fsm_29)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not((ap_const_lv1_0 = tmp_5_reg_5878)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg23_fsm_33)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not((ap_const_lv1_0 = tmp_5_reg_5878)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg27_fsm_37)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not((ap_const_lv1_0 = tmp_5_reg_5878)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg31_fsm_41)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not((ap_const_lv1_0 = tmp_5_reg_5878)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg16_fsm_26)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not((ap_const_lv1_0 = tmp_5_reg_5878)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg20_fsm_30)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not((ap_const_lv1_0 = tmp_5_reg_5878)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg24_fsm_34)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not((ap_const_lv1_0 = tmp_5_reg_5878)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg28_fsm_38)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not((ap_const_lv1_0 = tmp_5_reg_5878)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg17_fsm_27)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not((ap_const_lv1_0 = tmp_5_reg_5878)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg21_fsm_31)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not((ap_const_lv1_0 = tmp_5_reg_5878)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg25_fsm_35)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not((ap_const_lv1_0 = tmp_5_reg_5878)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg29_fsm_39)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not((ap_const_lv1_0 = tmp_5_reg_5878)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg18_fsm_28)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not((ap_const_lv1_0 = tmp_5_reg_5878)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg22_fsm_32)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not((ap_const_lv1_0 = tmp_5_reg_5878)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg26_fsm_36)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not((ap_const_lv1_0 = tmp_5_reg_5878)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg30_fsm_40)) or ((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and not((ap_const_lv1_0 = tmp_3_reg_7687)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg15_fsm_57)) or (not((ap_const_lv1_0 = tmp_3_reg_7687)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg0_fsm_42) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it1)) or ((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and not((ap_const_lv1_0 = tmp_3_reg_7687)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg9_fsm_51)) or ((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and not((ap_const_lv1_0 = tmp_3_reg_7687)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg10_fsm_52)) or ((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and not((ap_const_lv1_0 = tmp_3_reg_7687)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg11_fsm_53)) or ((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and not((ap_const_lv1_0 = tmp_3_reg_7687)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg12_fsm_54)) or ((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and not((ap_const_lv1_0 = tmp_3_reg_7687)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg13_fsm_55)) or ((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and not((ap_const_lv1_0 = tmp_3_reg_7687)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg14_fsm_56)))) then 
            frame_WEN_B <= ap_const_lv2_3;
        else 
            frame_WEN_B <= ap_const_lv2_0;
        end if; 
    end process;

    gmem_ARADDR <= tmp_16_fu_1943_p1(32 - 1 downto 0);
    gmem_ARBURST <= ap_const_lv2_0;
    gmem_ARCACHE <= ap_const_lv4_0;
    gmem_ARID <= ap_const_lv1_0;
    gmem_ARLEN <= ap_const_lv32_9600;
    gmem_ARLOCK <= ap_const_lv2_0;
    gmem_ARPROT <= ap_const_lv3_0;
    gmem_ARQOS <= ap_const_lv4_0;
    gmem_ARREGION <= ap_const_lv4_0;
    gmem_ARSIZE <= ap_const_lv3_0;
    gmem_ARUSER <= ap_const_lv1_0;

    -- gmem_ARVALID assign process. --
    gmem_ARVALID_assign_proc : process(ap_sig_cseq_ST_st2_fsm_1, ap_reg_ioackin_gmem_ARREADY)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (ap_const_logic_0 = ap_reg_ioackin_gmem_ARREADY))) then 
            gmem_ARVALID <= ap_const_logic_1;
        else 
            gmem_ARVALID <= ap_const_logic_0;
        end if; 
    end process;

    gmem_AWADDR <= ap_const_lv32_0;
    gmem_AWBURST <= ap_const_lv2_0;
    gmem_AWCACHE <= ap_const_lv4_0;
    gmem_AWID <= ap_const_lv1_0;
    gmem_AWLEN <= ap_const_lv32_0;
    gmem_AWLOCK <= ap_const_lv2_0;
    gmem_AWPROT <= ap_const_lv3_0;
    gmem_AWQOS <= ap_const_lv4_0;
    gmem_AWREGION <= ap_const_lv4_0;
    gmem_AWSIZE <= ap_const_lv3_0;
    gmem_AWUSER <= ap_const_lv1_0;
    gmem_AWVALID <= ap_const_logic_0;
    gmem_BREADY <= ap_const_logic_0;

    -- gmem_RREADY assign process. --
    gmem_RREADY_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_8, exitcond_reg_5864, ap_sig_bdd_440, ap_reg_ppiten_pp0_it1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_8) and (exitcond_reg_5864 = ap_const_lv1_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not((ap_sig_bdd_440 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))))) then 
            gmem_RREADY <= ap_const_logic_1;
        else 
            gmem_RREADY <= ap_const_logic_0;
        end if; 
    end process;

    gmem_WDATA <= ap_const_lv32_0;
    gmem_WID <= ap_const_lv1_0;
    gmem_WLAST <= ap_const_logic_0;
    gmem_WSTRB <= ap_const_lv4_0;
    gmem_WUSER <= ap_const_lv1_0;
    gmem_WVALID <= ap_const_logic_0;
    gmem_offset_ARADDR <= ap_const_lv32_0;
    gmem_offset_ARBURST <= ap_const_lv2_0;
    gmem_offset_ARCACHE <= ap_const_lv4_0;
    gmem_offset_ARID <= ap_const_lv1_0;
    gmem_offset_ARLEN <= ap_const_lv32_0;
    gmem_offset_ARLOCK <= ap_const_lv2_0;
    gmem_offset_ARPROT <= ap_const_lv3_0;
    gmem_offset_ARQOS <= ap_const_lv4_0;
    gmem_offset_ARREGION <= ap_const_lv4_0;
    gmem_offset_ARSIZE <= ap_const_lv3_0;
    gmem_offset_ARUSER <= ap_const_lv1_0;
    gmem_offset_ARVALID <= ap_const_logic_0;
    gmem_offset_AWADDR <= tmp_58_fu_5817_p1(32 - 1 downto 0);
    gmem_offset_AWBURST <= ap_const_lv2_0;
    gmem_offset_AWCACHE <= ap_const_lv4_0;
    gmem_offset_AWID <= ap_const_lv1_0;
    gmem_offset_AWLEN <= ap_const_lv32_12C00;
    gmem_offset_AWLOCK <= ap_const_lv2_0;
    gmem_offset_AWPROT <= ap_const_lv3_0;
    gmem_offset_AWQOS <= ap_const_lv4_0;
    gmem_offset_AWREGION <= ap_const_lv4_0;
    gmem_offset_AWSIZE <= ap_const_lv3_0;
    gmem_offset_AWUSER <= ap_const_lv1_0;

    -- gmem_offset_AWVALID assign process. --
    gmem_offset_AWVALID_assign_proc : process(ap_sig_cseq_ST_st102_fsm_58, ap_reg_ioackin_gmem_offset_AWREADY)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st102_fsm_58) and (ap_const_logic_0 = ap_reg_ioackin_gmem_offset_AWREADY))) then 
            gmem_offset_AWVALID <= ap_const_logic_1;
        else 
            gmem_offset_AWVALID <= ap_const_logic_0;
        end if; 
    end process;


    -- gmem_offset_BREADY assign process. --
    gmem_offset_BREADY_assign_proc : process(gmem_offset_BVALID, ap_sig_cseq_ST_st110_fsm_64)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st110_fsm_64) and not((gmem_offset_BVALID = ap_const_logic_0)))) then 
            gmem_offset_BREADY <= ap_const_logic_1;
        else 
            gmem_offset_BREADY <= ap_const_logic_0;
        end if; 
    end process;

    gmem_offset_RREADY <= ap_const_logic_0;
    gmem_offset_WDATA <= grey_frame_load_reg_7980;
    gmem_offset_WID <= ap_const_lv1_0;
    gmem_offset_WLAST <= ap_const_logic_0;
    gmem_offset_WSTRB <= ap_const_lv1_1;
    gmem_offset_WUSER <= ap_const_lv1_0;

    -- gmem_offset_WVALID assign process. --
    gmem_offset_WVALID_assign_proc : process(ap_reg_ppstg_exitcond1_reg_7966_pp3_it1, ap_reg_ppiten_pp3_it2, ap_reg_ioackin_gmem_offset_WREADY)
    begin
        if (((ap_const_lv1_0 = ap_reg_ppstg_exitcond1_reg_7966_pp3_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp3_it2) and (ap_const_logic_0 = ap_reg_ioackin_gmem_offset_WREADY))) then 
            gmem_offset_WVALID <= ap_const_logic_1;
        else 
            gmem_offset_WVALID <= ap_const_logic_0;
        end if; 
    end process;


    -- grey_frame_address0 assign process. --
    grey_frame_address0_assign_proc : process(ap_sig_cseq_ST_pp1_stg1_fsm_11, ap_reg_ppiten_pp1_it1, ap_reg_ppiten_pp1_it2, ap_sig_cseq_ST_pp2_stg1_fsm_43, ap_reg_ppiten_pp2_it0, ap_sig_cseq_ST_pp2_stg2_fsm_44, ap_sig_cseq_ST_pp2_stg4_fsm_46, ap_sig_cseq_ST_pp2_stg8_fsm_50, ap_sig_cseq_ST_pp2_stg3_fsm_45, ap_sig_cseq_ST_pp2_stg5_fsm_47, ap_sig_cseq_ST_pp1_stg2_fsm_12, ap_sig_cseq_ST_pp2_stg7_fsm_49, ap_sig_cseq_ST_pp2_stg6_fsm_48, ap_sig_cseq_ST_pp1_stg3_fsm_13, ap_sig_cseq_ST_pp1_stg4_fsm_14, ap_sig_cseq_ST_pp1_stg7_fsm_17, ap_sig_cseq_ST_pp1_stg11_fsm_21, ap_sig_cseq_ST_pp1_stg15_fsm_25, ap_sig_cseq_ST_pp1_stg19_fsm_29, ap_sig_cseq_ST_pp1_stg23_fsm_33, ap_sig_cseq_ST_pp1_stg27_fsm_37, ap_sig_cseq_ST_pp1_stg31_fsm_41, ap_sig_cseq_ST_pp1_stg8_fsm_18, ap_sig_cseq_ST_pp1_stg12_fsm_22, ap_sig_cseq_ST_pp1_stg16_fsm_26, ap_sig_cseq_ST_pp1_stg20_fsm_30, ap_sig_cseq_ST_pp1_stg24_fsm_34, ap_sig_cseq_ST_pp1_stg28_fsm_38, ap_sig_cseq_ST_pp1_stg0_fsm_10, ap_sig_cseq_ST_pp1_stg9_fsm_19, ap_sig_cseq_ST_pp1_stg13_fsm_23, ap_sig_cseq_ST_pp1_stg17_fsm_27, ap_sig_cseq_ST_pp1_stg21_fsm_31, ap_sig_cseq_ST_pp1_stg25_fsm_35, ap_sig_cseq_ST_pp1_stg29_fsm_39, ap_sig_cseq_ST_pp1_stg5_fsm_15, ap_sig_cseq_ST_pp1_stg10_fsm_20, ap_sig_cseq_ST_pp1_stg14_fsm_24, ap_sig_cseq_ST_pp1_stg18_fsm_28, ap_sig_cseq_ST_pp1_stg22_fsm_32, ap_sig_cseq_ST_pp1_stg26_fsm_36, ap_sig_cseq_ST_pp1_stg30_fsm_40, ap_sig_cseq_ST_pp1_stg6_fsm_16, ap_reg_ppstg_tmp_12_reg_5887_pp1_it1, ap_reg_ppstg_tmp_15_reg_5897_pp1_it1, ap_reg_ppstg_tmp_27_1_reg_5953_pp1_it1, ap_reg_ppstg_tmp_30_1_reg_5963_pp1_it1, ap_reg_ppstg_tmp_27_2_reg_6037_pp1_it1, ap_reg_ppstg_tmp_30_2_reg_6047_pp1_it1, ap_reg_ppstg_tmp_27_3_reg_6121_pp1_it1, ap_reg_ppstg_tmp_30_3_reg_6131_pp1_it1, ap_reg_ppstg_tmp_27_4_reg_6212_pp1_it1, ap_reg_ppstg_tmp_30_4_reg_6222_pp1_it1, ap_reg_ppstg_tmp_27_5_reg_6303_pp1_it1, ap_reg_ppstg_tmp_30_5_reg_6313_pp1_it1, ap_reg_ppstg_tmp_27_6_reg_6408_pp1_it1, ap_reg_ppstg_tmp_30_6_reg_6418_pp1_it1, ap_reg_ppstg_tmp_27_7_reg_6513_pp1_it1, ap_reg_ppstg_tmp_30_7_reg_6523_pp1_it1, ap_reg_ppstg_tmp_27_8_reg_6618_pp1_it1, ap_reg_ppstg_tmp_30_8_reg_6628_pp1_it1, ap_reg_ppstg_tmp_27_9_reg_6703_pp1_it1, ap_reg_ppstg_tmp_30_9_reg_6713_pp1_it1, ap_reg_ppstg_tmp_27_s_reg_6760_pp1_it1, ap_reg_ppstg_tmp_30_s_reg_6770_pp1_it1, ap_reg_ppstg_tmp_27_10_reg_6817_pp1_it1, ap_reg_ppstg_tmp_30_10_reg_6827_pp1_it1, ap_reg_ppstg_tmp_27_11_reg_6874_pp1_it1, ap_reg_ppstg_tmp_30_11_reg_6884_pp1_it1, ap_reg_ppstg_tmp_27_12_reg_6931_pp1_it1, ap_reg_ppstg_tmp_30_12_reg_6941_pp1_it1, ap_reg_ppstg_tmp_27_13_reg_6988_pp1_it1, ap_reg_ppstg_tmp_30_13_reg_6998_pp1_it1, ap_reg_ppstg_tmp_27_14_reg_7055_pp1_it1, ap_reg_ppstg_tmp_30_14_reg_7065_pp1_it1, ap_sig_cseq_ST_pp2_stg0_fsm_42, ap_reg_ppiten_pp2_it1, ap_sig_cseq_ST_pp2_stg15_fsm_57, tmp_4_fu_4939_p1, tmp_22_1_fu_5020_p1, tmp_22_2_fu_5103_p1, tmp_22_3_fu_5186_p1, tmp_22_4_fu_5269_p1, tmp_22_5_fu_5352_p1, tmp_22_6_fu_5435_p1, tmp_22_7_fu_5518_p1, ap_sig_cseq_ST_pp2_stg9_fsm_51, tmp_22_8_fu_5559_p1, ap_sig_cseq_ST_pp2_stg10_fsm_52, tmp_22_9_fu_5592_p1, ap_sig_cseq_ST_pp2_stg11_fsm_53, tmp_22_s_fu_5625_p1, ap_sig_cseq_ST_pp2_stg12_fsm_54, tmp_22_10_fu_5658_p1, ap_sig_cseq_ST_pp2_stg13_fsm_55, tmp_22_11_fu_5691_p1, ap_sig_cseq_ST_pp2_stg14_fsm_56, tmp_22_12_fu_5724_p1, tmp_22_13_fu_5757_p1, tmp_19_14_fu_5791_p1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg0_fsm_42) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it1))) then 
            grey_frame_address0 <= tmp_19_14_fu_5791_p1(17 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg15_fsm_57))) then 
            grey_frame_address0 <= tmp_22_13_fu_5757_p1(17 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg14_fsm_56))) then 
            grey_frame_address0 <= tmp_22_12_fu_5724_p1(17 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg13_fsm_55))) then 
            grey_frame_address0 <= tmp_22_11_fu_5691_p1(17 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg12_fsm_54))) then 
            grey_frame_address0 <= tmp_22_10_fu_5658_p1(17 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg11_fsm_53))) then 
            grey_frame_address0 <= tmp_22_s_fu_5625_p1(17 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg10_fsm_52))) then 
            grey_frame_address0 <= tmp_22_9_fu_5592_p1(17 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg9_fsm_51))) then 
            grey_frame_address0 <= tmp_22_8_fu_5559_p1(17 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg8_fsm_50))) then 
            grey_frame_address0 <= tmp_22_7_fu_5518_p1(17 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg7_fsm_49))) then 
            grey_frame_address0 <= tmp_22_6_fu_5435_p1(17 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg6_fsm_48))) then 
            grey_frame_address0 <= tmp_22_5_fu_5352_p1(17 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg5_fsm_47))) then 
            grey_frame_address0 <= tmp_22_4_fu_5269_p1(17 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg4_fsm_46))) then 
            grey_frame_address0 <= tmp_22_3_fu_5186_p1(17 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg3_fsm_45))) then 
            grey_frame_address0 <= tmp_22_2_fu_5103_p1(17 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg2_fsm_44))) then 
            grey_frame_address0 <= tmp_22_1_fu_5020_p1(17 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg1_fsm_43) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it0))) then 
            grey_frame_address0 <= tmp_4_fu_4939_p1(17 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it2) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg7_fsm_17))) then 
            grey_frame_address0 <= ap_reg_ppstg_tmp_30_14_reg_7065_pp1_it1(17 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it2) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg6_fsm_16))) then 
            grey_frame_address0 <= ap_reg_ppstg_tmp_27_14_reg_7055_pp1_it1(17 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it2) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg5_fsm_15))) then 
            grey_frame_address0 <= ap_reg_ppstg_tmp_30_13_reg_6998_pp1_it1(17 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it2) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg4_fsm_14))) then 
            grey_frame_address0 <= ap_reg_ppstg_tmp_27_13_reg_6988_pp1_it1(17 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it2) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg3_fsm_13))) then 
            grey_frame_address0 <= ap_reg_ppstg_tmp_30_12_reg_6941_pp1_it1(17 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it2) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg2_fsm_12))) then 
            grey_frame_address0 <= ap_reg_ppstg_tmp_27_12_reg_6931_pp1_it1(17 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg1_fsm_11) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it2))) then 
            grey_frame_address0 <= ap_reg_ppstg_tmp_30_11_reg_6884_pp1_it1(17 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it2) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_10))) then 
            grey_frame_address0 <= ap_reg_ppstg_tmp_27_11_reg_6874_pp1_it1(17 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg31_fsm_41))) then 
            grey_frame_address0 <= ap_reg_ppstg_tmp_30_10_reg_6827_pp1_it1(17 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg30_fsm_40))) then 
            grey_frame_address0 <= ap_reg_ppstg_tmp_27_10_reg_6817_pp1_it1(17 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg29_fsm_39))) then 
            grey_frame_address0 <= ap_reg_ppstg_tmp_30_s_reg_6770_pp1_it1(17 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg28_fsm_38))) then 
            grey_frame_address0 <= ap_reg_ppstg_tmp_27_s_reg_6760_pp1_it1(17 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg27_fsm_37))) then 
            grey_frame_address0 <= ap_reg_ppstg_tmp_30_9_reg_6713_pp1_it1(17 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg26_fsm_36))) then 
            grey_frame_address0 <= ap_reg_ppstg_tmp_27_9_reg_6703_pp1_it1(17 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg25_fsm_35))) then 
            grey_frame_address0 <= ap_reg_ppstg_tmp_30_8_reg_6628_pp1_it1(17 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg24_fsm_34))) then 
            grey_frame_address0 <= ap_reg_ppstg_tmp_27_8_reg_6618_pp1_it1(17 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg23_fsm_33))) then 
            grey_frame_address0 <= ap_reg_ppstg_tmp_30_7_reg_6523_pp1_it1(17 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg22_fsm_32))) then 
            grey_frame_address0 <= ap_reg_ppstg_tmp_27_7_reg_6513_pp1_it1(17 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg21_fsm_31))) then 
            grey_frame_address0 <= ap_reg_ppstg_tmp_30_6_reg_6418_pp1_it1(17 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg20_fsm_30))) then 
            grey_frame_address0 <= ap_reg_ppstg_tmp_27_6_reg_6408_pp1_it1(17 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg19_fsm_29))) then 
            grey_frame_address0 <= ap_reg_ppstg_tmp_30_5_reg_6313_pp1_it1(17 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg18_fsm_28))) then 
            grey_frame_address0 <= ap_reg_ppstg_tmp_27_5_reg_6303_pp1_it1(17 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg17_fsm_27))) then 
            grey_frame_address0 <= ap_reg_ppstg_tmp_30_4_reg_6222_pp1_it1(17 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg16_fsm_26))) then 
            grey_frame_address0 <= ap_reg_ppstg_tmp_27_4_reg_6212_pp1_it1(17 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg15_fsm_25))) then 
            grey_frame_address0 <= ap_reg_ppstg_tmp_30_3_reg_6131_pp1_it1(17 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg14_fsm_24))) then 
            grey_frame_address0 <= ap_reg_ppstg_tmp_27_3_reg_6121_pp1_it1(17 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg13_fsm_23))) then 
            grey_frame_address0 <= ap_reg_ppstg_tmp_30_2_reg_6047_pp1_it1(17 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg12_fsm_22))) then 
            grey_frame_address0 <= ap_reg_ppstg_tmp_27_2_reg_6037_pp1_it1(17 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg11_fsm_21))) then 
            grey_frame_address0 <= ap_reg_ppstg_tmp_30_1_reg_5963_pp1_it1(17 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg10_fsm_20))) then 
            grey_frame_address0 <= ap_reg_ppstg_tmp_27_1_reg_5953_pp1_it1(17 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg9_fsm_19))) then 
            grey_frame_address0 <= ap_reg_ppstg_tmp_15_reg_5897_pp1_it1(17 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg8_fsm_18))) then 
            grey_frame_address0 <= ap_reg_ppstg_tmp_12_reg_5887_pp1_it1(17 - 1 downto 0);
        else 
            grey_frame_address0 <= "XXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    -- grey_frame_address1 assign process. --
    grey_frame_address1_assign_proc : process(ap_sig_cseq_ST_pp2_stg1_fsm_43, ap_reg_ppiten_pp2_it0, ap_sig_cseq_ST_pp2_stg2_fsm_44, ap_sig_cseq_ST_pp2_stg4_fsm_46, ap_sig_cseq_ST_pp2_stg8_fsm_50, ap_sig_cseq_ST_pp2_stg3_fsm_45, ap_sig_cseq_ST_pp2_stg5_fsm_47, ap_sig_cseq_ST_pp2_stg7_fsm_49, ap_sig_cseq_ST_pp2_stg6_fsm_48, ap_sig_cseq_ST_pp2_stg0_fsm_42, ap_reg_ppiten_pp2_it1, ap_sig_cseq_ST_pp2_stg15_fsm_57, ap_sig_cseq_ST_pp3_stg0_fsm_59, ap_reg_ppiten_pp3_it0, tmp_9_fu_4927_p1, tmp_19_1_fu_5009_p1, tmp_19_2_fu_5092_p1, tmp_19_3_fu_5175_p1, tmp_19_4_fu_5258_p1, tmp_19_5_fu_5341_p1, tmp_19_6_fu_5424_p1, tmp_19_7_fu_5507_p1, tmp_19_8_fu_5548_p1, ap_sig_cseq_ST_pp2_stg9_fsm_51, tmp_19_9_fu_5581_p1, ap_sig_cseq_ST_pp2_stg10_fsm_52, tmp_19_s_fu_5614_p1, ap_sig_cseq_ST_pp2_stg11_fsm_53, tmp_19_10_fu_5647_p1, ap_sig_cseq_ST_pp2_stg12_fsm_54, tmp_19_11_fu_5680_p1, ap_sig_cseq_ST_pp2_stg13_fsm_55, tmp_19_12_fu_5713_p1, ap_sig_cseq_ST_pp2_stg14_fsm_56, tmp_19_13_fu_5746_p1, tmp_22_14_fu_5796_p1, tmp_42_fu_5839_p1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg0_fsm_42) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it1))) then 
            grey_frame_address1 <= tmp_22_14_fu_5796_p1(17 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg15_fsm_57))) then 
            grey_frame_address1 <= tmp_19_13_fu_5746_p1(17 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg14_fsm_56))) then 
            grey_frame_address1 <= tmp_19_12_fu_5713_p1(17 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg13_fsm_55))) then 
            grey_frame_address1 <= tmp_19_11_fu_5680_p1(17 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg12_fsm_54))) then 
            grey_frame_address1 <= tmp_19_10_fu_5647_p1(17 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg11_fsm_53))) then 
            grey_frame_address1 <= tmp_19_s_fu_5614_p1(17 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg10_fsm_52))) then 
            grey_frame_address1 <= tmp_19_9_fu_5581_p1(17 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg9_fsm_51))) then 
            grey_frame_address1 <= tmp_19_8_fu_5548_p1(17 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg8_fsm_50))) then 
            grey_frame_address1 <= tmp_19_7_fu_5507_p1(17 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg7_fsm_49))) then 
            grey_frame_address1 <= tmp_19_6_fu_5424_p1(17 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg6_fsm_48))) then 
            grey_frame_address1 <= tmp_19_5_fu_5341_p1(17 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg5_fsm_47))) then 
            grey_frame_address1 <= tmp_19_4_fu_5258_p1(17 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg4_fsm_46))) then 
            grey_frame_address1 <= tmp_19_3_fu_5175_p1(17 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg3_fsm_45))) then 
            grey_frame_address1 <= tmp_19_2_fu_5092_p1(17 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg2_fsm_44))) then 
            grey_frame_address1 <= tmp_19_1_fu_5009_p1(17 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg1_fsm_43) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it0))) then 
            grey_frame_address1 <= tmp_9_fu_4927_p1(17 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_pp3_stg0_fsm_59) and (ap_const_logic_1 = ap_reg_ppiten_pp3_it0))) then 
            grey_frame_address1 <= tmp_42_fu_5839_p1(17 - 1 downto 0);
        else 
            grey_frame_address1 <= "XXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    -- grey_frame_ce0 assign process. --
    grey_frame_ce0_assign_proc : process(ap_sig_cseq_ST_pp1_stg1_fsm_11, ap_reg_ppiten_pp1_it1, ap_reg_ppiten_pp1_it2, ap_sig_cseq_ST_pp2_stg1_fsm_43, ap_reg_ppiten_pp2_it0, ap_sig_cseq_ST_pp2_stg2_fsm_44, ap_sig_cseq_ST_pp2_stg4_fsm_46, ap_sig_cseq_ST_pp2_stg8_fsm_50, ap_sig_cseq_ST_pp2_stg3_fsm_45, ap_sig_cseq_ST_pp2_stg5_fsm_47, ap_sig_cseq_ST_pp1_stg2_fsm_12, ap_sig_cseq_ST_pp2_stg7_fsm_49, ap_sig_cseq_ST_pp2_stg6_fsm_48, ap_sig_cseq_ST_pp1_stg3_fsm_13, ap_sig_cseq_ST_pp1_stg4_fsm_14, ap_sig_cseq_ST_pp1_stg7_fsm_17, ap_sig_cseq_ST_pp1_stg11_fsm_21, ap_sig_cseq_ST_pp1_stg15_fsm_25, ap_sig_cseq_ST_pp1_stg19_fsm_29, ap_sig_cseq_ST_pp1_stg23_fsm_33, ap_sig_cseq_ST_pp1_stg27_fsm_37, ap_sig_cseq_ST_pp1_stg31_fsm_41, ap_sig_cseq_ST_pp1_stg8_fsm_18, ap_sig_cseq_ST_pp1_stg12_fsm_22, ap_sig_cseq_ST_pp1_stg16_fsm_26, ap_sig_cseq_ST_pp1_stg20_fsm_30, ap_sig_cseq_ST_pp1_stg24_fsm_34, ap_sig_cseq_ST_pp1_stg28_fsm_38, ap_sig_cseq_ST_pp1_stg0_fsm_10, ap_sig_cseq_ST_pp1_stg9_fsm_19, ap_sig_cseq_ST_pp1_stg13_fsm_23, ap_sig_cseq_ST_pp1_stg17_fsm_27, ap_sig_cseq_ST_pp1_stg21_fsm_31, ap_sig_cseq_ST_pp1_stg25_fsm_35, ap_sig_cseq_ST_pp1_stg29_fsm_39, ap_sig_cseq_ST_pp1_stg5_fsm_15, ap_sig_cseq_ST_pp1_stg10_fsm_20, ap_sig_cseq_ST_pp1_stg14_fsm_24, ap_sig_cseq_ST_pp1_stg18_fsm_28, ap_sig_cseq_ST_pp1_stg22_fsm_32, ap_sig_cseq_ST_pp1_stg26_fsm_36, ap_sig_cseq_ST_pp1_stg30_fsm_40, ap_sig_cseq_ST_pp1_stg6_fsm_16, ap_sig_cseq_ST_pp2_stg0_fsm_42, ap_reg_ppiten_pp2_it1, ap_sig_cseq_ST_pp2_stg15_fsm_57, ap_sig_cseq_ST_pp2_stg9_fsm_51, ap_sig_cseq_ST_pp2_stg10_fsm_52, ap_sig_cseq_ST_pp2_stg11_fsm_53, ap_sig_cseq_ST_pp2_stg12_fsm_54, ap_sig_cseq_ST_pp2_stg13_fsm_55, ap_sig_cseq_ST_pp2_stg14_fsm_56)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg1_fsm_43) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it0)) or ((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg2_fsm_44)) or ((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg4_fsm_46)) or ((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg8_fsm_50)) or ((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg3_fsm_45)) or ((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg5_fsm_47)) or ((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg7_fsm_49)) or ((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg6_fsm_48)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg9_fsm_19)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg8_fsm_18)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg11_fsm_21)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg10_fsm_20)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg12_fsm_22)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg13_fsm_23)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg14_fsm_24)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg15_fsm_25)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg20_fsm_30)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg26_fsm_36)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it2) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_10)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it2) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg4_fsm_14)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg22_fsm_32)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg30_fsm_40)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it2) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg2_fsm_12)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg16_fsm_26)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg28_fsm_38)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg18_fsm_28)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg24_fsm_34)) or ((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg15_fsm_57)) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg0_fsm_42) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it1)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg17_fsm_27)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg19_fsm_29)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg21_fsm_31)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg23_fsm_33)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg25_fsm_35)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg27_fsm_37)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg29_fsm_39)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg31_fsm_41)) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg1_fsm_11) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it2)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it2) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg3_fsm_13)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it2) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg5_fsm_15)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it2) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg6_fsm_16)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it2) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg7_fsm_17)) or ((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg9_fsm_51)) or ((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg10_fsm_52)) or ((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg11_fsm_53)) or ((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg12_fsm_54)) or ((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg13_fsm_55)) or ((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg14_fsm_56)))) then 
            grey_frame_ce0 <= ap_const_logic_1;
        else 
            grey_frame_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    -- grey_frame_ce1 assign process. --
    grey_frame_ce1_assign_proc : process(ap_sig_cseq_ST_pp2_stg1_fsm_43, ap_reg_ppiten_pp2_it0, ap_sig_cseq_ST_pp2_stg2_fsm_44, ap_sig_cseq_ST_pp2_stg4_fsm_46, ap_sig_cseq_ST_pp2_stg8_fsm_50, ap_sig_cseq_ST_pp2_stg3_fsm_45, ap_sig_cseq_ST_pp2_stg5_fsm_47, ap_sig_cseq_ST_pp2_stg7_fsm_49, ap_sig_cseq_ST_pp2_stg6_fsm_48, ap_sig_cseq_ST_pp2_stg0_fsm_42, ap_reg_ppiten_pp2_it1, ap_sig_cseq_ST_pp2_stg15_fsm_57, ap_sig_cseq_ST_pp3_stg0_fsm_59, ap_reg_ppiten_pp3_it0, ap_reg_ppstg_exitcond1_reg_7966_pp3_it1, ap_sig_ioackin_gmem_offset_WREADY, ap_reg_ppiten_pp3_it2, ap_sig_cseq_ST_pp2_stg9_fsm_51, ap_sig_cseq_ST_pp2_stg10_fsm_52, ap_sig_cseq_ST_pp2_stg11_fsm_53, ap_sig_cseq_ST_pp2_stg12_fsm_54, ap_sig_cseq_ST_pp2_stg13_fsm_55, ap_sig_cseq_ST_pp2_stg14_fsm_56)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg1_fsm_43) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it0)) or ((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg2_fsm_44)) or ((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg4_fsm_46)) or ((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg8_fsm_50)) or ((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg3_fsm_45)) or ((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg5_fsm_47)) or ((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg7_fsm_49)) or ((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg6_fsm_48)) or ((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg15_fsm_57)) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp3_stg0_fsm_59) and (ap_const_logic_1 = ap_reg_ppiten_pp3_it0) and not(((ap_const_lv1_0 = ap_reg_ppstg_exitcond1_reg_7966_pp3_it1) and (ap_const_logic_0 = ap_sig_ioackin_gmem_offset_WREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp3_it2)))) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg0_fsm_42) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it1)) or ((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg9_fsm_51)) or ((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg10_fsm_52)) or ((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg11_fsm_53)) or ((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg12_fsm_54)) or ((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg13_fsm_55)) or ((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg14_fsm_56)))) then 
            grey_frame_ce1 <= ap_const_logic_1;
        else 
            grey_frame_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    -- grey_frame_d0 assign process. --
    grey_frame_d0_assign_proc : process(reg_1613, ap_sig_cseq_ST_pp1_stg1_fsm_11, ap_reg_ppiten_pp1_it1, ap_reg_ppiten_pp1_it2, ap_sig_cseq_ST_pp2_stg1_fsm_43, ap_reg_ppiten_pp2_it0, ap_sig_cseq_ST_pp2_stg2_fsm_44, ap_sig_cseq_ST_pp2_stg4_fsm_46, ap_sig_cseq_ST_pp2_stg8_fsm_50, reg_1619, ap_sig_cseq_ST_pp2_stg3_fsm_45, ap_sig_cseq_ST_pp2_stg5_fsm_47, reg_1624, ap_sig_cseq_ST_pp1_stg2_fsm_12, ap_sig_cseq_ST_pp2_stg7_fsm_49, reg_1629, ap_sig_cseq_ST_pp2_stg6_fsm_48, reg_1634, ap_sig_cseq_ST_pp1_stg3_fsm_13, reg_1639, reg_1644, ap_sig_cseq_ST_pp1_stg4_fsm_14, reg_1649, ap_sig_cseq_ST_pp1_stg7_fsm_17, ap_sig_cseq_ST_pp1_stg11_fsm_21, ap_sig_cseq_ST_pp1_stg15_fsm_25, ap_sig_cseq_ST_pp1_stg19_fsm_29, ap_sig_cseq_ST_pp1_stg23_fsm_33, ap_sig_cseq_ST_pp1_stg27_fsm_37, ap_sig_cseq_ST_pp1_stg31_fsm_41, ap_sig_cseq_ST_pp1_stg8_fsm_18, ap_sig_cseq_ST_pp1_stg12_fsm_22, ap_sig_cseq_ST_pp1_stg16_fsm_26, ap_sig_cseq_ST_pp1_stg20_fsm_30, ap_sig_cseq_ST_pp1_stg24_fsm_34, ap_sig_cseq_ST_pp1_stg28_fsm_38, ap_sig_cseq_ST_pp1_stg0_fsm_10, ap_sig_cseq_ST_pp1_stg9_fsm_19, ap_sig_cseq_ST_pp1_stg13_fsm_23, ap_sig_cseq_ST_pp1_stg17_fsm_27, ap_sig_cseq_ST_pp1_stg21_fsm_31, ap_sig_cseq_ST_pp1_stg25_fsm_35, ap_sig_cseq_ST_pp1_stg29_fsm_39, ap_sig_cseq_ST_pp1_stg5_fsm_15, ap_sig_cseq_ST_pp1_stg10_fsm_20, ap_sig_cseq_ST_pp1_stg14_fsm_24, ap_sig_cseq_ST_pp1_stg18_fsm_28, ap_sig_cseq_ST_pp1_stg22_fsm_32, ap_sig_cseq_ST_pp1_stg26_fsm_36, ap_sig_cseq_ST_pp1_stg30_fsm_40, ap_sig_cseq_ST_pp1_stg6_fsm_16, ap_sig_cseq_ST_pp2_stg0_fsm_42, ap_reg_ppiten_pp2_it1, tmp_57_reg_7944, ap_sig_cseq_ST_pp2_stg15_fsm_57, yuv_frame_q1, ap_sig_cseq_ST_pp2_stg9_fsm_51, ap_sig_cseq_ST_pp2_stg10_fsm_52, ap_sig_cseq_ST_pp2_stg11_fsm_53, ap_sig_cseq_ST_pp2_stg12_fsm_54, ap_sig_cseq_ST_pp2_stg13_fsm_55, ap_sig_cseq_ST_pp2_stg14_fsm_56, p_36_cast_fu_3411_p3, p_cast_fu_3455_p3, p_38_cast_fu_3506_p3, p_37_cast_fu_3550_p3, p_40_cast_fu_3601_p3, p_39_cast_fu_3645_p3, p_42_cast_fu_3696_p3, p_41_cast_fu_3740_p3, p_44_cast_fu_3791_p3, p_43_cast_fu_3835_p3, p_46_cast_fu_3886_p3, p_45_cast_fu_3930_p3, p_48_cast_fu_3981_p3, p_47_cast_fu_4025_p3, p_50_cast_fu_4076_p3, p_49_cast_fu_4120_p3, p_52_cast_fu_4170_p3, p_51_cast_fu_4214_p3, p_54_cast_fu_4264_p3, p_53_cast_fu_4308_p3, p_56_cast_fu_4358_p3, p_55_cast_fu_4402_p3, p_58_cast_fu_4452_p3, p_57_cast_fu_4496_p3, p_60_cast_fu_4546_p3, p_59_cast_fu_4590_p3, p_62_cast_fu_4640_p3, p_61_cast_fu_4684_p3, p_64_cast_fu_4734_p3, p_63_cast_fu_4778_p3, p_66_cast_fu_4828_p3, p_65_cast_fu_4872_p3)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg0_fsm_42) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it1))) then 
            grey_frame_d0 <= tmp_57_reg_7944;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg15_fsm_57))) then 
            grey_frame_d0 <= reg_1644;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg14_fsm_56))) then 
            grey_frame_d0 <= reg_1649;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg11_fsm_53))) then 
            grey_frame_d0 <= reg_1634;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg10_fsm_52))) then 
            grey_frame_d0 <= reg_1639;
        elsif ((((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg7_fsm_49)) or ((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg13_fsm_55)))) then 
            grey_frame_d0 <= reg_1624;
        elsif ((((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg6_fsm_48)) or ((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg12_fsm_54)))) then 
            grey_frame_d0 <= reg_1629;
        elsif ((((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg3_fsm_45)) or ((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg5_fsm_47)) or ((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg9_fsm_51)))) then 
            grey_frame_d0 <= reg_1619;
        elsif ((((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg2_fsm_44)) or ((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg4_fsm_46)) or ((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg8_fsm_50)))) then 
            grey_frame_d0 <= reg_1613;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg1_fsm_43) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it0))) then 
            grey_frame_d0 <= yuv_frame_q1(23 downto 16);
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it2) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg7_fsm_17))) then 
            grey_frame_d0 <= p_65_cast_fu_4872_p3;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it2) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg6_fsm_16))) then 
            grey_frame_d0 <= p_66_cast_fu_4828_p3;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it2) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg5_fsm_15))) then 
            grey_frame_d0 <= p_63_cast_fu_4778_p3;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it2) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg4_fsm_14))) then 
            grey_frame_d0 <= p_64_cast_fu_4734_p3;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it2) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg3_fsm_13))) then 
            grey_frame_d0 <= p_61_cast_fu_4684_p3;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it2) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg2_fsm_12))) then 
            grey_frame_d0 <= p_62_cast_fu_4640_p3;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg1_fsm_11) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it2))) then 
            grey_frame_d0 <= p_59_cast_fu_4590_p3;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it2) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_10))) then 
            grey_frame_d0 <= p_60_cast_fu_4546_p3;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg31_fsm_41))) then 
            grey_frame_d0 <= p_57_cast_fu_4496_p3;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg30_fsm_40))) then 
            grey_frame_d0 <= p_58_cast_fu_4452_p3;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg29_fsm_39))) then 
            grey_frame_d0 <= p_55_cast_fu_4402_p3;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg28_fsm_38))) then 
            grey_frame_d0 <= p_56_cast_fu_4358_p3;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg27_fsm_37))) then 
            grey_frame_d0 <= p_53_cast_fu_4308_p3;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg26_fsm_36))) then 
            grey_frame_d0 <= p_54_cast_fu_4264_p3;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg25_fsm_35))) then 
            grey_frame_d0 <= p_51_cast_fu_4214_p3;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg24_fsm_34))) then 
            grey_frame_d0 <= p_52_cast_fu_4170_p3;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg23_fsm_33))) then 
            grey_frame_d0 <= p_49_cast_fu_4120_p3;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg22_fsm_32))) then 
            grey_frame_d0 <= p_50_cast_fu_4076_p3;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg21_fsm_31))) then 
            grey_frame_d0 <= p_47_cast_fu_4025_p3;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg20_fsm_30))) then 
            grey_frame_d0 <= p_48_cast_fu_3981_p3;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg19_fsm_29))) then 
            grey_frame_d0 <= p_45_cast_fu_3930_p3;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg18_fsm_28))) then 
            grey_frame_d0 <= p_46_cast_fu_3886_p3;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg17_fsm_27))) then 
            grey_frame_d0 <= p_43_cast_fu_3835_p3;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg16_fsm_26))) then 
            grey_frame_d0 <= p_44_cast_fu_3791_p3;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg15_fsm_25))) then 
            grey_frame_d0 <= p_41_cast_fu_3740_p3;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg14_fsm_24))) then 
            grey_frame_d0 <= p_42_cast_fu_3696_p3;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg13_fsm_23))) then 
            grey_frame_d0 <= p_39_cast_fu_3645_p3;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg12_fsm_22))) then 
            grey_frame_d0 <= p_40_cast_fu_3601_p3;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg11_fsm_21))) then 
            grey_frame_d0 <= p_37_cast_fu_3550_p3;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg10_fsm_20))) then 
            grey_frame_d0 <= p_38_cast_fu_3506_p3;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg9_fsm_19))) then 
            grey_frame_d0 <= p_cast_fu_3455_p3;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg8_fsm_18))) then 
            grey_frame_d0 <= p_36_cast_fu_3411_p3;
        else 
            grey_frame_d0 <= "XXXXXXXX";
        end if; 
    end process;


    -- grey_frame_d1 assign process. --
    grey_frame_d1_assign_proc : process(reg_1613, ap_sig_cseq_ST_pp2_stg1_fsm_43, ap_reg_ppiten_pp2_it0, ap_sig_cseq_ST_pp2_stg2_fsm_44, ap_sig_cseq_ST_pp2_stg4_fsm_46, ap_sig_cseq_ST_pp2_stg8_fsm_50, ap_sig_cseq_ST_pp2_stg3_fsm_45, ap_sig_cseq_ST_pp2_stg5_fsm_47, ap_sig_cseq_ST_pp2_stg7_fsm_49, ap_sig_cseq_ST_pp2_stg6_fsm_48, ap_sig_cseq_ST_pp2_stg0_fsm_42, ap_reg_ppiten_pp2_it1, tmp_43_reg_7706, tmp_44_reg_7733, tmp_45_reg_7740, tmp_46_reg_7767, tmp_47_reg_7774, tmp_48_reg_7801, tmp_49_reg_7808, tmp_50_reg_7835, tmp_51_reg_7842, tmp_52_reg_7869, tmp_53_reg_7876, tmp_54_reg_7903, tmp_55_reg_7910, tmp_56_reg_7937, ap_sig_cseq_ST_pp2_stg15_fsm_57, ap_sig_cseq_ST_pp2_stg9_fsm_51, ap_sig_cseq_ST_pp2_stg10_fsm_52, ap_sig_cseq_ST_pp2_stg11_fsm_53, ap_sig_cseq_ST_pp2_stg12_fsm_54, ap_sig_cseq_ST_pp2_stg13_fsm_55, ap_sig_cseq_ST_pp2_stg14_fsm_56, tmp_41_fu_4922_p1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg0_fsm_42) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it1))) then 
            grey_frame_d1 <= reg_1613;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg15_fsm_57))) then 
            grey_frame_d1 <= tmp_56_reg_7937;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg14_fsm_56))) then 
            grey_frame_d1 <= tmp_55_reg_7910;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg13_fsm_55))) then 
            grey_frame_d1 <= tmp_54_reg_7903;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg12_fsm_54))) then 
            grey_frame_d1 <= tmp_53_reg_7876;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg11_fsm_53))) then 
            grey_frame_d1 <= tmp_52_reg_7869;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg10_fsm_52))) then 
            grey_frame_d1 <= tmp_51_reg_7842;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg9_fsm_51))) then 
            grey_frame_d1 <= tmp_50_reg_7835;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg8_fsm_50))) then 
            grey_frame_d1 <= tmp_49_reg_7808;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg7_fsm_49))) then 
            grey_frame_d1 <= tmp_48_reg_7801;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg6_fsm_48))) then 
            grey_frame_d1 <= tmp_47_reg_7774;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg5_fsm_47))) then 
            grey_frame_d1 <= tmp_46_reg_7767;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg4_fsm_46))) then 
            grey_frame_d1 <= tmp_45_reg_7740;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg3_fsm_45))) then 
            grey_frame_d1 <= tmp_44_reg_7733;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg2_fsm_44))) then 
            grey_frame_d1 <= tmp_43_reg_7706;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg1_fsm_43) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it0))) then 
            grey_frame_d1 <= tmp_41_fu_4922_p1;
        else 
            grey_frame_d1 <= "XXXXXXXX";
        end if; 
    end process;


    -- grey_frame_we0 assign process. --
    grey_frame_we0_assign_proc : process(ap_sig_cseq_ST_pp1_stg1_fsm_11, ap_reg_ppiten_pp1_it1, ap_reg_ppiten_pp1_it2, ap_sig_cseq_ST_pp2_stg1_fsm_43, ap_reg_ppiten_pp2_it0, tmp_3_reg_7687, ap_sig_cseq_ST_pp2_stg2_fsm_44, ap_sig_cseq_ST_pp2_stg4_fsm_46, ap_sig_cseq_ST_pp2_stg8_fsm_50, ap_sig_cseq_ST_pp2_stg3_fsm_45, ap_sig_cseq_ST_pp2_stg5_fsm_47, ap_sig_cseq_ST_pp1_stg2_fsm_12, ap_sig_cseq_ST_pp2_stg7_fsm_49, ap_sig_cseq_ST_pp2_stg6_fsm_48, ap_sig_cseq_ST_pp1_stg3_fsm_13, ap_sig_cseq_ST_pp1_stg4_fsm_14, ap_sig_cseq_ST_pp1_stg7_fsm_17, ap_sig_cseq_ST_pp1_stg11_fsm_21, ap_sig_cseq_ST_pp1_stg15_fsm_25, ap_sig_cseq_ST_pp1_stg19_fsm_29, ap_sig_cseq_ST_pp1_stg23_fsm_33, ap_sig_cseq_ST_pp1_stg27_fsm_37, ap_sig_cseq_ST_pp1_stg31_fsm_41, ap_reg_ppstg_tmp_5_reg_5878_pp1_it1, ap_sig_cseq_ST_pp1_stg8_fsm_18, ap_sig_cseq_ST_pp1_stg12_fsm_22, ap_sig_cseq_ST_pp1_stg16_fsm_26, ap_sig_cseq_ST_pp1_stg20_fsm_30, ap_sig_cseq_ST_pp1_stg24_fsm_34, ap_sig_cseq_ST_pp1_stg28_fsm_38, ap_sig_cseq_ST_pp1_stg0_fsm_10, ap_sig_cseq_ST_pp1_stg9_fsm_19, ap_sig_cseq_ST_pp1_stg13_fsm_23, ap_sig_cseq_ST_pp1_stg17_fsm_27, ap_sig_cseq_ST_pp1_stg21_fsm_31, ap_sig_cseq_ST_pp1_stg25_fsm_35, ap_sig_cseq_ST_pp1_stg29_fsm_39, ap_sig_cseq_ST_pp1_stg5_fsm_15, ap_sig_cseq_ST_pp1_stg10_fsm_20, ap_sig_cseq_ST_pp1_stg14_fsm_24, ap_sig_cseq_ST_pp1_stg18_fsm_28, ap_sig_cseq_ST_pp1_stg22_fsm_32, ap_sig_cseq_ST_pp1_stg26_fsm_36, ap_sig_cseq_ST_pp1_stg30_fsm_40, ap_sig_cseq_ST_pp1_stg6_fsm_16, ap_reg_ppstg_tmp_5_reg_5878_pp1_it2, ap_sig_cseq_ST_pp2_stg0_fsm_42, ap_reg_ppiten_pp2_it1, ap_sig_cseq_ST_pp2_stg15_fsm_57, ap_sig_cseq_ST_pp2_stg9_fsm_51, ap_sig_cseq_ST_pp2_stg10_fsm_52, ap_sig_cseq_ST_pp2_stg11_fsm_53, ap_sig_cseq_ST_pp2_stg12_fsm_54, ap_sig_cseq_ST_pp2_stg13_fsm_55, ap_sig_cseq_ST_pp2_stg14_fsm_56)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg1_fsm_43) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and not((ap_const_lv1_0 = tmp_3_reg_7687))) or ((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and not((ap_const_lv1_0 = tmp_3_reg_7687)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg2_fsm_44)) or ((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and not((ap_const_lv1_0 = tmp_3_reg_7687)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg4_fsm_46)) or ((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and not((ap_const_lv1_0 = tmp_3_reg_7687)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg8_fsm_50)) or ((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and not((ap_const_lv1_0 = tmp_3_reg_7687)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg3_fsm_45)) or ((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and not((ap_const_lv1_0 = tmp_3_reg_7687)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg5_fsm_47)) or ((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and not((ap_const_lv1_0 = tmp_3_reg_7687)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg7_fsm_49)) or ((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and not((ap_const_lv1_0 = tmp_3_reg_7687)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg6_fsm_48)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_5_reg_5878_pp1_it1)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg9_fsm_19)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_5_reg_5878_pp1_it1)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg8_fsm_18)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg11_fsm_21) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_5_reg_5878_pp1_it1))) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_5_reg_5878_pp1_it1)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg10_fsm_20)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_5_reg_5878_pp1_it1)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg12_fsm_22)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_5_reg_5878_pp1_it1)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg13_fsm_23)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_5_reg_5878_pp1_it1)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg14_fsm_24)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg15_fsm_25) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_5_reg_5878_pp1_it1))) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_5_reg_5878_pp1_it1)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg20_fsm_30)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_5_reg_5878_pp1_it1)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg26_fsm_36)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it2) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_5_reg_5878_pp1_it1)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_10)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it2) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg4_fsm_14) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_5_reg_5878_pp1_it2))) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_5_reg_5878_pp1_it1)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg22_fsm_32)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_5_reg_5878_pp1_it1)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg30_fsm_40)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it2) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg2_fsm_12) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_5_reg_5878_pp1_it2))) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_5_reg_5878_pp1_it1)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg16_fsm_26)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_5_reg_5878_pp1_it1)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg28_fsm_38)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_5_reg_5878_pp1_it1)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg18_fsm_28)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_5_reg_5878_pp1_it1)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg24_fsm_34)) or ((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and not((ap_const_lv1_0 = tmp_3_reg_7687)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg15_fsm_57)) or (not((ap_const_lv1_0 = tmp_3_reg_7687)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg0_fsm_42) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it1)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_5_reg_5878_pp1_it1)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg17_fsm_27)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg19_fsm_29) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_5_reg_5878_pp1_it1))) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_5_reg_5878_pp1_it1)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg21_fsm_31)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg23_fsm_33) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_5_reg_5878_pp1_it1))) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_5_reg_5878_pp1_it1)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg25_fsm_35)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg27_fsm_37) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_5_reg_5878_pp1_it1))) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_5_reg_5878_pp1_it1)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg29_fsm_39)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg31_fsm_41) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_5_reg_5878_pp1_it1))) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg1_fsm_11) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it2) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_5_reg_5878_pp1_it2))) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it2) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg3_fsm_13) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_5_reg_5878_pp1_it2))) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it2) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg5_fsm_15) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_5_reg_5878_pp1_it2))) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it2) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg6_fsm_16) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_5_reg_5878_pp1_it2))) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it2) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg7_fsm_17) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_5_reg_5878_pp1_it2))) or ((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and not((ap_const_lv1_0 = tmp_3_reg_7687)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg9_fsm_51)) or ((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and not((ap_const_lv1_0 = tmp_3_reg_7687)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg10_fsm_52)) or ((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and not((ap_const_lv1_0 = tmp_3_reg_7687)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg11_fsm_53)) or ((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and not((ap_const_lv1_0 = tmp_3_reg_7687)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg12_fsm_54)) or ((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and not((ap_const_lv1_0 = tmp_3_reg_7687)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg13_fsm_55)) or ((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and not((ap_const_lv1_0 = tmp_3_reg_7687)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg14_fsm_56)))) then 
            grey_frame_we0 <= ap_const_logic_1;
        else 
            grey_frame_we0 <= ap_const_logic_0;
        end if; 
    end process;


    -- grey_frame_we1 assign process. --
    grey_frame_we1_assign_proc : process(ap_sig_cseq_ST_pp2_stg1_fsm_43, ap_reg_ppiten_pp2_it0, tmp_3_reg_7687, ap_sig_cseq_ST_pp2_stg2_fsm_44, ap_sig_cseq_ST_pp2_stg4_fsm_46, ap_sig_cseq_ST_pp2_stg8_fsm_50, ap_sig_cseq_ST_pp2_stg3_fsm_45, ap_sig_cseq_ST_pp2_stg5_fsm_47, ap_sig_cseq_ST_pp2_stg7_fsm_49, ap_sig_cseq_ST_pp2_stg6_fsm_48, ap_sig_cseq_ST_pp2_stg0_fsm_42, ap_reg_ppiten_pp2_it1, ap_sig_cseq_ST_pp2_stg15_fsm_57, ap_sig_cseq_ST_pp2_stg9_fsm_51, ap_sig_cseq_ST_pp2_stg10_fsm_52, ap_sig_cseq_ST_pp2_stg11_fsm_53, ap_sig_cseq_ST_pp2_stg12_fsm_54, ap_sig_cseq_ST_pp2_stg13_fsm_55, ap_sig_cseq_ST_pp2_stg14_fsm_56)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg1_fsm_43) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and not((ap_const_lv1_0 = tmp_3_reg_7687))) or ((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and not((ap_const_lv1_0 = tmp_3_reg_7687)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg2_fsm_44)) or ((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and not((ap_const_lv1_0 = tmp_3_reg_7687)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg4_fsm_46)) or ((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and not((ap_const_lv1_0 = tmp_3_reg_7687)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg8_fsm_50)) or ((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and not((ap_const_lv1_0 = tmp_3_reg_7687)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg3_fsm_45)) or ((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and not((ap_const_lv1_0 = tmp_3_reg_7687)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg5_fsm_47)) or ((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and not((ap_const_lv1_0 = tmp_3_reg_7687)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg7_fsm_49)) or ((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and not((ap_const_lv1_0 = tmp_3_reg_7687)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg6_fsm_48)) or ((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and not((ap_const_lv1_0 = tmp_3_reg_7687)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg15_fsm_57)) or (not((ap_const_lv1_0 = tmp_3_reg_7687)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg0_fsm_42) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it1)) or ((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and not((ap_const_lv1_0 = tmp_3_reg_7687)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg9_fsm_51)) or ((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and not((ap_const_lv1_0 = tmp_3_reg_7687)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg10_fsm_52)) or ((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and not((ap_const_lv1_0 = tmp_3_reg_7687)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg11_fsm_53)) or ((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and not((ap_const_lv1_0 = tmp_3_reg_7687)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg12_fsm_54)) or ((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and not((ap_const_lv1_0 = tmp_3_reg_7687)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg13_fsm_55)) or ((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and not((ap_const_lv1_0 = tmp_3_reg_7687)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg14_fsm_56)))) then 
            grey_frame_we1 <= ap_const_logic_1;
        else 
            grey_frame_we1 <= ap_const_logic_0;
        end if; 
    end process;


    -- grp_backsub_hls_fptoui_float_i8_fu_1529_ap_ce assign process. --
    grp_backsub_hls_fptoui_float_i8_fu_1529_ap_ce_assign_proc : process(ap_sig_cseq_ST_pp1_stg1_fsm_11, ap_sig_cseq_ST_pp1_stg2_fsm_12, ap_sig_cseq_ST_pp1_stg3_fsm_13, ap_sig_cseq_ST_pp1_stg4_fsm_14, ap_sig_cseq_ST_pp1_stg7_fsm_17, ap_sig_cseq_ST_pp1_stg11_fsm_21, ap_sig_cseq_ST_pp1_stg15_fsm_25, ap_sig_cseq_ST_pp1_stg19_fsm_29, ap_sig_cseq_ST_pp1_stg23_fsm_33, ap_sig_cseq_ST_pp1_stg27_fsm_37, ap_sig_cseq_ST_pp1_stg31_fsm_41, ap_sig_cseq_ST_pp1_stg8_fsm_18, ap_sig_cseq_ST_pp1_stg12_fsm_22, ap_sig_cseq_ST_pp1_stg16_fsm_26, ap_sig_cseq_ST_pp1_stg20_fsm_30, ap_sig_cseq_ST_pp1_stg24_fsm_34, ap_sig_cseq_ST_pp1_stg28_fsm_38, ap_sig_cseq_ST_pp1_stg0_fsm_10, ap_sig_cseq_ST_pp1_stg9_fsm_19, ap_sig_cseq_ST_pp1_stg13_fsm_23, ap_sig_cseq_ST_pp1_stg17_fsm_27, ap_sig_cseq_ST_pp1_stg21_fsm_31, ap_sig_cseq_ST_pp1_stg25_fsm_35, ap_sig_cseq_ST_pp1_stg29_fsm_39, ap_sig_cseq_ST_pp1_stg5_fsm_15, ap_sig_cseq_ST_pp1_stg10_fsm_20, ap_sig_cseq_ST_pp1_stg14_fsm_24, ap_sig_cseq_ST_pp1_stg18_fsm_28, ap_sig_cseq_ST_pp1_stg22_fsm_32, ap_sig_cseq_ST_pp1_stg26_fsm_36, ap_sig_cseq_ST_pp1_stg30_fsm_40, ap_sig_cseq_ST_pp1_stg6_fsm_16)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg1_fsm_11) or (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg2_fsm_12) or (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg3_fsm_13) or (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg4_fsm_14) or (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg7_fsm_17) or (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg11_fsm_21) or (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg15_fsm_25) or (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg19_fsm_29) or (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg23_fsm_33) or (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg27_fsm_37) or (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg31_fsm_41) or (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg8_fsm_18) or (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg12_fsm_22) or (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg16_fsm_26) or (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg20_fsm_30) or (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg24_fsm_34) or (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg28_fsm_38) or (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_10) or (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg9_fsm_19) or (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg13_fsm_23) or (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg17_fsm_27) or (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg21_fsm_31) or (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg25_fsm_35) or (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg29_fsm_39) or (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg5_fsm_15) or (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg10_fsm_20) or (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg14_fsm_24) or (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg18_fsm_28) or (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg22_fsm_32) or (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg26_fsm_36) or (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg30_fsm_40) or (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg6_fsm_16))) then 
            grp_backsub_hls_fptoui_float_i8_fu_1529_ap_ce <= ap_const_logic_1;
        else 
            grp_backsub_hls_fptoui_float_i8_fu_1529_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    -- grp_backsub_hls_fptoui_float_i8_fu_1529_x assign process. --
    grp_backsub_hls_fptoui_float_i8_fu_1529_x_assign_proc : process(ap_sig_cseq_ST_pp1_stg1_fsm_11, ap_reg_ppiten_pp1_it1, ap_reg_ppiten_pp1_it2, ap_sig_cseq_ST_pp1_stg2_fsm_12, ap_sig_cseq_ST_pp1_stg3_fsm_13, ap_sig_cseq_ST_pp1_stg4_fsm_14, ap_sig_cseq_ST_pp1_stg7_fsm_17, ap_sig_cseq_ST_pp1_stg11_fsm_21, ap_sig_cseq_ST_pp1_stg15_fsm_25, ap_sig_cseq_ST_pp1_stg19_fsm_29, ap_sig_cseq_ST_pp1_stg23_fsm_33, ap_sig_cseq_ST_pp1_stg27_fsm_37, ap_sig_cseq_ST_pp1_stg31_fsm_41, ap_reg_ppstg_tmp_5_reg_5878_pp1_it1, ap_sig_cseq_ST_pp1_stg8_fsm_18, ap_sig_cseq_ST_pp1_stg12_fsm_22, ap_sig_cseq_ST_pp1_stg16_fsm_26, ap_sig_cseq_ST_pp1_stg20_fsm_30, ap_sig_cseq_ST_pp1_stg24_fsm_34, ap_sig_cseq_ST_pp1_stg28_fsm_38, ap_sig_cseq_ST_pp1_stg0_fsm_10, ap_sig_cseq_ST_pp1_stg9_fsm_19, ap_sig_cseq_ST_pp1_stg13_fsm_23, ap_sig_cseq_ST_pp1_stg17_fsm_27, ap_sig_cseq_ST_pp1_stg21_fsm_31, ap_sig_cseq_ST_pp1_stg25_fsm_35, ap_sig_cseq_ST_pp1_stg29_fsm_39, ap_sig_cseq_ST_pp1_stg5_fsm_15, ap_sig_cseq_ST_pp1_stg10_fsm_20, ap_sig_cseq_ST_pp1_stg14_fsm_24, ap_sig_cseq_ST_pp1_stg18_fsm_28, ap_sig_cseq_ST_pp1_stg22_fsm_32, ap_sig_cseq_ST_pp1_stg26_fsm_36, ap_sig_cseq_ST_pp1_stg30_fsm_40, ap_sig_cseq_ST_pp1_stg6_fsm_16, reg_1809, reg_1821, reg_1827, reg_1833, reg_1839, reg_1845, reg_1851, reg_1857, reg_1863, reg_1869, reg_1875, reg_1881, reg_1887, reg_1893, reg_1899, reg_1905, reg_1911, reg_1917, ap_reg_ppstg_tmp_5_reg_5878_pp1_it2, reg_1923, reg_1928, tmp_50_10_reg_7577, tmp_61_11_reg_7612)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp1_it2) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg5_fsm_15) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_5_reg_5878_pp1_it2)))) then 
            grp_backsub_hls_fptoui_float_i8_fu_1529_x <= reg_1917;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it2) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg3_fsm_13) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_5_reg_5878_pp1_it2)))) then 
            grp_backsub_hls_fptoui_float_i8_fu_1529_x <= reg_1911;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it2) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_5_reg_5878_pp1_it1)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_10))) then 
            grp_backsub_hls_fptoui_float_i8_fu_1529_x <= reg_1905;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg31_fsm_41) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_5_reg_5878_pp1_it1)))) then 
            grp_backsub_hls_fptoui_float_i8_fu_1529_x <= tmp_61_11_reg_7612;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_5_reg_5878_pp1_it1)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg29_fsm_39))) then 
            grp_backsub_hls_fptoui_float_i8_fu_1529_x <= reg_1899;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_5_reg_5878_pp1_it1)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg28_fsm_38))) then 
            grp_backsub_hls_fptoui_float_i8_fu_1529_x <= tmp_50_10_reg_7577;
        elsif ((((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg27_fsm_37) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_5_reg_5878_pp1_it1))) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg1_fsm_11) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it2) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_5_reg_5878_pp1_it2))))) then 
            grp_backsub_hls_fptoui_float_i8_fu_1529_x <= reg_1928;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_5_reg_5878_pp1_it1)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg26_fsm_36))) then 
            grp_backsub_hls_fptoui_float_i8_fu_1529_x <= reg_1893;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_5_reg_5878_pp1_it1)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg25_fsm_35))) then 
            grp_backsub_hls_fptoui_float_i8_fu_1529_x <= reg_1875;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_5_reg_5878_pp1_it1)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg24_fsm_34))) then 
            grp_backsub_hls_fptoui_float_i8_fu_1529_x <= reg_1887;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg23_fsm_33) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_5_reg_5878_pp1_it1)))) then 
            grp_backsub_hls_fptoui_float_i8_fu_1529_x <= reg_1863;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_5_reg_5878_pp1_it1)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg21_fsm_31))) then 
            grp_backsub_hls_fptoui_float_i8_fu_1529_x <= reg_1851;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_5_reg_5878_pp1_it1)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg20_fsm_30))) then 
            grp_backsub_hls_fptoui_float_i8_fu_1529_x <= reg_1881;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg19_fsm_29) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_5_reg_5878_pp1_it1)))) then 
            grp_backsub_hls_fptoui_float_i8_fu_1529_x <= reg_1839;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_5_reg_5878_pp1_it1)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg18_fsm_28))) then 
            grp_backsub_hls_fptoui_float_i8_fu_1529_x <= reg_1869;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_5_reg_5878_pp1_it1)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg16_fsm_26))) then 
            grp_backsub_hls_fptoui_float_i8_fu_1529_x <= reg_1857;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg15_fsm_25) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_5_reg_5878_pp1_it1)))) then 
            grp_backsub_hls_fptoui_float_i8_fu_1529_x <= reg_1833;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_5_reg_5878_pp1_it1)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg14_fsm_24))) then 
            grp_backsub_hls_fptoui_float_i8_fu_1529_x <= reg_1845;
        elsif ((((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg11_fsm_21) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_5_reg_5878_pp1_it1))) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_5_reg_5878_pp1_it1)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg17_fsm_27)))) then 
            grp_backsub_hls_fptoui_float_i8_fu_1529_x <= reg_1821;
        elsif ((((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_5_reg_5878_pp1_it1)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg10_fsm_20)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it2) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg4_fsm_14) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_5_reg_5878_pp1_it2))) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_5_reg_5878_pp1_it1)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg22_fsm_32)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_5_reg_5878_pp1_it1)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg30_fsm_40)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it2) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg2_fsm_12) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_5_reg_5878_pp1_it2))))) then 
            grp_backsub_hls_fptoui_float_i8_fu_1529_x <= reg_1923;
        elsif ((((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_5_reg_5878_pp1_it1)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg8_fsm_18)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_5_reg_5878_pp1_it1)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg12_fsm_22)))) then 
            grp_backsub_hls_fptoui_float_i8_fu_1529_x <= reg_1827;
        elsif ((((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_5_reg_5878_pp1_it1)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg6_fsm_16)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg7_fsm_17) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_5_reg_5878_pp1_it1))) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_5_reg_5878_pp1_it1)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg9_fsm_19)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_5_reg_5878_pp1_it1)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg13_fsm_23)))) then 
            grp_backsub_hls_fptoui_float_i8_fu_1529_x <= reg_1809;
        else 
            grp_backsub_hls_fptoui_float_i8_fu_1529_x <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_fu_1534_ce <= ap_const_logic_1;

    -- grp_fu_1534_p0 assign process. --
    grp_fu_1534_p0_assign_proc : process(ap_sig_cseq_ST_pp1_stg1_fsm_11, ap_reg_ppiten_pp1_it0, ap_reg_ppiten_pp1_it1, ap_sig_cseq_ST_pp1_stg2_fsm_12, ap_sig_cseq_ST_pp1_stg3_fsm_13, ap_sig_cseq_ST_pp1_stg4_fsm_14, ap_sig_cseq_ST_pp1_stg7_fsm_17, ap_sig_cseq_ST_pp1_stg11_fsm_21, ap_sig_cseq_ST_pp1_stg15_fsm_25, ap_sig_cseq_ST_pp1_stg19_fsm_29, ap_sig_cseq_ST_pp1_stg23_fsm_33, ap_sig_cseq_ST_pp1_stg27_fsm_37, ap_sig_cseq_ST_pp1_stg31_fsm_41, ap_sig_cseq_ST_pp1_stg8_fsm_18, ap_sig_cseq_ST_pp1_stg12_fsm_22, ap_sig_cseq_ST_pp1_stg16_fsm_26, ap_sig_cseq_ST_pp1_stg20_fsm_30, ap_sig_cseq_ST_pp1_stg24_fsm_34, ap_sig_cseq_ST_pp1_stg28_fsm_38, ap_sig_cseq_ST_pp1_stg0_fsm_10, ap_sig_cseq_ST_pp1_stg9_fsm_19, ap_sig_cseq_ST_pp1_stg13_fsm_23, ap_sig_cseq_ST_pp1_stg17_fsm_27, ap_sig_cseq_ST_pp1_stg21_fsm_31, ap_sig_cseq_ST_pp1_stg25_fsm_35, ap_sig_cseq_ST_pp1_stg29_fsm_39, ap_sig_cseq_ST_pp1_stg5_fsm_15, ap_sig_cseq_ST_pp1_stg10_fsm_20, ap_sig_cseq_ST_pp1_stg14_fsm_24, ap_sig_cseq_ST_pp1_stg18_fsm_28, ap_sig_cseq_ST_pp1_stg22_fsm_32, ap_sig_cseq_ST_pp1_stg26_fsm_36, ap_sig_cseq_ST_pp1_stg30_fsm_40, ap_sig_cseq_ST_pp1_stg6_fsm_16, reg_1714, reg_1727, reg_1733, reg_1752, reg_1765, reg_1772, reg_1790, reg_1803, reg_1809, reg_1821, reg_1833, reg_1845, reg_1851, reg_1869, reg_1875, reg_1887, tmp_57_4_reg_7192, tmp_57_7_reg_7277, tmp_57_9_reg_7332)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg11_fsm_21))) then 
            grp_fu_1534_p0 <= tmp_57_9_reg_7332;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg10_fsm_20))) then 
            grp_fu_1534_p0 <= reg_1887;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg9_fsm_19))) then 
            grp_fu_1534_p0 <= tmp_57_7_reg_7277;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg8_fsm_18))) then 
            grp_fu_1534_p0 <= reg_1875;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg7_fsm_17))) then 
            grp_fu_1534_p0 <= reg_1869;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg6_fsm_16))) then 
            grp_fu_1534_p0 <= tmp_57_4_reg_7192;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg5_fsm_15))) then 
            grp_fu_1534_p0 <= reg_1851;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg4_fsm_14))) then 
            grp_fu_1534_p0 <= reg_1845;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg3_fsm_13))) then 
            grp_fu_1534_p0 <= reg_1833;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg2_fsm_12))) then 
            grp_fu_1534_p0 <= reg_1821;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg1_fsm_11) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1))) then 
            grp_fu_1534_p0 <= reg_1809;
        elsif ((((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg20_fsm_30)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg30_fsm_40)))) then 
            grp_fu_1534_p0 <= reg_1772;
        elsif ((((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg28_fsm_38)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg18_fsm_28)))) then 
            grp_fu_1534_p0 <= reg_1733;
        elsif ((((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg23_fsm_33)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg17_fsm_27)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg29_fsm_39)))) then 
            grp_fu_1534_p0 <= reg_1803;
        elsif ((((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg16_fsm_26)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg26_fsm_36)))) then 
            grp_fu_1534_p0 <= reg_1790;
        elsif ((((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg15_fsm_25)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg27_fsm_37)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg21_fsm_31)))) then 
            grp_fu_1534_p0 <= reg_1765;
        elsif ((((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg24_fsm_34)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg14_fsm_24)))) then 
            grp_fu_1534_p0 <= reg_1752;
        elsif ((((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg19_fsm_29)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg31_fsm_41)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg13_fsm_23)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg25_fsm_35)))) then 
            grp_fu_1534_p0 <= reg_1727;
        elsif ((((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg12_fsm_22)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_10)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg22_fsm_32)))) then 
            grp_fu_1534_p0 <= reg_1714;
        else 
            grp_fu_1534_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    -- grp_fu_1534_p1 assign process. --
    grp_fu_1534_p1_assign_proc : process(ap_sig_cseq_ST_pp1_stg1_fsm_11, ap_reg_ppiten_pp1_it0, ap_reg_ppiten_pp1_it1, ap_sig_cseq_ST_pp1_stg2_fsm_12, ap_sig_cseq_ST_pp1_stg3_fsm_13, ap_sig_cseq_ST_pp1_stg4_fsm_14, ap_sig_cseq_ST_pp1_stg7_fsm_17, ap_sig_cseq_ST_pp1_stg11_fsm_21, ap_sig_cseq_ST_pp1_stg15_fsm_25, ap_sig_cseq_ST_pp1_stg19_fsm_29, ap_sig_cseq_ST_pp1_stg23_fsm_33, ap_sig_cseq_ST_pp1_stg27_fsm_37, ap_sig_cseq_ST_pp1_stg31_fsm_41, ap_sig_cseq_ST_pp1_stg8_fsm_18, ap_sig_cseq_ST_pp1_stg12_fsm_22, ap_sig_cseq_ST_pp1_stg16_fsm_26, ap_sig_cseq_ST_pp1_stg20_fsm_30, ap_sig_cseq_ST_pp1_stg24_fsm_34, ap_sig_cseq_ST_pp1_stg28_fsm_38, ap_sig_cseq_ST_pp1_stg0_fsm_10, ap_sig_cseq_ST_pp1_stg9_fsm_19, ap_sig_cseq_ST_pp1_stg13_fsm_23, ap_sig_cseq_ST_pp1_stg17_fsm_27, ap_sig_cseq_ST_pp1_stg21_fsm_31, ap_sig_cseq_ST_pp1_stg25_fsm_35, ap_sig_cseq_ST_pp1_stg29_fsm_39, ap_sig_cseq_ST_pp1_stg5_fsm_15, ap_sig_cseq_ST_pp1_stg10_fsm_20, ap_sig_cseq_ST_pp1_stg14_fsm_24, ap_sig_cseq_ST_pp1_stg18_fsm_28, ap_sig_cseq_ST_pp1_stg22_fsm_32, ap_sig_cseq_ST_pp1_stg26_fsm_36, ap_sig_cseq_ST_pp1_stg30_fsm_40, ap_sig_cseq_ST_pp1_stg6_fsm_16, reg_1714, reg_1720, reg_1733, reg_1740, reg_1746, reg_1752, reg_1759, reg_1772, reg_1778, reg_1790, reg_1797, reg_1815, tmp_60_7_reg_7437, tmp_60_8_reg_7442, tmp_60_9_reg_7452)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg11_fsm_21))) then 
            grp_fu_1534_p1 <= tmp_60_9_reg_7452;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg10_fsm_20))) then 
            grp_fu_1534_p1 <= tmp_60_8_reg_7442;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg9_fsm_19))) then 
            grp_fu_1534_p1 <= tmp_60_7_reg_7437;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg8_fsm_18))) then 
            grp_fu_1534_p1 <= reg_1746;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg5_fsm_15))) then 
            grp_fu_1534_p1 <= reg_1815;
        elsif ((((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg31_fsm_41)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg21_fsm_31)))) then 
            grp_fu_1534_p1 <= reg_1790;
        elsif ((((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg20_fsm_30)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg30_fsm_40)))) then 
            grp_fu_1534_p1 <= reg_1778;
        elsif ((((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg19_fsm_29)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg29_fsm_39)))) then 
            grp_fu_1534_p1 <= reg_1752;
        elsif ((((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg28_fsm_38)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg18_fsm_28)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg2_fsm_12)))) then 
            grp_fu_1534_p1 <= reg_1740;
        elsif ((((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg27_fsm_37)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg17_fsm_27)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg7_fsm_17)))) then 
            grp_fu_1534_p1 <= reg_1714;
        elsif ((((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg16_fsm_26)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg26_fsm_36)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg6_fsm_16)))) then 
            grp_fu_1534_p1 <= reg_1797;
        elsif ((((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg15_fsm_25)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg4_fsm_14)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg25_fsm_35)))) then 
            grp_fu_1534_p1 <= reg_1772;
        elsif ((((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg3_fsm_13)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg24_fsm_34)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg14_fsm_24)))) then 
            grp_fu_1534_p1 <= reg_1759;
        elsif ((((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg23_fsm_33)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg13_fsm_23)) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg1_fsm_11) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1)))) then 
            grp_fu_1534_p1 <= reg_1733;
        elsif ((((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg12_fsm_22)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_10)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg22_fsm_32)))) then 
            grp_fu_1534_p1 <= reg_1720;
        else 
            grp_fu_1534_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_fu_1538_ce <= ap_const_logic_1;

    -- grp_fu_1538_p0 assign process. --
    grp_fu_1538_p0_assign_proc : process(ap_sig_cseq_ST_pp1_stg1_fsm_11, ap_reg_ppiten_pp1_it0, ap_reg_ppiten_pp1_it1, ap_reg_ppiten_pp1_it2, ap_sig_cseq_ST_pp1_stg2_fsm_12, ap_sig_cseq_ST_pp1_stg3_fsm_13, ap_sig_cseq_ST_pp1_stg4_fsm_14, ap_sig_cseq_ST_pp1_stg7_fsm_17, ap_sig_cseq_ST_pp1_stg11_fsm_21, ap_sig_cseq_ST_pp1_stg15_fsm_25, ap_sig_cseq_ST_pp1_stg19_fsm_29, ap_sig_cseq_ST_pp1_stg23_fsm_33, ap_sig_cseq_ST_pp1_stg27_fsm_37, ap_sig_cseq_ST_pp1_stg31_fsm_41, ap_sig_cseq_ST_pp1_stg8_fsm_18, ap_sig_cseq_ST_pp1_stg12_fsm_22, ap_sig_cseq_ST_pp1_stg16_fsm_26, ap_sig_cseq_ST_pp1_stg20_fsm_30, ap_sig_cseq_ST_pp1_stg24_fsm_34, ap_sig_cseq_ST_pp1_stg28_fsm_38, ap_sig_cseq_ST_pp1_stg0_fsm_10, ap_sig_cseq_ST_pp1_stg9_fsm_19, ap_sig_cseq_ST_pp1_stg13_fsm_23, ap_sig_cseq_ST_pp1_stg17_fsm_27, ap_sig_cseq_ST_pp1_stg21_fsm_31, ap_sig_cseq_ST_pp1_stg25_fsm_35, ap_sig_cseq_ST_pp1_stg29_fsm_39, ap_sig_cseq_ST_pp1_stg5_fsm_15, ap_sig_cseq_ST_pp1_stg10_fsm_20, ap_sig_cseq_ST_pp1_stg14_fsm_24, ap_sig_cseq_ST_pp1_stg18_fsm_28, ap_sig_cseq_ST_pp1_stg22_fsm_32, ap_sig_cseq_ST_pp1_stg26_fsm_36, ap_sig_cseq_ST_pp1_stg30_fsm_40, ap_sig_cseq_ST_pp1_stg6_fsm_16, reg_1720, reg_1740, reg_1759, reg_1765, reg_1778, reg_1797, reg_1827, reg_1839, reg_1857, reg_1863, reg_1881, reg_1893, reg_1899, reg_1905, reg_1911, reg_1917, tmp_46_3_reg_7157, tmp_46_6_reg_7242, tmp_46_8_reg_7297, tmp_46_9_reg_7317, tmp_57_s_reg_7347, tmp_46_10_reg_7362, tmp_46_11_reg_7382, tmp_57_11_reg_7402, tmp_57_12_reg_7422, tmp_46_13_reg_7427, tmp_46_14_reg_7432)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp1_it2) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_10))) then 
            grp_fu_1538_p0 <= reg_1917;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg30_fsm_40))) then 
            grp_fu_1538_p0 <= tmp_46_14_reg_7432;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg28_fsm_38))) then 
            grp_fu_1538_p0 <= reg_1911;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg26_fsm_36))) then 
            grp_fu_1538_p0 <= tmp_46_13_reg_7427;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg24_fsm_34))) then 
            grp_fu_1538_p0 <= tmp_57_12_reg_7422;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg22_fsm_32))) then 
            grp_fu_1538_p0 <= reg_1905;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg20_fsm_30))) then 
            grp_fu_1538_p0 <= tmp_57_11_reg_7402;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg18_fsm_28))) then 
            grp_fu_1538_p0 <= tmp_46_11_reg_7382;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg16_fsm_26))) then 
            grp_fu_1538_p0 <= reg_1899;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg14_fsm_24))) then 
            grp_fu_1538_p0 <= tmp_46_10_reg_7362;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg12_fsm_22))) then 
            grp_fu_1538_p0 <= tmp_57_s_reg_7347;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg11_fsm_21))) then 
            grp_fu_1538_p0 <= reg_1893;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg10_fsm_20))) then 
            grp_fu_1538_p0 <= tmp_46_9_reg_7317;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg9_fsm_19))) then 
            grp_fu_1538_p0 <= tmp_46_8_reg_7297;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg8_fsm_18))) then 
            grp_fu_1538_p0 <= reg_1881;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg7_fsm_17))) then 
            grp_fu_1538_p0 <= tmp_46_6_reg_7242;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg6_fsm_16))) then 
            grp_fu_1538_p0 <= reg_1863;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg5_fsm_15))) then 
            grp_fu_1538_p0 <= reg_1857;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg4_fsm_14))) then 
            grp_fu_1538_p0 <= tmp_46_3_reg_7157;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg3_fsm_13))) then 
            grp_fu_1538_p0 <= reg_1839;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg2_fsm_12))) then 
            grp_fu_1538_p0 <= reg_1827;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg1_fsm_11) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1))) then 
            grp_fu_1538_p0 <= reg_1765;
        elsif ((((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg31_fsm_41)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg21_fsm_31)))) then 
            grp_fu_1538_p0 <= reg_1797;
        elsif ((((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg19_fsm_29)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg29_fsm_39)))) then 
            grp_fu_1538_p0 <= reg_1759;
        elsif ((((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg27_fsm_37)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg17_fsm_27)))) then 
            grp_fu_1538_p0 <= reg_1720;
        elsif ((((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg15_fsm_25)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg25_fsm_35)))) then 
            grp_fu_1538_p0 <= reg_1778;
        elsif ((((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg23_fsm_33)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg13_fsm_23)))) then 
            grp_fu_1538_p0 <= reg_1740;
        else 
            grp_fu_1538_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    -- grp_fu_1538_p1 assign process. --
    grp_fu_1538_p1_assign_proc : process(ap_sig_cseq_ST_pp1_stg1_fsm_11, ap_reg_ppiten_pp1_it0, ap_reg_ppiten_pp1_it1, ap_reg_ppiten_pp1_it2, ap_sig_cseq_ST_pp1_stg2_fsm_12, ap_sig_cseq_ST_pp1_stg3_fsm_13, ap_sig_cseq_ST_pp1_stg4_fsm_14, ap_sig_cseq_ST_pp1_stg7_fsm_17, ap_sig_cseq_ST_pp1_stg11_fsm_21, ap_sig_cseq_ST_pp1_stg15_fsm_25, ap_sig_cseq_ST_pp1_stg19_fsm_29, ap_sig_cseq_ST_pp1_stg23_fsm_33, ap_sig_cseq_ST_pp1_stg27_fsm_37, ap_sig_cseq_ST_pp1_stg31_fsm_41, ap_sig_cseq_ST_pp1_stg8_fsm_18, ap_sig_cseq_ST_pp1_stg12_fsm_22, ap_sig_cseq_ST_pp1_stg16_fsm_26, ap_sig_cseq_ST_pp1_stg20_fsm_30, ap_sig_cseq_ST_pp1_stg24_fsm_34, ap_sig_cseq_ST_pp1_stg28_fsm_38, ap_sig_cseq_ST_pp1_stg0_fsm_10, ap_sig_cseq_ST_pp1_stg9_fsm_19, ap_sig_cseq_ST_pp1_stg13_fsm_23, ap_sig_cseq_ST_pp1_stg17_fsm_27, ap_sig_cseq_ST_pp1_stg21_fsm_31, ap_sig_cseq_ST_pp1_stg25_fsm_35, ap_sig_cseq_ST_pp1_stg29_fsm_39, ap_sig_cseq_ST_pp1_stg5_fsm_15, ap_sig_cseq_ST_pp1_stg10_fsm_20, ap_sig_cseq_ST_pp1_stg14_fsm_24, ap_sig_cseq_ST_pp1_stg18_fsm_28, ap_sig_cseq_ST_pp1_stg22_fsm_32, ap_sig_cseq_ST_pp1_stg26_fsm_36, ap_sig_cseq_ST_pp1_stg30_fsm_40, ap_sig_cseq_ST_pp1_stg6_fsm_16, reg_1720, reg_1727, reg_1733, reg_1746, reg_1752, reg_1765, reg_1778, reg_1785, reg_1790, reg_1803, reg_1815, tmp_49_9_reg_7447, tmp_49_s_reg_7462, tmp_60_s_reg_7467, tmp_49_10_reg_7472, tmp_60_10_reg_7482, tmp_49_11_reg_7487, tmp_60_11_reg_7492, tmp_49_12_reg_7502, tmp_60_12_reg_7507, tmp_49_13_reg_7512, tmp_60_13_reg_7522, tmp_49_14_reg_7527, tmp_60_14_reg_7532)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp1_it2) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_10))) then 
            grp_fu_1538_p1 <= tmp_60_14_reg_7532;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg30_fsm_40))) then 
            grp_fu_1538_p1 <= tmp_49_14_reg_7527;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg28_fsm_38))) then 
            grp_fu_1538_p1 <= tmp_60_13_reg_7522;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg26_fsm_36))) then 
            grp_fu_1538_p1 <= tmp_49_13_reg_7512;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg24_fsm_34))) then 
            grp_fu_1538_p1 <= tmp_60_12_reg_7507;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg22_fsm_32))) then 
            grp_fu_1538_p1 <= tmp_49_12_reg_7502;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg20_fsm_30))) then 
            grp_fu_1538_p1 <= tmp_60_11_reg_7492;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg18_fsm_28))) then 
            grp_fu_1538_p1 <= tmp_49_11_reg_7487;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg16_fsm_26))) then 
            grp_fu_1538_p1 <= tmp_60_10_reg_7482;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg14_fsm_24))) then 
            grp_fu_1538_p1 <= tmp_49_10_reg_7472;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg12_fsm_22))) then 
            grp_fu_1538_p1 <= tmp_60_s_reg_7467;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg11_fsm_21))) then 
            grp_fu_1538_p1 <= tmp_49_s_reg_7462;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg10_fsm_20))) then 
            grp_fu_1538_p1 <= tmp_49_9_reg_7447;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg9_fsm_19))) then 
            grp_fu_1538_p1 <= reg_1765;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg8_fsm_18))) then 
            grp_fu_1538_p1 <= reg_1733;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg7_fsm_17))) then 
            grp_fu_1538_p1 <= reg_1720;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg6_fsm_16))) then 
            grp_fu_1538_p1 <= reg_1727;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg5_fsm_15))) then 
            grp_fu_1538_p1 <= reg_1790;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg4_fsm_14))) then 
            grp_fu_1538_p1 <= reg_1778;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg3_fsm_13))) then 
            grp_fu_1538_p1 <= reg_1803;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg2_fsm_12))) then 
            grp_fu_1538_p1 <= reg_1752;
        elsif ((((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg23_fsm_33)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg17_fsm_27)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg29_fsm_39)))) then 
            grp_fu_1538_p1 <= reg_1815;
        elsif ((((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg15_fsm_25)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg27_fsm_37)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg21_fsm_31)) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg1_fsm_11) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1)))) then 
            grp_fu_1538_p1 <= reg_1785;
        elsif ((((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg19_fsm_29)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg31_fsm_41)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg13_fsm_23)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg25_fsm_35)))) then 
            grp_fu_1538_p1 <= reg_1746;
        else 
            grp_fu_1538_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_fu_1542_ce <= ap_const_logic_1;

    -- grp_fu_1542_p0 assign process. --
    grp_fu_1542_p0_assign_proc : process(ap_sig_cseq_ST_pp1_stg1_fsm_11, ap_reg_ppiten_pp1_it0, ap_reg_ppiten_pp1_it1, ap_sig_cseq_ST_pp1_stg2_fsm_12, ap_sig_cseq_ST_pp1_stg3_fsm_13, ap_sig_cseq_ST_pp1_stg4_fsm_14, reg_1654, ap_sig_cseq_ST_pp1_stg7_fsm_17, ap_sig_cseq_ST_pp1_stg11_fsm_21, ap_sig_cseq_ST_pp1_stg15_fsm_25, ap_sig_cseq_ST_pp1_stg19_fsm_29, ap_sig_cseq_ST_pp1_stg23_fsm_33, ap_sig_cseq_ST_pp1_stg27_fsm_37, ap_sig_cseq_ST_pp1_stg31_fsm_41, reg_1669, ap_sig_cseq_ST_pp1_stg8_fsm_18, ap_sig_cseq_ST_pp1_stg12_fsm_22, ap_sig_cseq_ST_pp1_stg16_fsm_26, ap_sig_cseq_ST_pp1_stg20_fsm_30, ap_sig_cseq_ST_pp1_stg24_fsm_34, ap_sig_cseq_ST_pp1_stg28_fsm_38, ap_sig_cseq_ST_pp1_stg0_fsm_10, reg_1684, ap_sig_cseq_ST_pp1_stg9_fsm_19, ap_sig_cseq_ST_pp1_stg13_fsm_23, ap_sig_cseq_ST_pp1_stg17_fsm_27, ap_sig_cseq_ST_pp1_stg21_fsm_31, ap_sig_cseq_ST_pp1_stg25_fsm_35, ap_sig_cseq_ST_pp1_stg29_fsm_39, ap_sig_cseq_ST_pp1_stg5_fsm_15, reg_1699, ap_sig_cseq_ST_pp1_stg10_fsm_20, ap_sig_cseq_ST_pp1_stg14_fsm_24, ap_sig_cseq_ST_pp1_stg18_fsm_28, ap_sig_cseq_ST_pp1_stg22_fsm_32, ap_sig_cseq_ST_pp1_stg26_fsm_36, ap_sig_cseq_ST_pp1_stg30_fsm_40, ap_sig_cseq_ST_pp1_stg6_fsm_16)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg11_fsm_21)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg15_fsm_25)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg19_fsm_29)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg23_fsm_33)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg27_fsm_37)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg31_fsm_41)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg3_fsm_13)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg7_fsm_17)))) then 
            grp_fu_1542_p0 <= reg_1699;
        elsif ((((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg10_fsm_20)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg14_fsm_24)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg18_fsm_28)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg22_fsm_32)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg26_fsm_36)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg30_fsm_40)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg2_fsm_12)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg6_fsm_16)))) then 
            grp_fu_1542_p0 <= reg_1684;
        elsif ((((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg9_fsm_19)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg13_fsm_23)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg17_fsm_27)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg21_fsm_31)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg25_fsm_35)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg29_fsm_39)) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg1_fsm_11) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg5_fsm_15)))) then 
            grp_fu_1542_p0 <= reg_1669;
        elsif ((((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg8_fsm_18)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg12_fsm_22)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg16_fsm_26)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg20_fsm_30)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg24_fsm_34)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg28_fsm_38)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_10)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg4_fsm_14)))) then 
            grp_fu_1542_p0 <= reg_1654;
        else 
            grp_fu_1542_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    -- grp_fu_1542_p1 assign process. --
    grp_fu_1542_p1_assign_proc : process(ap_sig_cseq_ST_pp1_stg1_fsm_11, ap_reg_ppiten_pp1_it0, ap_reg_ppiten_pp1_it1, ap_sig_cseq_ST_pp1_stg2_fsm_12, ap_sig_cseq_ST_pp1_stg3_fsm_13, ap_sig_cseq_ST_pp1_stg4_fsm_14, ap_sig_cseq_ST_pp1_stg7_fsm_17, ap_sig_cseq_ST_pp1_stg11_fsm_21, ap_sig_cseq_ST_pp1_stg15_fsm_25, ap_sig_cseq_ST_pp1_stg19_fsm_29, ap_sig_cseq_ST_pp1_stg23_fsm_33, ap_sig_cseq_ST_pp1_stg27_fsm_37, ap_sig_cseq_ST_pp1_stg31_fsm_41, ap_sig_cseq_ST_pp1_stg8_fsm_18, ap_sig_cseq_ST_pp1_stg12_fsm_22, ap_sig_cseq_ST_pp1_stg16_fsm_26, ap_sig_cseq_ST_pp1_stg20_fsm_30, ap_sig_cseq_ST_pp1_stg24_fsm_34, ap_sig_cseq_ST_pp1_stg28_fsm_38, ap_sig_cseq_ST_pp1_stg0_fsm_10, ap_sig_cseq_ST_pp1_stg9_fsm_19, ap_sig_cseq_ST_pp1_stg13_fsm_23, ap_sig_cseq_ST_pp1_stg17_fsm_27, ap_sig_cseq_ST_pp1_stg21_fsm_31, ap_sig_cseq_ST_pp1_stg25_fsm_35, ap_sig_cseq_ST_pp1_stg29_fsm_39, ap_sig_cseq_ST_pp1_stg5_fsm_15, ap_sig_cseq_ST_pp1_stg10_fsm_20, ap_sig_cseq_ST_pp1_stg14_fsm_24, ap_sig_cseq_ST_pp1_stg18_fsm_28, ap_sig_cseq_ST_pp1_stg22_fsm_32, ap_sig_cseq_ST_pp1_stg26_fsm_36, ap_sig_cseq_ST_pp1_stg30_fsm_40, ap_sig_cseq_ST_pp1_stg6_fsm_16)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg31_fsm_41)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg3_fsm_13)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_10)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg4_fsm_14)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg29_fsm_39)) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg1_fsm_11) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg5_fsm_15)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg30_fsm_40)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg2_fsm_12)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg6_fsm_16)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg7_fsm_17)))) then 
            grp_fu_1542_p1 <= ap_const_lv32_3F333333;
        elsif ((((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg11_fsm_21)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg15_fsm_25)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg19_fsm_29)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg23_fsm_33)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg27_fsm_37)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg9_fsm_19)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg13_fsm_23)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg17_fsm_27)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg21_fsm_31)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg25_fsm_35)))) then 
            grp_fu_1542_p1 <= ap_const_lv32_3E4CCCCD;
        elsif ((((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg8_fsm_18)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg12_fsm_22)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg16_fsm_26)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg20_fsm_30)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg24_fsm_34)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg28_fsm_38)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg10_fsm_20)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg14_fsm_24)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg18_fsm_28)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg22_fsm_32)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg26_fsm_36)))) then 
            grp_fu_1542_p1 <= ap_const_lv32_3DCCCCCD;
        else 
            grp_fu_1542_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_fu_1547_ce <= ap_const_logic_1;

    -- grp_fu_1547_p0 assign process. --
    grp_fu_1547_p0_assign_proc : process(ap_sig_cseq_ST_pp1_stg1_fsm_11, ap_reg_ppiten_pp1_it0, ap_reg_ppiten_pp1_it1, ap_sig_cseq_ST_pp1_stg2_fsm_12, ap_sig_cseq_ST_pp1_stg3_fsm_13, ap_sig_cseq_ST_pp1_stg4_fsm_14, ap_sig_cseq_ST_pp1_stg7_fsm_17, ap_sig_cseq_ST_pp1_stg11_fsm_21, ap_sig_cseq_ST_pp1_stg15_fsm_25, ap_sig_cseq_ST_pp1_stg19_fsm_29, ap_sig_cseq_ST_pp1_stg23_fsm_33, ap_sig_cseq_ST_pp1_stg27_fsm_37, ap_sig_cseq_ST_pp1_stg31_fsm_41, reg_1659, ap_sig_cseq_ST_pp1_stg8_fsm_18, ap_sig_cseq_ST_pp1_stg12_fsm_22, ap_sig_cseq_ST_pp1_stg16_fsm_26, ap_sig_cseq_ST_pp1_stg20_fsm_30, ap_sig_cseq_ST_pp1_stg24_fsm_34, ap_sig_cseq_ST_pp1_stg28_fsm_38, ap_sig_cseq_ST_pp1_stg0_fsm_10, reg_1674, ap_sig_cseq_ST_pp1_stg9_fsm_19, ap_sig_cseq_ST_pp1_stg13_fsm_23, ap_sig_cseq_ST_pp1_stg17_fsm_27, ap_sig_cseq_ST_pp1_stg21_fsm_31, ap_sig_cseq_ST_pp1_stg25_fsm_35, ap_sig_cseq_ST_pp1_stg29_fsm_39, ap_sig_cseq_ST_pp1_stg5_fsm_15, reg_1689, ap_sig_cseq_ST_pp1_stg10_fsm_20, ap_sig_cseq_ST_pp1_stg14_fsm_24, ap_sig_cseq_ST_pp1_stg18_fsm_28, ap_sig_cseq_ST_pp1_stg22_fsm_32, ap_sig_cseq_ST_pp1_stg26_fsm_36, ap_sig_cseq_ST_pp1_stg30_fsm_40, ap_sig_cseq_ST_pp1_stg6_fsm_16, reg_1704)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg11_fsm_21)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg15_fsm_25)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg19_fsm_29)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg23_fsm_33)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg27_fsm_37)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg31_fsm_41)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg3_fsm_13)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg7_fsm_17)))) then 
            grp_fu_1547_p0 <= reg_1704;
        elsif ((((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg10_fsm_20)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg14_fsm_24)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg18_fsm_28)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg22_fsm_32)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg26_fsm_36)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg30_fsm_40)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg2_fsm_12)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg6_fsm_16)))) then 
            grp_fu_1547_p0 <= reg_1689;
        elsif ((((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg9_fsm_19)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg13_fsm_23)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg17_fsm_27)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg21_fsm_31)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg25_fsm_35)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg29_fsm_39)) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg1_fsm_11) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg5_fsm_15)))) then 
            grp_fu_1547_p0 <= reg_1674;
        elsif ((((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg8_fsm_18)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg12_fsm_22)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg16_fsm_26)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg20_fsm_30)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg24_fsm_34)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg28_fsm_38)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_10)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg4_fsm_14)))) then 
            grp_fu_1547_p0 <= reg_1659;
        else 
            grp_fu_1547_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    -- grp_fu_1547_p1 assign process. --
    grp_fu_1547_p1_assign_proc : process(ap_sig_cseq_ST_pp1_stg1_fsm_11, ap_reg_ppiten_pp1_it0, ap_reg_ppiten_pp1_it1, ap_sig_cseq_ST_pp1_stg2_fsm_12, ap_sig_cseq_ST_pp1_stg3_fsm_13, ap_sig_cseq_ST_pp1_stg4_fsm_14, ap_sig_cseq_ST_pp1_stg7_fsm_17, ap_sig_cseq_ST_pp1_stg11_fsm_21, ap_sig_cseq_ST_pp1_stg15_fsm_25, ap_sig_cseq_ST_pp1_stg19_fsm_29, ap_sig_cseq_ST_pp1_stg23_fsm_33, ap_sig_cseq_ST_pp1_stg27_fsm_37, ap_sig_cseq_ST_pp1_stg31_fsm_41, ap_sig_cseq_ST_pp1_stg8_fsm_18, ap_sig_cseq_ST_pp1_stg12_fsm_22, ap_sig_cseq_ST_pp1_stg16_fsm_26, ap_sig_cseq_ST_pp1_stg20_fsm_30, ap_sig_cseq_ST_pp1_stg24_fsm_34, ap_sig_cseq_ST_pp1_stg28_fsm_38, ap_sig_cseq_ST_pp1_stg0_fsm_10, ap_sig_cseq_ST_pp1_stg9_fsm_19, ap_sig_cseq_ST_pp1_stg13_fsm_23, ap_sig_cseq_ST_pp1_stg17_fsm_27, ap_sig_cseq_ST_pp1_stg21_fsm_31, ap_sig_cseq_ST_pp1_stg25_fsm_35, ap_sig_cseq_ST_pp1_stg29_fsm_39, ap_sig_cseq_ST_pp1_stg5_fsm_15, ap_sig_cseq_ST_pp1_stg10_fsm_20, ap_sig_cseq_ST_pp1_stg14_fsm_24, ap_sig_cseq_ST_pp1_stg18_fsm_28, ap_sig_cseq_ST_pp1_stg22_fsm_32, ap_sig_cseq_ST_pp1_stg26_fsm_36, ap_sig_cseq_ST_pp1_stg30_fsm_40, ap_sig_cseq_ST_pp1_stg6_fsm_16)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg31_fsm_41)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg3_fsm_13)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_10)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg4_fsm_14)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg29_fsm_39)) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg1_fsm_11) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg5_fsm_15)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg30_fsm_40)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg2_fsm_12)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg6_fsm_16)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg7_fsm_17)))) then 
            grp_fu_1547_p1 <= ap_const_lv32_3F333333;
        elsif ((((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg11_fsm_21)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg15_fsm_25)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg19_fsm_29)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg23_fsm_33)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg27_fsm_37)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg9_fsm_19)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg13_fsm_23)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg17_fsm_27)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg21_fsm_31)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg25_fsm_35)))) then 
            grp_fu_1547_p1 <= ap_const_lv32_3DCCCCCD;
        elsif ((((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg8_fsm_18)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg12_fsm_22)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg16_fsm_26)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg20_fsm_30)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg24_fsm_34)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg28_fsm_38)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg10_fsm_20)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg14_fsm_24)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg18_fsm_28)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg22_fsm_32)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg26_fsm_36)))) then 
            grp_fu_1547_p1 <= ap_const_lv32_3E4CCCCD;
        else 
            grp_fu_1547_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_fu_1552_ce <= ap_const_logic_1;

    -- grp_fu_1552_p0 assign process. --
    grp_fu_1552_p0_assign_proc : process(ap_sig_cseq_ST_pp1_stg1_fsm_11, ap_reg_ppiten_pp1_it0, ap_reg_ppiten_pp1_it1, ap_sig_cseq_ST_pp1_stg2_fsm_12, ap_sig_cseq_ST_pp1_stg3_fsm_13, ap_sig_cseq_ST_pp1_stg4_fsm_14, ap_sig_cseq_ST_pp1_stg7_fsm_17, ap_sig_cseq_ST_pp1_stg11_fsm_21, ap_sig_cseq_ST_pp1_stg15_fsm_25, ap_sig_cseq_ST_pp1_stg19_fsm_29, ap_sig_cseq_ST_pp1_stg23_fsm_33, ap_sig_cseq_ST_pp1_stg27_fsm_37, ap_sig_cseq_ST_pp1_stg31_fsm_41, reg_1664, ap_sig_cseq_ST_pp1_stg8_fsm_18, ap_sig_cseq_ST_pp1_stg12_fsm_22, ap_sig_cseq_ST_pp1_stg16_fsm_26, ap_sig_cseq_ST_pp1_stg20_fsm_30, ap_sig_cseq_ST_pp1_stg24_fsm_34, ap_sig_cseq_ST_pp1_stg28_fsm_38, ap_sig_cseq_ST_pp1_stg0_fsm_10, reg_1679, ap_sig_cseq_ST_pp1_stg9_fsm_19, ap_sig_cseq_ST_pp1_stg13_fsm_23, ap_sig_cseq_ST_pp1_stg17_fsm_27, ap_sig_cseq_ST_pp1_stg21_fsm_31, ap_sig_cseq_ST_pp1_stg25_fsm_35, ap_sig_cseq_ST_pp1_stg29_fsm_39, ap_sig_cseq_ST_pp1_stg5_fsm_15, reg_1694, ap_sig_cseq_ST_pp1_stg10_fsm_20, ap_sig_cseq_ST_pp1_stg14_fsm_24, ap_sig_cseq_ST_pp1_stg18_fsm_28, ap_sig_cseq_ST_pp1_stg22_fsm_32, ap_sig_cseq_ST_pp1_stg26_fsm_36, ap_sig_cseq_ST_pp1_stg30_fsm_40, ap_sig_cseq_ST_pp1_stg6_fsm_16, reg_1709)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg11_fsm_21)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg15_fsm_25)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg19_fsm_29)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg23_fsm_33)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg27_fsm_37)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg31_fsm_41)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg3_fsm_13)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg7_fsm_17)))) then 
            grp_fu_1552_p0 <= reg_1709;
        elsif ((((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg10_fsm_20)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg14_fsm_24)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg18_fsm_28)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg22_fsm_32)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg26_fsm_36)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg30_fsm_40)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg2_fsm_12)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg6_fsm_16)))) then 
            grp_fu_1552_p0 <= reg_1694;
        elsif ((((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg9_fsm_19)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg13_fsm_23)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg17_fsm_27)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg21_fsm_31)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg25_fsm_35)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg29_fsm_39)) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg1_fsm_11) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg5_fsm_15)))) then 
            grp_fu_1552_p0 <= reg_1679;
        elsif ((((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg8_fsm_18)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg12_fsm_22)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg16_fsm_26)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg20_fsm_30)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg24_fsm_34)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg28_fsm_38)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_10)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg4_fsm_14)))) then 
            grp_fu_1552_p0 <= reg_1664;
        else 
            grp_fu_1552_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    -- grp_fu_1552_p1 assign process. --
    grp_fu_1552_p1_assign_proc : process(ap_sig_cseq_ST_pp1_stg1_fsm_11, ap_reg_ppiten_pp1_it0, ap_reg_ppiten_pp1_it1, ap_sig_cseq_ST_pp1_stg2_fsm_12, ap_sig_cseq_ST_pp1_stg3_fsm_13, ap_sig_cseq_ST_pp1_stg4_fsm_14, ap_sig_cseq_ST_pp1_stg7_fsm_17, ap_sig_cseq_ST_pp1_stg11_fsm_21, ap_sig_cseq_ST_pp1_stg15_fsm_25, ap_sig_cseq_ST_pp1_stg19_fsm_29, ap_sig_cseq_ST_pp1_stg23_fsm_33, ap_sig_cseq_ST_pp1_stg27_fsm_37, ap_sig_cseq_ST_pp1_stg31_fsm_41, ap_sig_cseq_ST_pp1_stg8_fsm_18, ap_sig_cseq_ST_pp1_stg12_fsm_22, ap_sig_cseq_ST_pp1_stg16_fsm_26, ap_sig_cseq_ST_pp1_stg20_fsm_30, ap_sig_cseq_ST_pp1_stg24_fsm_34, ap_sig_cseq_ST_pp1_stg28_fsm_38, ap_sig_cseq_ST_pp1_stg0_fsm_10, ap_sig_cseq_ST_pp1_stg9_fsm_19, ap_sig_cseq_ST_pp1_stg13_fsm_23, ap_sig_cseq_ST_pp1_stg17_fsm_27, ap_sig_cseq_ST_pp1_stg21_fsm_31, ap_sig_cseq_ST_pp1_stg25_fsm_35, ap_sig_cseq_ST_pp1_stg29_fsm_39, ap_sig_cseq_ST_pp1_stg5_fsm_15, ap_sig_cseq_ST_pp1_stg10_fsm_20, ap_sig_cseq_ST_pp1_stg14_fsm_24, ap_sig_cseq_ST_pp1_stg18_fsm_28, ap_sig_cseq_ST_pp1_stg22_fsm_32, ap_sig_cseq_ST_pp1_stg26_fsm_36, ap_sig_cseq_ST_pp1_stg30_fsm_40, ap_sig_cseq_ST_pp1_stg6_fsm_16)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg31_fsm_41)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg3_fsm_13)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_10)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg4_fsm_14)) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg1_fsm_11) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg5_fsm_15)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg30_fsm_40)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg2_fsm_12)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg6_fsm_16)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg7_fsm_17)))) then 
            grp_fu_1552_p1 <= ap_const_lv32_3F333333;
        elsif ((((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg11_fsm_21)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg15_fsm_25)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg19_fsm_29)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg23_fsm_33)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg27_fsm_37)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg9_fsm_19)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg13_fsm_23)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg17_fsm_27)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg21_fsm_31)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg25_fsm_35)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg29_fsm_39)))) then 
            grp_fu_1552_p1 <= ap_const_lv32_3E4CCCCD;
        elsif ((((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg8_fsm_18)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg12_fsm_22)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg16_fsm_26)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg20_fsm_30)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg24_fsm_34)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg28_fsm_38)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg10_fsm_20)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg14_fsm_24)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg18_fsm_28)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg22_fsm_32)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg26_fsm_36)))) then 
            grp_fu_1552_p1 <= ap_const_lv32_3DCCCCCD;
        else 
            grp_fu_1552_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_fu_1563_ce <= ap_const_logic_1;

    -- grp_fu_1563_p0 assign process. --
    grp_fu_1563_p0_assign_proc : process(ap_sig_cseq_ST_pp1_stg1_fsm_11, ap_reg_ppiten_pp1_it0, ap_reg_ppiten_pp1_it1, ap_sig_cseq_ST_pp1_stg2_fsm_12, ap_sig_cseq_ST_pp1_stg3_fsm_13, ap_sig_cseq_ST_pp1_stg4_fsm_14, ap_sig_cseq_ST_pp1_stg7_fsm_17, ap_sig_cseq_ST_pp1_stg11_fsm_21, ap_sig_cseq_ST_pp1_stg15_fsm_25, ap_sig_cseq_ST_pp1_stg19_fsm_29, ap_sig_cseq_ST_pp1_stg23_fsm_33, ap_sig_cseq_ST_pp1_stg27_fsm_37, ap_sig_cseq_ST_pp1_stg31_fsm_41, ap_sig_cseq_ST_pp1_stg8_fsm_18, ap_sig_cseq_ST_pp1_stg12_fsm_22, ap_sig_cseq_ST_pp1_stg16_fsm_26, ap_sig_cseq_ST_pp1_stg20_fsm_30, ap_sig_cseq_ST_pp1_stg24_fsm_34, ap_sig_cseq_ST_pp1_stg28_fsm_38, ap_sig_cseq_ST_pp1_stg0_fsm_10, ap_sig_cseq_ST_pp1_stg9_fsm_19, ap_sig_cseq_ST_pp1_stg13_fsm_23, ap_sig_cseq_ST_pp1_stg17_fsm_27, ap_sig_cseq_ST_pp1_stg21_fsm_31, ap_sig_cseq_ST_pp1_stg25_fsm_35, ap_sig_cseq_ST_pp1_stg29_fsm_39, ap_sig_cseq_ST_pp1_stg5_fsm_15, ap_sig_cseq_ST_pp1_stg10_fsm_20, ap_sig_cseq_ST_pp1_stg14_fsm_24, ap_sig_cseq_ST_pp1_stg18_fsm_28, ap_sig_cseq_ST_pp1_stg22_fsm_32, ap_sig_cseq_ST_pp1_stg26_fsm_36, ap_sig_cseq_ST_pp1_stg30_fsm_40, ap_sig_cseq_ST_pp1_stg6_fsm_16, tmp_19_fu_2101_p1, tmp_33_fu_2187_p1, tmp_51_1_fu_2272_p1, tmp_43_2_fu_2358_p1, tmp_40_3_fu_2444_p1, tmp_54_3_fu_2530_p1, tmp_51_4_fu_2615_p1, tmp_43_5_fu_2659_p1, tmp_40_6_fu_2695_p1, tmp_54_6_fu_2731_p1, tmp_51_7_fu_2766_p1, tmp_43_8_fu_2802_p1, tmp_40_9_fu_2837_p1, tmp_54_9_fu_2884_p1, tmp_51_s_fu_2927_p1, tmp_43_10_fu_2962_p1, tmp_40_11_fu_2989_p1, tmp_54_11_fu_3016_p1, tmp_51_12_fu_3043_p1, tmp_43_13_fu_3070_p1, tmp_40_14_fu_3097_p1, tmp_26_fu_3109_p1, tmp_47_1_fu_3136_p1, tmp_58_2_fu_3162_p1, tmp_47_4_fu_3188_p1, tmp_58_5_fu_3214_p1, tmp_47_7_fu_3240_p1, tmp_58_8_fu_3266_p1, tmp_47_s_fu_3292_p1, tmp_58_10_fu_3318_p1, tmp_47_12_fu_3344_p1, tmp_58_13_fu_3356_p1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg1_fsm_11) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1))) then 
            grp_fu_1563_p0 <= tmp_58_13_fu_3356_p1;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_10))) then 
            grp_fu_1563_p0 <= tmp_47_12_fu_3344_p1;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg31_fsm_41))) then 
            grp_fu_1563_p0 <= tmp_58_10_fu_3318_p1;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg30_fsm_40))) then 
            grp_fu_1563_p0 <= tmp_47_s_fu_3292_p1;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg29_fsm_39))) then 
            grp_fu_1563_p0 <= tmp_58_8_fu_3266_p1;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg28_fsm_38))) then 
            grp_fu_1563_p0 <= tmp_47_7_fu_3240_p1;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg27_fsm_37))) then 
            grp_fu_1563_p0 <= tmp_58_5_fu_3214_p1;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg26_fsm_36))) then 
            grp_fu_1563_p0 <= tmp_47_4_fu_3188_p1;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg25_fsm_35))) then 
            grp_fu_1563_p0 <= tmp_58_2_fu_3162_p1;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg24_fsm_34))) then 
            grp_fu_1563_p0 <= tmp_47_1_fu_3136_p1;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg23_fsm_33))) then 
            grp_fu_1563_p0 <= tmp_26_fu_3109_p1;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg22_fsm_32))) then 
            grp_fu_1563_p0 <= tmp_40_14_fu_3097_p1;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg21_fsm_31))) then 
            grp_fu_1563_p0 <= tmp_43_13_fu_3070_p1;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg20_fsm_30))) then 
            grp_fu_1563_p0 <= tmp_51_12_fu_3043_p1;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg19_fsm_29))) then 
            grp_fu_1563_p0 <= tmp_54_11_fu_3016_p1;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg18_fsm_28))) then 
            grp_fu_1563_p0 <= tmp_40_11_fu_2989_p1;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg17_fsm_27))) then 
            grp_fu_1563_p0 <= tmp_43_10_fu_2962_p1;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg16_fsm_26))) then 
            grp_fu_1563_p0 <= tmp_51_s_fu_2927_p1;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg15_fsm_25))) then 
            grp_fu_1563_p0 <= tmp_54_9_fu_2884_p1;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg14_fsm_24))) then 
            grp_fu_1563_p0 <= tmp_40_9_fu_2837_p1;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg13_fsm_23))) then 
            grp_fu_1563_p0 <= tmp_43_8_fu_2802_p1;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg12_fsm_22))) then 
            grp_fu_1563_p0 <= tmp_51_7_fu_2766_p1;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg11_fsm_21))) then 
            grp_fu_1563_p0 <= tmp_54_6_fu_2731_p1;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg10_fsm_20))) then 
            grp_fu_1563_p0 <= tmp_40_6_fu_2695_p1;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg9_fsm_19))) then 
            grp_fu_1563_p0 <= tmp_43_5_fu_2659_p1;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg8_fsm_18))) then 
            grp_fu_1563_p0 <= tmp_51_4_fu_2615_p1;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg7_fsm_17))) then 
            grp_fu_1563_p0 <= tmp_54_3_fu_2530_p1;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg6_fsm_16))) then 
            grp_fu_1563_p0 <= tmp_40_3_fu_2444_p1;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg5_fsm_15))) then 
            grp_fu_1563_p0 <= tmp_43_2_fu_2358_p1;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg4_fsm_14))) then 
            grp_fu_1563_p0 <= tmp_51_1_fu_2272_p1;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg3_fsm_13))) then 
            grp_fu_1563_p0 <= tmp_33_fu_2187_p1;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg2_fsm_12))) then 
            grp_fu_1563_p0 <= tmp_19_fu_2101_p1;
        else 
            grp_fu_1563_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_fu_1566_ce <= ap_const_logic_1;

    -- grp_fu_1566_p0 assign process. --
    grp_fu_1566_p0_assign_proc : process(ap_sig_cseq_ST_pp1_stg1_fsm_11, ap_reg_ppiten_pp1_it0, ap_reg_ppiten_pp1_it1, ap_sig_cseq_ST_pp1_stg2_fsm_12, ap_sig_cseq_ST_pp1_stg3_fsm_13, ap_sig_cseq_ST_pp1_stg4_fsm_14, ap_sig_cseq_ST_pp1_stg7_fsm_17, ap_sig_cseq_ST_pp1_stg11_fsm_21, ap_sig_cseq_ST_pp1_stg15_fsm_25, ap_sig_cseq_ST_pp1_stg19_fsm_29, ap_sig_cseq_ST_pp1_stg23_fsm_33, ap_sig_cseq_ST_pp1_stg27_fsm_37, ap_sig_cseq_ST_pp1_stg31_fsm_41, ap_sig_cseq_ST_pp1_stg8_fsm_18, ap_sig_cseq_ST_pp1_stg12_fsm_22, ap_sig_cseq_ST_pp1_stg16_fsm_26, ap_sig_cseq_ST_pp1_stg20_fsm_30, ap_sig_cseq_ST_pp1_stg24_fsm_34, ap_sig_cseq_ST_pp1_stg28_fsm_38, ap_sig_cseq_ST_pp1_stg0_fsm_10, ap_sig_cseq_ST_pp1_stg9_fsm_19, ap_sig_cseq_ST_pp1_stg13_fsm_23, ap_sig_cseq_ST_pp1_stg17_fsm_27, ap_sig_cseq_ST_pp1_stg21_fsm_31, ap_sig_cseq_ST_pp1_stg25_fsm_35, ap_sig_cseq_ST_pp1_stg29_fsm_39, ap_sig_cseq_ST_pp1_stg5_fsm_15, ap_sig_cseq_ST_pp1_stg10_fsm_20, ap_sig_cseq_ST_pp1_stg14_fsm_24, ap_sig_cseq_ST_pp1_stg18_fsm_28, ap_sig_cseq_ST_pp1_stg22_fsm_32, ap_sig_cseq_ST_pp1_stg26_fsm_36, ap_sig_cseq_ST_pp1_stg30_fsm_40, ap_sig_cseq_ST_pp1_stg6_fsm_16, tmp_22_fu_2105_p1, tmp_40_1_fu_2191_p1, tmp_54_1_fu_2277_p1, tmp_51_2_fu_2362_p1, tmp_43_3_fu_2448_p1, tmp_40_4_fu_2534_p1, tmp_54_4_fu_2620_p1, tmp_51_5_fu_2663_p1, tmp_43_6_fu_2699_p1, tmp_40_7_fu_2735_p1, tmp_54_7_fu_2771_p1, tmp_51_8_fu_2806_p1, tmp_43_9_fu_2841_p1, tmp_40_s_fu_2888_p1, tmp_54_s_fu_2931_p1, tmp_51_10_fu_2966_p1, tmp_43_11_fu_2993_p1, tmp_40_12_fu_3020_p1, tmp_54_12_fu_3047_p1, tmp_51_13_fu_3074_p1, tmp_43_14_fu_3101_p1, tmp_37_fu_3113_p1, tmp_58_1_fu_3140_p1, tmp_47_3_fu_3166_p1, tmp_58_4_fu_3192_p1, tmp_47_6_fu_3218_p1, tmp_58_7_fu_3244_p1, tmp_47_9_fu_3270_p1, tmp_58_s_fu_3296_p1, tmp_47_11_fu_3322_p1, tmp_58_12_fu_3348_p1, tmp_47_14_fu_3360_p1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg1_fsm_11) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1))) then 
            grp_fu_1566_p0 <= tmp_47_14_fu_3360_p1;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_10))) then 
            grp_fu_1566_p0 <= tmp_58_12_fu_3348_p1;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg31_fsm_41))) then 
            grp_fu_1566_p0 <= tmp_47_11_fu_3322_p1;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg30_fsm_40))) then 
            grp_fu_1566_p0 <= tmp_58_s_fu_3296_p1;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg29_fsm_39))) then 
            grp_fu_1566_p0 <= tmp_47_9_fu_3270_p1;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg28_fsm_38))) then 
            grp_fu_1566_p0 <= tmp_58_7_fu_3244_p1;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg27_fsm_37))) then 
            grp_fu_1566_p0 <= tmp_47_6_fu_3218_p1;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg26_fsm_36))) then 
            grp_fu_1566_p0 <= tmp_58_4_fu_3192_p1;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg25_fsm_35))) then 
            grp_fu_1566_p0 <= tmp_47_3_fu_3166_p1;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg24_fsm_34))) then 
            grp_fu_1566_p0 <= tmp_58_1_fu_3140_p1;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg23_fsm_33))) then 
            grp_fu_1566_p0 <= tmp_37_fu_3113_p1;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg22_fsm_32))) then 
            grp_fu_1566_p0 <= tmp_43_14_fu_3101_p1;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg21_fsm_31))) then 
            grp_fu_1566_p0 <= tmp_51_13_fu_3074_p1;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg20_fsm_30))) then 
            grp_fu_1566_p0 <= tmp_54_12_fu_3047_p1;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg19_fsm_29))) then 
            grp_fu_1566_p0 <= tmp_40_12_fu_3020_p1;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg18_fsm_28))) then 
            grp_fu_1566_p0 <= tmp_43_11_fu_2993_p1;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg17_fsm_27))) then 
            grp_fu_1566_p0 <= tmp_51_10_fu_2966_p1;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg16_fsm_26))) then 
            grp_fu_1566_p0 <= tmp_54_s_fu_2931_p1;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg15_fsm_25))) then 
            grp_fu_1566_p0 <= tmp_40_s_fu_2888_p1;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg14_fsm_24))) then 
            grp_fu_1566_p0 <= tmp_43_9_fu_2841_p1;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg13_fsm_23))) then 
            grp_fu_1566_p0 <= tmp_51_8_fu_2806_p1;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg12_fsm_22))) then 
            grp_fu_1566_p0 <= tmp_54_7_fu_2771_p1;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg11_fsm_21))) then 
            grp_fu_1566_p0 <= tmp_40_7_fu_2735_p1;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg10_fsm_20))) then 
            grp_fu_1566_p0 <= tmp_43_6_fu_2699_p1;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg9_fsm_19))) then 
            grp_fu_1566_p0 <= tmp_51_5_fu_2663_p1;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg8_fsm_18))) then 
            grp_fu_1566_p0 <= tmp_54_4_fu_2620_p1;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg7_fsm_17))) then 
            grp_fu_1566_p0 <= tmp_40_4_fu_2534_p1;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg6_fsm_16))) then 
            grp_fu_1566_p0 <= tmp_43_3_fu_2448_p1;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg5_fsm_15))) then 
            grp_fu_1566_p0 <= tmp_51_2_fu_2362_p1;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg4_fsm_14))) then 
            grp_fu_1566_p0 <= tmp_54_1_fu_2277_p1;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg3_fsm_13))) then 
            grp_fu_1566_p0 <= tmp_40_1_fu_2191_p1;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg2_fsm_12))) then 
            grp_fu_1566_p0 <= tmp_22_fu_2105_p1;
        else 
            grp_fu_1566_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_fu_1569_ce <= ap_const_logic_1;

    -- grp_fu_1569_p0 assign process. --
    grp_fu_1569_p0_assign_proc : process(ap_sig_cseq_ST_pp1_stg1_fsm_11, ap_reg_ppiten_pp1_it0, ap_reg_ppiten_pp1_it1, ap_sig_cseq_ST_pp1_stg2_fsm_12, ap_sig_cseq_ST_pp1_stg3_fsm_13, ap_sig_cseq_ST_pp1_stg4_fsm_14, ap_sig_cseq_ST_pp1_stg7_fsm_17, ap_sig_cseq_ST_pp1_stg11_fsm_21, ap_sig_cseq_ST_pp1_stg15_fsm_25, ap_sig_cseq_ST_pp1_stg19_fsm_29, ap_sig_cseq_ST_pp1_stg23_fsm_33, ap_sig_cseq_ST_pp1_stg27_fsm_37, ap_sig_cseq_ST_pp1_stg31_fsm_41, ap_sig_cseq_ST_pp1_stg8_fsm_18, ap_sig_cseq_ST_pp1_stg12_fsm_22, ap_sig_cseq_ST_pp1_stg16_fsm_26, ap_sig_cseq_ST_pp1_stg20_fsm_30, ap_sig_cseq_ST_pp1_stg24_fsm_34, ap_sig_cseq_ST_pp1_stg28_fsm_38, ap_sig_cseq_ST_pp1_stg0_fsm_10, ap_sig_cseq_ST_pp1_stg9_fsm_19, ap_sig_cseq_ST_pp1_stg13_fsm_23, ap_sig_cseq_ST_pp1_stg17_fsm_27, ap_sig_cseq_ST_pp1_stg21_fsm_31, ap_sig_cseq_ST_pp1_stg25_fsm_35, ap_sig_cseq_ST_pp1_stg29_fsm_39, ap_sig_cseq_ST_pp1_stg5_fsm_15, ap_sig_cseq_ST_pp1_stg10_fsm_20, ap_sig_cseq_ST_pp1_stg14_fsm_24, ap_sig_cseq_ST_pp1_stg18_fsm_28, ap_sig_cseq_ST_pp1_stg22_fsm_32, ap_sig_cseq_ST_pp1_stg26_fsm_36, ap_sig_cseq_ST_pp1_stg30_fsm_40, ap_sig_cseq_ST_pp1_stg6_fsm_16, tmp_30_fu_2109_p1, tmp_43_1_fu_2195_p1, tmp_40_2_fu_2281_p1, tmp_54_2_fu_2367_p1, tmp_51_3_fu_2452_p1, tmp_43_4_fu_2538_p1, tmp_40_5_fu_2624_p1, tmp_54_5_fu_2668_p1, tmp_51_6_fu_2703_p1, tmp_43_7_fu_2739_p1, tmp_40_8_fu_2775_p1, tmp_54_8_fu_2810_p1, tmp_51_9_fu_2845_p1, tmp_43_s_fu_2892_p1, tmp_40_10_fu_2935_p1, tmp_54_10_fu_2970_p1, tmp_51_11_fu_2997_p1, tmp_43_12_fu_3024_p1, tmp_40_13_fu_3051_p1, tmp_54_13_fu_3078_p1, tmp_51_14_fu_3105_p1, tmp_54_14_fu_3132_p1, tmp_47_2_fu_3144_p1, tmp_58_3_fu_3170_p1, tmp_47_5_fu_3196_p1, tmp_58_6_fu_3222_p1, tmp_47_8_fu_3248_p1, tmp_58_9_fu_3274_p1, tmp_47_10_fu_3300_p1, tmp_58_11_fu_3326_p1, tmp_47_13_fu_3352_p1, tmp_58_14_fu_3364_p1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg1_fsm_11) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1))) then 
            grp_fu_1569_p0 <= tmp_58_14_fu_3364_p1;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_10))) then 
            grp_fu_1569_p0 <= tmp_47_13_fu_3352_p1;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg31_fsm_41))) then 
            grp_fu_1569_p0 <= tmp_58_11_fu_3326_p1;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg30_fsm_40))) then 
            grp_fu_1569_p0 <= tmp_47_10_fu_3300_p1;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg29_fsm_39))) then 
            grp_fu_1569_p0 <= tmp_58_9_fu_3274_p1;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg28_fsm_38))) then 
            grp_fu_1569_p0 <= tmp_47_8_fu_3248_p1;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg27_fsm_37))) then 
            grp_fu_1569_p0 <= tmp_58_6_fu_3222_p1;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg26_fsm_36))) then 
            grp_fu_1569_p0 <= tmp_47_5_fu_3196_p1;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg25_fsm_35))) then 
            grp_fu_1569_p0 <= tmp_58_3_fu_3170_p1;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg24_fsm_34))) then 
            grp_fu_1569_p0 <= tmp_47_2_fu_3144_p1;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg23_fsm_33))) then 
            grp_fu_1569_p0 <= tmp_54_14_fu_3132_p1;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg22_fsm_32))) then 
            grp_fu_1569_p0 <= tmp_51_14_fu_3105_p1;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg21_fsm_31))) then 
            grp_fu_1569_p0 <= tmp_54_13_fu_3078_p1;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg20_fsm_30))) then 
            grp_fu_1569_p0 <= tmp_40_13_fu_3051_p1;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg19_fsm_29))) then 
            grp_fu_1569_p0 <= tmp_43_12_fu_3024_p1;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg18_fsm_28))) then 
            grp_fu_1569_p0 <= tmp_51_11_fu_2997_p1;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg17_fsm_27))) then 
            grp_fu_1569_p0 <= tmp_54_10_fu_2970_p1;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg16_fsm_26))) then 
            grp_fu_1569_p0 <= tmp_40_10_fu_2935_p1;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg15_fsm_25))) then 
            grp_fu_1569_p0 <= tmp_43_s_fu_2892_p1;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg14_fsm_24))) then 
            grp_fu_1569_p0 <= tmp_51_9_fu_2845_p1;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg13_fsm_23))) then 
            grp_fu_1569_p0 <= tmp_54_8_fu_2810_p1;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg12_fsm_22))) then 
            grp_fu_1569_p0 <= tmp_40_8_fu_2775_p1;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg11_fsm_21))) then 
            grp_fu_1569_p0 <= tmp_43_7_fu_2739_p1;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg10_fsm_20))) then 
            grp_fu_1569_p0 <= tmp_51_6_fu_2703_p1;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg9_fsm_19))) then 
            grp_fu_1569_p0 <= tmp_54_5_fu_2668_p1;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg8_fsm_18))) then 
            grp_fu_1569_p0 <= tmp_40_5_fu_2624_p1;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg7_fsm_17))) then 
            grp_fu_1569_p0 <= tmp_43_4_fu_2538_p1;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg6_fsm_16))) then 
            grp_fu_1569_p0 <= tmp_51_3_fu_2452_p1;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg5_fsm_15))) then 
            grp_fu_1569_p0 <= tmp_54_2_fu_2367_p1;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg4_fsm_14))) then 
            grp_fu_1569_p0 <= tmp_40_2_fu_2281_p1;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg3_fsm_13))) then 
            grp_fu_1569_p0 <= tmp_43_1_fu_2195_p1;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg2_fsm_12))) then 
            grp_fu_1569_p0 <= tmp_30_fu_2109_p1;
        else 
            grp_fu_1569_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_fu_1602_p4 <= yuv_frame_q1(23 downto 16);

    -- i1_phi_fu_1498_p4 assign process. --
    i1_phi_fu_1498_p4_assign_proc : process(i1_reg_1494, ap_reg_ppiten_pp1_it1, tmp_5_reg_5878, ap_sig_cseq_ST_pp1_stg0_fsm_10, i_2_15_reg_7013)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and not((ap_const_lv1_0 = tmp_5_reg_5878)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_10))) then 
            i1_phi_fu_1498_p4 <= i_2_15_reg_7013;
        else 
            i1_phi_fu_1498_p4 <= i1_reg_1494;
        end if; 
    end process;

    i_1_10_fu_5320_p2 <= (i_reg_1506 or ap_const_lv17_16);
    i_1_11_fu_5382_p2 <= (i_reg_1506 or ap_const_lv17_18);
    i_1_12_fu_5403_p2 <= (i_reg_1506 or ap_const_lv17_1A);
    i_1_13_fu_5465_p2 <= (i_reg_1506 or ap_const_lv17_1C);
    i_1_14_fu_5486_p2 <= (i_reg_1506 or ap_const_lv17_1E);
    i_1_15_fu_5785_p2 <= std_logic_vector(unsigned(ap_const_lv17_20) + unsigned(i_reg_1506));
    i_1_1_fu_4967_p2 <= (i_reg_1506 or ap_const_lv17_4);
    i_1_2_fu_4988_p2 <= (i_reg_1506 or ap_const_lv17_6);
    i_1_3_fu_5050_p2 <= (i_reg_1506 or ap_const_lv17_8);
    i_1_4_fu_5071_p2 <= (i_reg_1506 or ap_const_lv17_A);
    i_1_5_fu_5133_p2 <= (i_reg_1506 or ap_const_lv17_C);
    i_1_6_fu_5154_p2 <= (i_reg_1506 or ap_const_lv17_E);
    i_1_7_fu_5216_p2 <= (i_reg_1506 or ap_const_lv17_10);
    i_1_8_fu_5237_p2 <= (i_reg_1506 or ap_const_lv17_12);
    i_1_9_fu_5299_p2 <= (i_reg_1506 or ap_const_lv17_14);
    i_1_s_fu_4901_p2 <= (i_phi_fu_1510_p4 or ap_const_lv17_2);
    i_2_10_fu_2423_p2 <= (i1_reg_1494 or ap_const_lv17_16);
    i_2_11_fu_2488_p2 <= (i1_reg_1494 or ap_const_lv17_18);
    i_2_12_fu_2509_p2 <= (i1_reg_1494 or ap_const_lv17_1A);
    i_2_13_fu_2573_p2 <= (i1_reg_1494 or ap_const_lv17_1C);
    i_2_14_fu_2594_p2 <= (i1_reg_1494 or ap_const_lv17_1E);
    i_2_15_fu_2878_p2 <= std_logic_vector(unsigned(ap_const_lv17_20) + unsigned(i1_reg_1494));
    i_2_1_fu_2059_p2 <= (i1_reg_1494 or ap_const_lv17_4);
    i_2_2_fu_2080_p2 <= (i1_reg_1494 or ap_const_lv17_6);
    i_2_3_fu_2145_p2 <= (i1_reg_1494 or ap_const_lv17_8);
    i_2_4_fu_2166_p2 <= (i1_reg_1494 or ap_const_lv17_A);
    i_2_5_fu_2230_p2 <= (i1_reg_1494 or ap_const_lv17_C);
    i_2_6_fu_2251_p2 <= (i1_reg_1494 or ap_const_lv17_E);
    i_2_7_fu_2316_p2 <= (i1_reg_1494 or ap_const_lv17_10);
    i_2_8_fu_2337_p2 <= (i1_reg_1494 or ap_const_lv17_12);
    i_2_9_fu_2402_p2 <= (i1_reg_1494 or ap_const_lv17_14);
    i_2_s_fu_2007_p2 <= (i1_phi_fu_1498_p4 or ap_const_lv17_2);

    -- i_phi_fu_1510_p4 assign process. --
    i_phi_fu_1510_p4_assign_proc : process(i_reg_1506, tmp_3_reg_7687, ap_sig_cseq_ST_pp2_stg0_fsm_42, ap_reg_ppiten_pp2_it1, i_1_15_reg_7956)
    begin
        if ((not((ap_const_lv1_0 = tmp_3_reg_7687)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg0_fsm_42) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it1))) then 
            i_phi_fu_1510_p4 <= i_1_15_reg_7956;
        else 
            i_phi_fu_1510_p4 <= i_reg_1506;
        end if; 
    end process;

    indvar_next9_fu_5833_p2 <= std_logic_vector(unsigned(indvar8_reg_1518) + unsigned(ap_const_lv17_1));
    indvar_next_fu_1959_p2 <= std_logic_vector(unsigned(indvar_phi_fu_1486_p4) + unsigned(ap_const_lv16_1));

    -- indvar_phi_fu_1486_p4 assign process. --
    indvar_phi_fu_1486_p4_assign_proc : process(indvar_reg_1482, ap_sig_cseq_ST_pp0_stg0_fsm_8, exitcond_reg_5864, ap_reg_ppiten_pp0_it1, indvar_next_reg_5868)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_8) and (exitcond_reg_5864 = ap_const_lv1_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))) then 
            indvar_phi_fu_1486_p4 <= indvar_next_reg_5868;
        else 
            indvar_phi_fu_1486_p4 <= indvar_reg_1482;
        end if; 
    end process;

    init_read_read_fu_222_p2 <= (0=>init, others=>'-');
    neg_i10_fu_3856_p2 <= std_logic_vector(unsigned(ap_const_lv9_0) - unsigned(x_assign_s_fu_3850_p2));
    neg_i11_fu_3904_p2 <= std_logic_vector(unsigned(ap_const_lv9_0) - unsigned(x_assign_10_fu_3898_p2));
    neg_i12_fu_3951_p2 <= std_logic_vector(unsigned(ap_const_lv9_0) - unsigned(x_assign_11_fu_3945_p2));
    neg_i13_fu_3999_p2 <= std_logic_vector(unsigned(ap_const_lv9_0) - unsigned(x_assign_12_fu_3993_p2));
    neg_i14_fu_4046_p2 <= std_logic_vector(unsigned(ap_const_lv9_0) - unsigned(x_assign_13_fu_4040_p2));
    neg_i15_fu_4094_p2 <= std_logic_vector(unsigned(ap_const_lv9_0) - unsigned(x_assign_14_fu_4088_p2));
    neg_i16_fu_4141_p2 <= std_logic_vector(unsigned(ap_const_lv9_0) - unsigned(x_assign_15_fu_4135_p2));
    neg_i17_fu_4188_p2 <= std_logic_vector(unsigned(ap_const_lv9_0) - unsigned(x_assign_16_fu_4182_p2));
    neg_i18_fu_4235_p2 <= std_logic_vector(unsigned(ap_const_lv9_0) - unsigned(x_assign_17_fu_4229_p2));
    neg_i19_fu_4282_p2 <= std_logic_vector(unsigned(ap_const_lv9_0) - unsigned(x_assign_18_fu_4276_p2));
    neg_i1_fu_3381_p2 <= std_logic_vector(unsigned(ap_const_lv9_0) - unsigned(x_assign_fu_3375_p2));
    neg_i20_fu_4329_p2 <= std_logic_vector(unsigned(ap_const_lv9_0) - unsigned(x_assign_19_fu_4323_p2));
    neg_i21_fu_4376_p2 <= std_logic_vector(unsigned(ap_const_lv9_0) - unsigned(x_assign_20_fu_4370_p2));
    neg_i22_fu_4423_p2 <= std_logic_vector(unsigned(ap_const_lv9_0) - unsigned(x_assign_21_fu_4417_p2));
    neg_i23_fu_4470_p2 <= std_logic_vector(unsigned(ap_const_lv9_0) - unsigned(x_assign_22_fu_4464_p2));
    neg_i24_fu_4517_p2 <= std_logic_vector(unsigned(ap_const_lv9_0) - unsigned(x_assign_23_fu_4511_p2));
    neg_i25_fu_4564_p2 <= std_logic_vector(unsigned(ap_const_lv9_0) - unsigned(x_assign_24_fu_4558_p2));
    neg_i26_fu_4611_p2 <= std_logic_vector(unsigned(ap_const_lv9_0) - unsigned(x_assign_25_fu_4605_p2));
    neg_i27_fu_4658_p2 <= std_logic_vector(unsigned(ap_const_lv9_0) - unsigned(x_assign_26_fu_4652_p2));
    neg_i28_fu_4705_p2 <= std_logic_vector(unsigned(ap_const_lv9_0) - unsigned(x_assign_27_fu_4699_p2));
    neg_i29_fu_4752_p2 <= std_logic_vector(unsigned(ap_const_lv9_0) - unsigned(x_assign_28_fu_4746_p2));
    neg_i2_fu_3429_p2 <= std_logic_vector(unsigned(ap_const_lv9_0) - unsigned(x_assign_1_fu_3423_p2));
    neg_i30_fu_4799_p2 <= std_logic_vector(unsigned(ap_const_lv9_0) - unsigned(x_assign_29_fu_4793_p2));
    neg_i31_fu_4846_p2 <= std_logic_vector(unsigned(ap_const_lv9_0) - unsigned(x_assign_30_fu_4840_p2));
    neg_i3_fu_3524_p2 <= std_logic_vector(unsigned(ap_const_lv9_0) - unsigned(x_assign_3_fu_3518_p2));
    neg_i4_fu_3571_p2 <= std_logic_vector(unsigned(ap_const_lv9_0) - unsigned(x_assign_4_fu_3565_p2));
    neg_i5_fu_3619_p2 <= std_logic_vector(unsigned(ap_const_lv9_0) - unsigned(x_assign_5_fu_3613_p2));
    neg_i6_fu_3666_p2 <= std_logic_vector(unsigned(ap_const_lv9_0) - unsigned(x_assign_6_fu_3660_p2));
    neg_i7_fu_3714_p2 <= std_logic_vector(unsigned(ap_const_lv9_0) - unsigned(x_assign_7_fu_3708_p2));
    neg_i8_fu_3761_p2 <= std_logic_vector(unsigned(ap_const_lv9_0) - unsigned(x_assign_8_fu_3755_p2));
    neg_i9_fu_3809_p2 <= std_logic_vector(unsigned(ap_const_lv9_0) - unsigned(x_assign_9_fu_3803_p2));
    neg_i_fu_3476_p2 <= std_logic_vector(unsigned(ap_const_lv9_0) - unsigned(x_assign_2_fu_3470_p2));
    not_tmp_1_fu_3449_p2 <= "1" when (signed(abs_i2_fu_3441_p3) > signed(ap_const_lv9_E)) else "0";
    not_tmp_65_10_fu_4443_p2 <= "1" when (signed(abs_i22_fu_4435_p3) > signed(ap_const_lv9_E)) else "0";
    not_tmp_65_11_fu_4537_p2 <= "1" when (signed(abs_i24_fu_4529_p3) > signed(ap_const_lv9_E)) else "0";
    not_tmp_65_12_fu_4631_p2 <= "1" when (signed(abs_i26_fu_4623_p3) > signed(ap_const_lv9_E)) else "0";
    not_tmp_65_13_fu_4725_p2 <= "1" when (signed(abs_i28_fu_4717_p3) > signed(ap_const_lv9_E)) else "0";
    not_tmp_65_14_fu_4819_p2 <= "1" when (signed(abs_i30_fu_4811_p3) > signed(ap_const_lv9_E)) else "0";
    not_tmp_65_1_fu_3496_p2 <= "1" when (signed(abs_i_fu_3488_p3) > signed(ap_const_lv9_E)) else "0";
    not_tmp_65_2_fu_3591_p2 <= "1" when (signed(abs_i4_fu_3583_p3) > signed(ap_const_lv9_E)) else "0";
    not_tmp_65_3_fu_3686_p2 <= "1" when (signed(abs_i6_fu_3678_p3) > signed(ap_const_lv9_E)) else "0";
    not_tmp_65_4_fu_3781_p2 <= "1" when (signed(abs_i8_fu_3773_p3) > signed(ap_const_lv9_E)) else "0";
    not_tmp_65_5_fu_3876_p2 <= "1" when (signed(abs_i10_fu_3868_p3) > signed(ap_const_lv9_E)) else "0";
    not_tmp_65_6_fu_3971_p2 <= "1" when (signed(abs_i12_fu_3963_p3) > signed(ap_const_lv9_E)) else "0";
    not_tmp_65_7_fu_4066_p2 <= "1" when (signed(abs_i14_fu_4058_p3) > signed(ap_const_lv9_E)) else "0";
    not_tmp_65_8_fu_4161_p2 <= "1" when (signed(abs_i16_fu_4153_p3) > signed(ap_const_lv9_E)) else "0";
    not_tmp_65_9_fu_4255_p2 <= "1" when (signed(abs_i18_fu_4247_p3) > signed(ap_const_lv9_E)) else "0";
    not_tmp_65_s_fu_4349_p2 <= "1" when (signed(abs_i20_fu_4341_p3) > signed(ap_const_lv9_E)) else "0";
    not_tmp_69_10_fu_4490_p2 <= "1" when (signed(abs_i23_fu_4482_p3) > signed(ap_const_lv9_E)) else "0";
    not_tmp_69_11_fu_4584_p2 <= "1" when (signed(abs_i25_fu_4576_p3) > signed(ap_const_lv9_E)) else "0";
    not_tmp_69_12_fu_4678_p2 <= "1" when (signed(abs_i27_fu_4670_p3) > signed(ap_const_lv9_E)) else "0";
    not_tmp_69_13_fu_4772_p2 <= "1" when (signed(abs_i29_fu_4764_p3) > signed(ap_const_lv9_E)) else "0";
    not_tmp_69_14_fu_4866_p2 <= "1" when (signed(abs_i31_fu_4858_p3) > signed(ap_const_lv9_E)) else "0";
    not_tmp_69_1_fu_3544_p2 <= "1" when (signed(abs_i3_fu_3536_p3) > signed(ap_const_lv9_E)) else "0";
    not_tmp_69_2_fu_3639_p2 <= "1" when (signed(abs_i5_fu_3631_p3) > signed(ap_const_lv9_E)) else "0";
    not_tmp_69_3_fu_3734_p2 <= "1" when (signed(abs_i7_fu_3726_p3) > signed(ap_const_lv9_E)) else "0";
    not_tmp_69_4_fu_3829_p2 <= "1" when (signed(abs_i9_fu_3821_p3) > signed(ap_const_lv9_E)) else "0";
    not_tmp_69_5_fu_3924_p2 <= "1" when (signed(abs_i11_fu_3916_p3) > signed(ap_const_lv9_E)) else "0";
    not_tmp_69_6_fu_4019_p2 <= "1" when (signed(abs_i13_fu_4011_p3) > signed(ap_const_lv9_E)) else "0";
    not_tmp_69_7_fu_4114_p2 <= "1" when (signed(abs_i15_fu_4106_p3) > signed(ap_const_lv9_E)) else "0";
    not_tmp_69_8_fu_4208_p2 <= "1" when (signed(abs_i17_fu_4200_p3) > signed(ap_const_lv9_E)) else "0";
    not_tmp_69_9_fu_4302_p2 <= "1" when (signed(abs_i19_fu_4294_p3) > signed(ap_const_lv9_E)) else "0";
    not_tmp_69_s_fu_4396_p2 <= "1" when (signed(abs_i21_fu_4388_p3) > signed(ap_const_lv9_E)) else "0";
    not_tmp_s_fu_3401_p2 <= "1" when (signed(abs_i1_fu_3393_p3) > signed(ap_const_lv9_E)) else "0";
    p_36_cast_fu_3411_p3 <= 
        ap_const_lv8_FF when (not_tmp_s_reg_7457(0) = '1') else 
        ap_const_lv8_0;
    p_37_cast_fu_3550_p3 <= 
        ap_const_lv8_FF when (not_tmp_69_1_reg_7517(0) = '1') else 
        ap_const_lv8_0;
    p_38_cast_fu_3506_p3 <= 
        ap_const_lv8_FF when (not_tmp_65_1_reg_7497(0) = '1') else 
        ap_const_lv8_0;
    p_39_cast_fu_3645_p3 <= 
        ap_const_lv8_FF when (not_tmp_69_2_reg_7542(0) = '1') else 
        ap_const_lv8_0;
    p_40_cast_fu_3601_p3 <= 
        ap_const_lv8_FF when (not_tmp_65_2_reg_7537(0) = '1') else 
        ap_const_lv8_0;
    p_41_cast_fu_3740_p3 <= 
        ap_const_lv8_FF when (not_tmp_69_3_reg_7552(0) = '1') else 
        ap_const_lv8_0;
    p_42_cast_fu_3696_p3 <= 
        ap_const_lv8_FF when (not_tmp_65_3_reg_7547(0) = '1') else 
        ap_const_lv8_0;
    p_43_cast_fu_3835_p3 <= 
        ap_const_lv8_FF when (not_tmp_69_4_reg_7562(0) = '1') else 
        ap_const_lv8_0;
    p_44_cast_fu_3791_p3 <= 
        ap_const_lv8_FF when (not_tmp_65_4_reg_7557(0) = '1') else 
        ap_const_lv8_0;
    p_45_cast_fu_3930_p3 <= 
        ap_const_lv8_FF when (not_tmp_69_5_reg_7572(0) = '1') else 
        ap_const_lv8_0;
    p_46_cast_fu_3886_p3 <= 
        ap_const_lv8_FF when (not_tmp_65_5_reg_7567(0) = '1') else 
        ap_const_lv8_0;
    p_47_cast_fu_4025_p3 <= 
        ap_const_lv8_FF when (not_tmp_69_6_reg_7587(0) = '1') else 
        ap_const_lv8_0;
    p_48_cast_fu_3981_p3 <= 
        ap_const_lv8_FF when (not_tmp_65_6_reg_7582(0) = '1') else 
        ap_const_lv8_0;
    p_49_cast_fu_4120_p3 <= 
        ap_const_lv8_FF when (not_tmp_69_7_reg_7597(0) = '1') else 
        ap_const_lv8_0;
    p_50_cast_fu_4076_p3 <= 
        ap_const_lv8_FF when (not_tmp_65_7_reg_7592(0) = '1') else 
        ap_const_lv8_0;
    p_51_cast_fu_4214_p3 <= 
        ap_const_lv8_FF when (not_tmp_69_8_reg_7607(0) = '1') else 
        ap_const_lv8_0;
    p_52_cast_fu_4170_p3 <= 
        ap_const_lv8_FF when (not_tmp_65_8_reg_7602(0) = '1') else 
        ap_const_lv8_0;
    p_53_cast_fu_4308_p3 <= 
        ap_const_lv8_FF when (not_tmp_69_9_reg_7622(0) = '1') else 
        ap_const_lv8_0;
    p_54_cast_fu_4264_p3 <= 
        ap_const_lv8_FF when (not_tmp_65_9_reg_7617(0) = '1') else 
        ap_const_lv8_0;
    p_55_cast_fu_4402_p3 <= 
        ap_const_lv8_FF when (not_tmp_69_s_reg_7632(0) = '1') else 
        ap_const_lv8_0;
    p_56_cast_fu_4358_p3 <= 
        ap_const_lv8_FF when (not_tmp_65_s_reg_7627(0) = '1') else 
        ap_const_lv8_0;
    p_57_cast_fu_4496_p3 <= 
        ap_const_lv8_FF when (not_tmp_69_10_reg_7642(0) = '1') else 
        ap_const_lv8_0;
    p_58_cast_fu_4452_p3 <= 
        ap_const_lv8_FF when (not_tmp_65_10_reg_7637(0) = '1') else 
        ap_const_lv8_0;
    p_59_cast_fu_4590_p3 <= 
        ap_const_lv8_FF when (not_tmp_69_11_reg_7652(0) = '1') else 
        ap_const_lv8_0;
    p_60_cast_fu_4546_p3 <= 
        ap_const_lv8_FF when (not_tmp_65_11_reg_7647(0) = '1') else 
        ap_const_lv8_0;
    p_61_cast_fu_4684_p3 <= 
        ap_const_lv8_FF when (not_tmp_69_12_reg_7662(0) = '1') else 
        ap_const_lv8_0;
    p_62_cast_fu_4640_p3 <= 
        ap_const_lv8_FF when (not_tmp_65_12_reg_7657(0) = '1') else 
        ap_const_lv8_0;
    p_63_cast_fu_4778_p3 <= 
        ap_const_lv8_FF when (not_tmp_69_13_reg_7672(0) = '1') else 
        ap_const_lv8_0;
    p_64_cast_fu_4734_p3 <= 
        ap_const_lv8_FF when (not_tmp_65_13_reg_7667(0) = '1') else 
        ap_const_lv8_0;
    p_65_cast_fu_4872_p3 <= 
        ap_const_lv8_FF when (not_tmp_69_14_reg_7682(0) = '1') else 
        ap_const_lv8_0;
    p_66_cast_fu_4828_p3 <= 
        ap_const_lv8_FF when (not_tmp_65_14_reg_7677(0) = '1') else 
        ap_const_lv8_0;
    p_cast_fu_3455_p3 <= 
        ap_const_lv8_FF when (not_tmp_1_reg_7477(0) = '1') else 
        ap_const_lv8_0;
    p_lshr_f1_cast_fu_1976_p4 <= i1_phi_fu_1498_p4(16 downto 1);
    p_lshr_f32_10_cast_fu_2429_p4 <= i_2_10_fu_2423_p2(16 downto 1);
    p_lshr_f32_11_cast_fu_2494_p4 <= i_2_11_fu_2488_p2(16 downto 1);
    p_lshr_f32_12_cast_fu_2515_p4 <= i_2_12_fu_2509_p2(16 downto 1);
    p_lshr_f32_13_cast_fu_2579_p4 <= i_2_13_fu_2573_p2(16 downto 1);
    p_lshr_f32_14_cast_fu_2600_p4 <= i_2_14_fu_2594_p2(16 downto 1);
    p_lshr_f32_1_cast_fu_2013_p4 <= i_2_s_fu_2007_p2(16 downto 1);
    p_lshr_f32_2_cast_fu_2065_p4 <= i_2_1_fu_2059_p2(16 downto 1);
    p_lshr_f32_3_cast_fu_2086_p4 <= i_2_2_fu_2080_p2(16 downto 1);
    p_lshr_f32_4_cast_fu_2151_p4 <= i_2_3_fu_2145_p2(16 downto 1);
    p_lshr_f32_5_cast_fu_2172_p4 <= i_2_4_fu_2166_p2(16 downto 1);
    p_lshr_f32_6_cast_fu_2236_p4 <= i_2_5_fu_2230_p2(16 downto 1);
    p_lshr_f32_7_cast_fu_2257_p4 <= i_2_6_fu_2251_p2(16 downto 1);
    p_lshr_f32_8_cast_fu_2322_p4 <= i_2_7_fu_2316_p2(16 downto 1);
    p_lshr_f32_9_cast_fu_2343_p4 <= i_2_8_fu_2337_p2(16 downto 1);
    p_lshr_f32_cast_fu_2408_p4 <= i_2_9_fu_2402_p2(16 downto 1);
    p_lshr_f_10_cast_fu_5326_p4 <= i_1_10_fu_5320_p2(16 downto 1);
    p_lshr_f_11_cast_fu_5388_p4 <= i_1_11_fu_5382_p2(16 downto 1);
    p_lshr_f_12_cast_fu_5409_p4 <= i_1_12_fu_5403_p2(16 downto 1);
    p_lshr_f_13_cast_fu_5471_p4 <= i_1_13_fu_5465_p2(16 downto 1);
    p_lshr_f_14_cast_fu_5492_p4 <= i_1_14_fu_5486_p2(16 downto 1);
    p_lshr_f_1_cast_fu_4907_p4 <= i_1_s_fu_4901_p2(16 downto 1);
    p_lshr_f_2_cast_fu_4973_p4 <= i_1_1_fu_4967_p2(16 downto 1);
    p_lshr_f_3_cast_fu_4994_p4 <= i_1_2_fu_4988_p2(16 downto 1);
    p_lshr_f_4_cast_fu_5056_p4 <= i_1_3_fu_5050_p2(16 downto 1);
    p_lshr_f_5_cast_fu_5077_p4 <= i_1_4_fu_5071_p2(16 downto 1);
    p_lshr_f_6_cast_fu_5139_p4 <= i_1_5_fu_5133_p2(16 downto 1);
    p_lshr_f_7_cast_fu_5160_p4 <= i_1_6_fu_5154_p2(16 downto 1);
    p_lshr_f_8_cast_fu_5222_p4 <= i_1_7_fu_5216_p2(16 downto 1);
    p_lshr_f_9_cast_fu_5243_p4 <= i_1_8_fu_5237_p2(16 downto 1);
    p_lshr_f_cast_16_fu_5305_p4 <= i_1_9_fu_5299_p2(16 downto 1);
    p_lshr_f_cast_fu_4886_p4 <= i_phi_fu_1510_p4(16 downto 1);
    tmp_100_fu_2853_p1 <= frame_Dout_B(8 - 1 downto 0);
    tmp_101_fu_2651_p1 <= yuv_frame_q1(8 - 1 downto 0);
    tmp_102_fu_2896_p1 <= frame_Dout_A(8 - 1 downto 0);
    tmp_103_fu_2900_p1 <= frame_Dout_B(8 - 1 downto 0);
    tmp_104_fu_2655_p1 <= yuv_frame_q0(8 - 1 downto 0);
    tmp_105_fu_2939_p1 <= frame_Dout_A(8 - 1 downto 0);
    tmp_106_fu_2943_p1 <= frame_Dout_B(8 - 1 downto 0);
    tmp_11_fu_1986_p1 <= std_logic_vector(resize(unsigned(p_lshr_f1_cast_fu_1976_p4),64));
    tmp_12_fu_1991_p1 <= std_logic_vector(resize(unsigned(i1_phi_fu_1498_p4),64));
    tmp_14_fu_1996_p2 <= (i1_phi_fu_1498_p4 or ap_const_lv17_1);
    tmp_15_fu_2002_p1 <= std_logic_vector(resize(unsigned(tmp_14_fu_1996_p2),64));
    tmp_16_fu_1943_p1 <= std_logic_vector(resize(unsigned(tmp_13_reg_5853),64));
    tmp_17_10_fu_5336_p1 <= std_logic_vector(resize(unsigned(p_lshr_f_10_cast_fu_5326_p4),64));
    tmp_17_11_fu_5398_p1 <= std_logic_vector(resize(unsigned(p_lshr_f_11_cast_fu_5388_p4),64));
    tmp_17_12_fu_5419_p1 <= std_logic_vector(resize(unsigned(p_lshr_f_12_cast_fu_5409_p4),64));
    tmp_17_13_fu_5481_p1 <= std_logic_vector(resize(unsigned(p_lshr_f_13_cast_fu_5471_p4),64));
    tmp_17_14_fu_5502_p1 <= std_logic_vector(resize(unsigned(p_lshr_f_14_cast_fu_5492_p4),64));
    tmp_17_1_fu_4917_p1 <= std_logic_vector(resize(unsigned(p_lshr_f_1_cast_fu_4907_p4),64));
    tmp_17_2_fu_4983_p1 <= std_logic_vector(resize(unsigned(p_lshr_f_2_cast_fu_4973_p4),64));
    tmp_17_3_fu_5004_p1 <= std_logic_vector(resize(unsigned(p_lshr_f_3_cast_fu_4994_p4),64));
    tmp_17_4_fu_5066_p1 <= std_logic_vector(resize(unsigned(p_lshr_f_4_cast_fu_5056_p4),64));
    tmp_17_5_fu_5087_p1 <= std_logic_vector(resize(unsigned(p_lshr_f_5_cast_fu_5077_p4),64));
    tmp_17_6_fu_5149_p1 <= std_logic_vector(resize(unsigned(p_lshr_f_6_cast_fu_5139_p4),64));
    tmp_17_7_fu_5170_p1 <= std_logic_vector(resize(unsigned(p_lshr_f_7_cast_fu_5160_p4),64));
    tmp_17_8_fu_5232_p1 <= std_logic_vector(resize(unsigned(p_lshr_f_8_cast_fu_5222_p4),64));
    tmp_17_9_fu_5253_p1 <= std_logic_vector(resize(unsigned(p_lshr_f_9_cast_fu_5243_p4),64));
    tmp_17_fu_2912_p3 <= (tmp_60_reg_5924 & tmp_59_reg_5917);
    tmp_17_s_fu_5315_p1 <= std_logic_vector(resize(unsigned(p_lshr_f_cast_16_fu_5305_p4),64));
    tmp_18_fu_2919_p3 <= (tmp_61_reg_5935 & reg_1613);
    tmp_19_10_fu_5647_p1 <= std_logic_vector(resize(unsigned(i_1_10_reg_7859),64));
    tmp_19_11_fu_5680_p1 <= std_logic_vector(resize(unsigned(i_1_11_reg_7883),64));
    tmp_19_12_fu_5713_p1 <= std_logic_vector(resize(unsigned(i_1_12_reg_7893),64));
    tmp_19_13_fu_5746_p1 <= std_logic_vector(resize(unsigned(i_1_13_reg_7917),64));
    tmp_19_14_fu_5791_p1 <= std_logic_vector(resize(unsigned(i_1_14_reg_7927),64));
    tmp_19_1_fu_5009_p1 <= std_logic_vector(resize(unsigned(i_1_s_reg_7696),64));
    tmp_19_2_fu_5092_p1 <= std_logic_vector(resize(unsigned(i_1_1_reg_7713),64));
    tmp_19_3_fu_5175_p1 <= std_logic_vector(resize(unsigned(i_1_2_reg_7723),64));
    tmp_19_4_fu_5258_p1 <= std_logic_vector(resize(unsigned(i_1_3_reg_7747),64));
    tmp_19_5_fu_5341_p1 <= std_logic_vector(resize(unsigned(i_1_4_reg_7757),64));
    tmp_19_6_fu_5424_p1 <= std_logic_vector(resize(unsigned(i_1_5_reg_7781),64));
    tmp_19_7_fu_5507_p1 <= std_logic_vector(resize(unsigned(i_1_6_reg_7791),64));
    tmp_19_8_fu_5548_p1 <= std_logic_vector(resize(unsigned(i_1_7_reg_7815),64));
    tmp_19_9_fu_5581_p1 <= std_logic_vector(resize(unsigned(i_1_8_reg_7825),64));
    tmp_19_fu_2101_p1 <= std_logic_vector(resize(unsigned(tmp_59_reg_5917),32));
    tmp_19_s_fu_5614_p1 <= std_logic_vector(resize(unsigned(i_1_9_reg_7849),64));
    tmp_21_10_fu_5652_p2 <= (i_reg_1506 or ap_const_lv17_17);
    tmp_21_11_fu_5685_p2 <= (i_reg_1506 or ap_const_lv17_19);
    tmp_21_12_fu_5718_p2 <= (i_reg_1506 or ap_const_lv17_1B);
    tmp_21_13_fu_5751_p2 <= (i_reg_1506 or ap_const_lv17_1D);
    tmp_21_14_fu_5779_p2 <= (i_reg_1506 or ap_const_lv17_1F);
    tmp_21_1_fu_5014_p2 <= (i_reg_1506 or ap_const_lv17_3);
    tmp_21_2_fu_5097_p2 <= (i_reg_1506 or ap_const_lv17_5);
    tmp_21_3_fu_5180_p2 <= (i_reg_1506 or ap_const_lv17_7);
    tmp_21_4_fu_5263_p2 <= (i_reg_1506 or ap_const_lv17_9);
    tmp_21_5_fu_5346_p2 <= (i_reg_1506 or ap_const_lv17_B);
    tmp_21_6_fu_5429_p2 <= (i_reg_1506 or ap_const_lv17_D);
    tmp_21_7_fu_5512_p2 <= (i_reg_1506 or ap_const_lv17_F);
    tmp_21_8_fu_5553_p2 <= (i_reg_1506 or ap_const_lv17_11);
    tmp_21_9_fu_5586_p2 <= (i_reg_1506 or ap_const_lv17_13);
    tmp_21_s_fu_5619_p2 <= (i_reg_1506 or ap_const_lv17_15);
    tmp_22_10_fu_5658_p1 <= std_logic_vector(resize(unsigned(tmp_21_10_fu_5652_p2),64));
    tmp_22_11_fu_5691_p1 <= std_logic_vector(resize(unsigned(tmp_21_11_fu_5685_p2),64));
    tmp_22_12_fu_5724_p1 <= std_logic_vector(resize(unsigned(tmp_21_12_fu_5718_p2),64));
    tmp_22_13_fu_5757_p1 <= std_logic_vector(resize(unsigned(tmp_21_13_fu_5751_p2),64));
    tmp_22_14_fu_5796_p1 <= std_logic_vector(resize(unsigned(tmp_21_14_reg_7951),64));
    tmp_22_1_fu_5020_p1 <= std_logic_vector(resize(unsigned(tmp_21_1_fu_5014_p2),64));
    tmp_22_2_fu_5103_p1 <= std_logic_vector(resize(unsigned(tmp_21_2_fu_5097_p2),64));
    tmp_22_3_fu_5186_p1 <= std_logic_vector(resize(unsigned(tmp_21_3_fu_5180_p2),64));
    tmp_22_4_fu_5269_p1 <= std_logic_vector(resize(unsigned(tmp_21_4_fu_5263_p2),64));
    tmp_22_5_fu_5352_p1 <= std_logic_vector(resize(unsigned(tmp_21_5_fu_5346_p2),64));
    tmp_22_6_fu_5435_p1 <= std_logic_vector(resize(unsigned(tmp_21_6_fu_5429_p2),64));
    tmp_22_7_fu_5518_p1 <= std_logic_vector(resize(unsigned(tmp_21_7_fu_5512_p2),64));
    tmp_22_8_fu_5559_p1 <= std_logic_vector(resize(unsigned(tmp_21_8_fu_5553_p2),64));
    tmp_22_9_fu_5592_p1 <= std_logic_vector(resize(unsigned(tmp_21_9_fu_5586_p2),64));
    tmp_22_fu_2105_p1 <= std_logic_vector(resize(unsigned(tmp_60_reg_5924),32));
    tmp_22_s_fu_5625_p1 <= std_logic_vector(resize(unsigned(tmp_21_s_fu_5619_p2),64));
    tmp_23_10_fu_5664_p3 <= (tmp_53_reg_7876 & tmp_53_reg_7876);
    tmp_23_11_fu_5697_p3 <= (tmp_54_reg_7903 & tmp_54_reg_7903);
    tmp_23_12_fu_5730_p3 <= (tmp_55_reg_7910 & tmp_55_reg_7910);
    tmp_23_13_fu_5763_p3 <= (tmp_56_reg_7937 & tmp_56_reg_7937);
    tmp_23_14_fu_5801_p3 <= (tmp_57_reg_7944 & tmp_57_reg_7944);
    tmp_23_1_fu_5026_p3 <= (tmp_43_reg_7706 & tmp_43_reg_7706);
    tmp_23_2_fu_5109_p3 <= (tmp_44_reg_7733 & tmp_44_reg_7733);
    tmp_23_3_fu_5192_p3 <= (tmp_45_reg_7740 & tmp_45_reg_7740);
    tmp_23_4_fu_5275_p3 <= (tmp_46_reg_7767 & tmp_46_reg_7767);
    tmp_23_5_fu_5358_p3 <= (tmp_47_reg_7774 & tmp_47_reg_7774);
    tmp_23_6_fu_5441_p3 <= (tmp_48_reg_7801 & tmp_48_reg_7801);
    tmp_23_7_fu_5524_p3 <= (tmp_49_reg_7808 & tmp_49_reg_7808);
    tmp_23_8_fu_5565_p3 <= (tmp_50_reg_7835 & tmp_50_reg_7835);
    tmp_23_9_fu_5598_p3 <= (tmp_51_reg_7842 & tmp_51_reg_7842);
    tmp_23_s_fu_5631_p3 <= (tmp_52_reg_7869 & tmp_52_reg_7869);
    tmp_24_10_fu_5671_p3 <= (reg_1629 & reg_1629);
    tmp_24_11_fu_5704_p3 <= (reg_1624 & reg_1624);
    tmp_24_12_fu_5737_p3 <= (reg_1649 & reg_1649);
    tmp_24_13_fu_5770_p3 <= (reg_1644 & reg_1644);
    tmp_24_14_fu_5808_p3 <= (reg_1613 & reg_1613);
    tmp_24_1_fu_5033_p3 <= (reg_1613 & reg_1613);
    tmp_24_2_fu_5116_p3 <= (reg_1619 & reg_1619);
    tmp_24_3_fu_5199_p3 <= (reg_1613 & reg_1613);
    tmp_24_4_fu_5282_p3 <= (reg_1619 & reg_1619);
    tmp_24_5_fu_5365_p3 <= (reg_1629 & reg_1629);
    tmp_24_6_fu_5448_p3 <= (reg_1624 & reg_1624);
    tmp_24_7_fu_5531_p3 <= (reg_1613 & reg_1613);
    tmp_24_8_fu_5572_p3 <= (reg_1619 & reg_1619);
    tmp_24_9_fu_5605_p3 <= (reg_1639 & reg_1639);
    tmp_24_s_fu_5638_p3 <= (reg_1634 & reg_1634);
    tmp_26_10_fu_2439_p1 <= std_logic_vector(resize(unsigned(p_lshr_f32_10_cast_fu_2429_p4),64));
    tmp_26_11_fu_2504_p1 <= std_logic_vector(resize(unsigned(p_lshr_f32_11_cast_fu_2494_p4),64));
    tmp_26_12_fu_2525_p1 <= std_logic_vector(resize(unsigned(p_lshr_f32_12_cast_fu_2515_p4),64));
    tmp_26_13_fu_2589_p1 <= std_logic_vector(resize(unsigned(p_lshr_f32_13_cast_fu_2579_p4),64));
    tmp_26_14_fu_2610_p1 <= std_logic_vector(resize(unsigned(p_lshr_f32_14_cast_fu_2600_p4),64));
    tmp_26_1_fu_2023_p1 <= std_logic_vector(resize(unsigned(p_lshr_f32_1_cast_fu_2013_p4),64));
    tmp_26_2_fu_2075_p1 <= std_logic_vector(resize(unsigned(p_lshr_f32_2_cast_fu_2065_p4),64));
    tmp_26_3_fu_2096_p1 <= std_logic_vector(resize(unsigned(p_lshr_f32_3_cast_fu_2086_p4),64));
    tmp_26_4_fu_2161_p1 <= std_logic_vector(resize(unsigned(p_lshr_f32_4_cast_fu_2151_p4),64));
    tmp_26_5_fu_2182_p1 <= std_logic_vector(resize(unsigned(p_lshr_f32_5_cast_fu_2172_p4),64));
    tmp_26_6_fu_2246_p1 <= std_logic_vector(resize(unsigned(p_lshr_f32_6_cast_fu_2236_p4),64));
    tmp_26_7_fu_2267_p1 <= std_logic_vector(resize(unsigned(p_lshr_f32_7_cast_fu_2257_p4),64));
    tmp_26_8_fu_2332_p1 <= std_logic_vector(resize(unsigned(p_lshr_f32_8_cast_fu_2322_p4),64));
    tmp_26_9_fu_2353_p1 <= std_logic_vector(resize(unsigned(p_lshr_f32_9_cast_fu_2343_p4),64));
    tmp_26_fu_3109_p1 <= std_logic_vector(resize(unsigned(pix_1_reg_5930),32));
    tmp_26_s_fu_2418_p1 <= std_logic_vector(resize(unsigned(p_lshr_f32_cast_fu_2408_p4),64));
    tmp_27_10_fu_2751_p1 <= std_logic_vector(resize(unsigned(i_2_10_reg_6361),64));
    tmp_27_11_fu_2787_p1 <= std_logic_vector(resize(unsigned(i_2_11_reg_6456),64));
    tmp_27_12_fu_2822_p1 <= std_logic_vector(resize(unsigned(i_2_12_reg_6466),64));
    tmp_27_13_fu_2857_p1 <= std_logic_vector(resize(unsigned(i_2_13_reg_6561),64));
    tmp_27_14_fu_2904_p1 <= std_logic_vector(resize(unsigned(i_2_14_reg_6571),64));
    tmp_27_1_fu_2044_p1 <= std_logic_vector(resize(unsigned(i_2_s_reg_5907),64));
    tmp_27_2_fu_2126_p1 <= std_logic_vector(resize(unsigned(i_2_1_reg_5973),64));
    tmp_27_3_fu_2207_p1 <= std_logic_vector(resize(unsigned(i_2_2_reg_5983),64));
    tmp_27_4_fu_2293_p1 <= std_logic_vector(resize(unsigned(i_2_3_reg_6064),64));
    tmp_27_5_fu_2379_p1 <= std_logic_vector(resize(unsigned(i_2_4_reg_6074),64));
    tmp_27_6_fu_2465_p1 <= std_logic_vector(resize(unsigned(i_2_5_reg_6155),64));
    tmp_27_7_fu_2550_p1 <= std_logic_vector(resize(unsigned(i_2_6_reg_6165),64));
    tmp_27_8_fu_2636_p1 <= std_logic_vector(resize(unsigned(i_2_7_reg_6246),64));
    tmp_27_9_fu_2680_p1 <= std_logic_vector(resize(unsigned(i_2_8_reg_6256),64));
    tmp_27_s_fu_2716_p1 <= std_logic_vector(resize(unsigned(i_2_9_reg_6351),64));
    tmp_29_10_fu_2755_p2 <= (i1_reg_1494 or ap_const_lv17_17);
    tmp_29_11_fu_2791_p2 <= (i1_reg_1494 or ap_const_lv17_19);
    tmp_29_12_fu_2826_p2 <= (i1_reg_1494 or ap_const_lv17_1B);
    tmp_29_13_fu_2861_p2 <= (i1_reg_1494 or ap_const_lv17_1D);
    tmp_29_14_fu_2872_p2 <= (i1_reg_1494 or ap_const_lv17_1F);
    tmp_29_1_fu_2048_p2 <= (i1_reg_1494 or ap_const_lv17_3);
    tmp_29_2_fu_2130_p2 <= (i1_reg_1494 or ap_const_lv17_5);
    tmp_29_3_fu_2211_p2 <= (i1_reg_1494 or ap_const_lv17_7);
    tmp_29_4_fu_2297_p2 <= (i1_reg_1494 or ap_const_lv17_9);
    tmp_29_5_fu_2383_p2 <= (i1_reg_1494 or ap_const_lv17_B);
    tmp_29_6_fu_2469_p2 <= (i1_reg_1494 or ap_const_lv17_D);
    tmp_29_7_fu_2554_p2 <= (i1_reg_1494 or ap_const_lv17_F);
    tmp_29_8_fu_2640_p2 <= (i1_reg_1494 or ap_const_lv17_11);
    tmp_29_9_fu_2684_p2 <= (i1_reg_1494 or ap_const_lv17_13);
    tmp_29_s_fu_2720_p2 <= (i1_reg_1494 or ap_const_lv17_15);
    tmp_2_fu_4933_p2 <= (i_reg_1506 or ap_const_lv17_1);
    tmp_30_10_fu_2761_p1 <= std_logic_vector(resize(unsigned(tmp_29_10_fu_2755_p2),64));
    tmp_30_11_fu_2797_p1 <= std_logic_vector(resize(unsigned(tmp_29_11_fu_2791_p2),64));
    tmp_30_12_fu_2832_p1 <= std_logic_vector(resize(unsigned(tmp_29_12_fu_2826_p2),64));
    tmp_30_13_fu_2867_p1 <= std_logic_vector(resize(unsigned(tmp_29_13_fu_2861_p2),64));
    tmp_30_14_fu_2908_p1 <= std_logic_vector(resize(unsigned(tmp_29_14_reg_7008),64));
    tmp_30_1_fu_2054_p1 <= std_logic_vector(resize(unsigned(tmp_29_1_fu_2048_p2),64));
    tmp_30_2_fu_2136_p1 <= std_logic_vector(resize(unsigned(tmp_29_2_fu_2130_p2),64));
    tmp_30_3_fu_2217_p1 <= std_logic_vector(resize(unsigned(tmp_29_3_fu_2211_p2),64));
    tmp_30_4_fu_2303_p1 <= std_logic_vector(resize(unsigned(tmp_29_4_fu_2297_p2),64));
    tmp_30_5_fu_2389_p1 <= std_logic_vector(resize(unsigned(tmp_29_5_fu_2383_p2),64));
    tmp_30_6_fu_2475_p1 <= std_logic_vector(resize(unsigned(tmp_29_6_fu_2469_p2),64));
    tmp_30_7_fu_2560_p1 <= std_logic_vector(resize(unsigned(tmp_29_7_fu_2554_p2),64));
    tmp_30_8_fu_2646_p1 <= std_logic_vector(resize(unsigned(tmp_29_8_fu_2640_p2),64));
    tmp_30_9_fu_2690_p1 <= std_logic_vector(resize(unsigned(tmp_29_9_fu_2684_p2),64));
    tmp_30_fu_2109_p1 <= std_logic_vector(resize(unsigned(reg_1613),32));
    tmp_30_s_fu_2726_p1 <= std_logic_vector(resize(unsigned(tmp_29_s_fu_2720_p2),64));
    tmp_33_fu_2187_p1 <= std_logic_vector(resize(unsigned(tmp_61_reg_5935),32));
    tmp_35_10_fu_3226_p3 <= (tmp_93_reg_6852 & tmp_92_reg_6442);
    tmp_35_11_fu_3252_p3 <= (tmp_96_reg_6909 & tmp_95_reg_6533);
    tmp_35_12_fu_3278_p3 <= (tmp_99_reg_6966 & tmp_98_reg_6547);
    tmp_35_13_fu_3304_p3 <= (tmp_102_reg_7033 & tmp_101_reg_6638);
    tmp_35_14_fu_3330_p3 <= (tmp_105_reg_7090 & tmp_104_reg_6652);
    tmp_35_1_fu_2947_p3 <= (tmp_63_reg_6008 & tmp_62_reg_5946);
    tmp_35_2_fu_2974_p3 <= (tmp_66_reg_6099 & tmp_65_reg_6030);
    tmp_35_3_fu_3001_p3 <= (tmp_69_reg_6190 & tmp_68_reg_6057);
    tmp_35_4_fu_3028_p3 <= (tmp_72_reg_6281 & tmp_71_reg_6141);
    tmp_35_5_fu_3055_p3 <= (tmp_75_reg_6386 & tmp_74_reg_6148);
    tmp_35_6_fu_3082_p3 <= (tmp_78_reg_6491 & tmp_77_reg_6232);
    tmp_35_7_fu_3117_p3 <= (tmp_81_reg_6596 & tmp_80_reg_6239);
    tmp_35_8_fu_3148_p3 <= (tmp_84_reg_6681 & tmp_83_reg_6323);
    tmp_35_9_fu_3174_p3 <= (tmp_87_reg_6738 & tmp_86_reg_6337);
    tmp_35_s_fu_3200_p3 <= (tmp_90_reg_6795 & tmp_89_reg_6428);
    tmp_36_cast_fu_3368_p1 <= std_logic_vector(resize(unsigned(ap_reg_ppstg_tmp_59_reg_5917_pp1_it1),9));
    tmp_37_fu_3113_p1 <= std_logic_vector(resize(unsigned(pix_3_reg_5941),32));
    tmp_39_10_fu_3233_p3 <= (tmp_94_reg_6863 & yuv_struct_y2_write_assign_26_reg_6449);
    tmp_39_11_fu_3259_p3 <= (tmp_97_reg_6920 & yuv_struct_y2_write_assign_27_reg_6540);
    tmp_39_12_fu_3285_p3 <= (tmp_100_reg_6977 & yuv_struct_y2_write_assign_28_reg_6554);
    tmp_39_13_fu_3311_p3 <= (tmp_103_reg_7044 & yuv_struct_y2_write_assign_29_reg_6645);
    tmp_39_14_fu_3337_p3 <= (tmp_106_reg_7101 & yuv_struct_y2_write_assign_30_reg_6659);
    tmp_39_1_fu_2954_p3 <= (tmp_64_reg_6019 & reg_1619);
    tmp_39_2_fu_2981_p3 <= (tmp_67_reg_6110 & reg_1624);
    tmp_39_3_fu_3008_p3 <= (tmp_70_reg_6201 & reg_1629);
    tmp_39_4_fu_3035_p3 <= (tmp_73_reg_6292 & reg_1634);
    tmp_39_5_fu_3062_p3 <= (tmp_76_reg_6397 & reg_1639);
    tmp_39_6_fu_3089_p3 <= (tmp_79_reg_6502 & reg_1644);
    tmp_39_7_fu_3124_p3 <= (tmp_82_reg_6607 & reg_1649);
    tmp_39_8_fu_3155_p3 <= (tmp_85_reg_6692 & yuv_struct_y2_write_assign_23_reg_6330);
    tmp_39_9_fu_3181_p3 <= (tmp_88_reg_6749 & yuv_struct_y2_write_assign_24_reg_6344);
    tmp_39_s_fu_3207_p3 <= (tmp_91_reg_6806 & yuv_struct_y2_write_assign_25_reg_6435);
    tmp_3_fu_4880_p2 <= "1" when (unsigned(i_phi_fu_1510_p4) < unsigned(ap_const_lv17_12C00)) else "0";
    tmp_40_10_cast_fu_4410_p1 <= std_logic_vector(resize(unsigned(ap_reg_ppstg_tmp_92_reg_6442_pp1_it1),9));
    tmp_40_10_fu_2935_p1 <= std_logic_vector(resize(unsigned(tmp_92_reg_6442),32));
    tmp_40_11_cast_fu_4504_p1 <= std_logic_vector(resize(unsigned(ap_reg_ppstg_tmp_95_reg_6533_pp1_it1),9));
    tmp_40_11_fu_2989_p1 <= std_logic_vector(resize(unsigned(tmp_95_reg_6533),32));
    tmp_40_12_cast_fu_4598_p1 <= std_logic_vector(resize(unsigned(ap_reg_ppstg_tmp_98_reg_6547_pp1_it1),9));
    tmp_40_12_fu_3020_p1 <= std_logic_vector(resize(unsigned(tmp_98_reg_6547),32));
    tmp_40_13_cast_fu_4692_p1 <= std_logic_vector(resize(unsigned(ap_reg_ppstg_tmp_101_reg_6638_pp1_it1),9));
    tmp_40_13_fu_3051_p1 <= std_logic_vector(resize(unsigned(tmp_101_reg_6638),32));
    tmp_40_14_cast_fu_4786_p1 <= std_logic_vector(resize(unsigned(ap_reg_ppstg_tmp_104_reg_6652_pp1_it1),9));
    tmp_40_14_fu_3097_p1 <= std_logic_vector(resize(unsigned(tmp_104_reg_6652),32));
    tmp_40_1_cast_fu_3463_p1 <= std_logic_vector(resize(unsigned(ap_reg_ppstg_tmp_62_reg_5946_pp1_it1),9));
    tmp_40_1_fu_2191_p1 <= std_logic_vector(resize(unsigned(tmp_62_reg_5946),32));
    tmp_40_2_cast_fu_3558_p1 <= std_logic_vector(resize(unsigned(ap_reg_ppstg_tmp_65_reg_6030_pp1_it1),9));
    tmp_40_2_fu_2281_p1 <= std_logic_vector(resize(unsigned(tmp_65_reg_6030),32));
    tmp_40_3_cast_fu_3653_p1 <= std_logic_vector(resize(unsigned(ap_reg_ppstg_tmp_68_reg_6057_pp1_it1),9));
    tmp_40_3_fu_2444_p1 <= std_logic_vector(resize(unsigned(tmp_68_reg_6057),32));
    tmp_40_4_cast_fu_3748_p1 <= std_logic_vector(resize(unsigned(ap_reg_ppstg_tmp_71_reg_6141_pp1_it1),9));
    tmp_40_4_fu_2534_p1 <= std_logic_vector(resize(unsigned(tmp_71_reg_6141),32));
    tmp_40_5_cast_fu_3843_p1 <= std_logic_vector(resize(unsigned(ap_reg_ppstg_tmp_74_reg_6148_pp1_it1),9));
    tmp_40_5_fu_2624_p1 <= std_logic_vector(resize(unsigned(tmp_74_reg_6148),32));
    tmp_40_6_cast_fu_3938_p1 <= std_logic_vector(resize(unsigned(ap_reg_ppstg_tmp_77_reg_6232_pp1_it1),9));
    tmp_40_6_fu_2695_p1 <= std_logic_vector(resize(unsigned(tmp_77_reg_6232),32));
    tmp_40_7_cast_fu_4033_p1 <= std_logic_vector(resize(unsigned(ap_reg_ppstg_tmp_80_reg_6239_pp1_it1),9));
    tmp_40_7_fu_2735_p1 <= std_logic_vector(resize(unsigned(tmp_80_reg_6239),32));
    tmp_40_8_cast_fu_4128_p1 <= std_logic_vector(resize(unsigned(ap_reg_ppstg_tmp_83_reg_6323_pp1_it1),9));
    tmp_40_8_fu_2775_p1 <= std_logic_vector(resize(unsigned(tmp_83_reg_6323),32));
    tmp_40_9_cast_fu_4222_p1 <= std_logic_vector(resize(unsigned(ap_reg_ppstg_tmp_86_reg_6337_pp1_it1),9));
    tmp_40_9_fu_2837_p1 <= std_logic_vector(resize(unsigned(tmp_86_reg_6337),32));
    tmp_40_cast_fu_4316_p1 <= std_logic_vector(resize(unsigned(ap_reg_ppstg_tmp_89_reg_6428_pp1_it1),9));
    tmp_40_s_fu_2888_p1 <= std_logic_vector(resize(unsigned(tmp_89_reg_6428),32));
    tmp_41_fu_4922_p1 <= yuv_frame_q1(8 - 1 downto 0);
    tmp_42_fu_5839_p1 <= std_logic_vector(resize(unsigned(indvar8_reg_1518),64));
    tmp_43_10_fu_2962_p1 <= std_logic_vector(resize(unsigned(tmp_93_reg_6852),32));
    tmp_43_11_fu_2993_p1 <= std_logic_vector(resize(unsigned(tmp_96_reg_6909),32));
    tmp_43_12_fu_3024_p1 <= std_logic_vector(resize(unsigned(tmp_99_reg_6966),32));
    tmp_43_13_fu_3070_p1 <= std_logic_vector(resize(unsigned(tmp_102_reg_7033),32));
    tmp_43_14_fu_3101_p1 <= std_logic_vector(resize(unsigned(tmp_105_reg_7090),32));
    tmp_43_1_fu_2195_p1 <= std_logic_vector(resize(unsigned(tmp_63_reg_6008),32));
    tmp_43_2_fu_2358_p1 <= std_logic_vector(resize(unsigned(tmp_66_reg_6099),32));
    tmp_43_3_fu_2448_p1 <= std_logic_vector(resize(unsigned(tmp_69_reg_6190),32));
    tmp_43_4_fu_2538_p1 <= std_logic_vector(resize(unsigned(tmp_72_reg_6281),32));
    tmp_43_5_fu_2659_p1 <= std_logic_vector(resize(unsigned(tmp_75_reg_6386),32));
    tmp_43_6_fu_2699_p1 <= std_logic_vector(resize(unsigned(tmp_78_reg_6491),32));
    tmp_43_7_fu_2739_p1 <= std_logic_vector(resize(unsigned(tmp_81_reg_6596),32));
    tmp_43_8_fu_2802_p1 <= std_logic_vector(resize(unsigned(tmp_84_reg_6681),32));
    tmp_43_9_fu_2841_p1 <= std_logic_vector(resize(unsigned(tmp_87_reg_6738),32));
    tmp_43_fu_4963_p1 <= yuv_frame_q0(8 - 1 downto 0);
    tmp_43_s_fu_2892_p1 <= std_logic_vector(resize(unsigned(tmp_90_reg_6795),32));
    tmp_44_fu_5042_p1 <= yuv_frame_q1(8 - 1 downto 0);
    tmp_45_fu_5046_p1 <= yuv_frame_q0(8 - 1 downto 0);
    tmp_46_fu_5125_p1 <= yuv_frame_q1(8 - 1 downto 0);
    tmp_47_10_fu_3300_p1 <= std_logic_vector(resize(unsigned(pix_13_10_reg_6858),32));
    tmp_47_11_fu_3322_p1 <= std_logic_vector(resize(unsigned(pix_13_11_reg_6915),32));
    tmp_47_12_fu_3344_p1 <= std_logic_vector(resize(unsigned(pix_13_12_reg_6972),32));
    tmp_47_13_fu_3352_p1 <= std_logic_vector(resize(unsigned(pix_13_13_reg_7039),32));
    tmp_47_14_fu_3360_p1 <= std_logic_vector(resize(unsigned(pix_13_14_reg_7096),32));
    tmp_47_1_fu_3136_p1 <= std_logic_vector(resize(unsigned(pix_13_1_reg_6014),32));
    tmp_47_2_fu_3144_p1 <= std_logic_vector(resize(unsigned(pix_13_2_reg_6105),32));
    tmp_47_3_fu_3166_p1 <= std_logic_vector(resize(unsigned(pix_13_3_reg_6196),32));
    tmp_47_4_fu_3188_p1 <= std_logic_vector(resize(unsigned(pix_13_4_reg_6287),32));
    tmp_47_5_fu_3196_p1 <= std_logic_vector(resize(unsigned(pix_13_5_reg_6392),32));
    tmp_47_6_fu_3218_p1 <= std_logic_vector(resize(unsigned(pix_13_6_reg_6497),32));
    tmp_47_7_fu_3240_p1 <= std_logic_vector(resize(unsigned(pix_13_7_reg_6602),32));
    tmp_47_8_fu_3248_p1 <= std_logic_vector(resize(unsigned(pix_13_8_reg_6687),32));
    tmp_47_9_fu_3270_p1 <= std_logic_vector(resize(unsigned(pix_13_9_reg_6744),32));
    tmp_47_cast_fu_3407_p1 <= std_logic_vector(resize(unsigned(ap_reg_ppstg_reg_1613_pp1_it1),9));
    tmp_47_fu_5129_p1 <= yuv_frame_q0(8 - 1 downto 0);
    tmp_47_s_fu_3292_p1 <= std_logic_vector(resize(unsigned(pix_13_s_reg_6801),32));
    tmp_48_fu_5208_p1 <= yuv_frame_q1(8 - 1 downto 0);
    tmp_49_fu_5212_p1 <= yuv_frame_q0(8 - 1 downto 0);
    tmp_4_fu_4939_p1 <= std_logic_vector(resize(unsigned(tmp_2_fu_4933_p2),64));
    tmp_50_fu_5291_p1 <= yuv_frame_q1(8 - 1 downto 0);
    tmp_51_10_cast_fu_4449_p1 <= std_logic_vector(resize(unsigned(ap_reg_ppstg_yuv_struct_y2_write_assign_26_reg_6449_pp1_it1),9));
    tmp_51_10_fu_2966_p1 <= std_logic_vector(resize(unsigned(yuv_struct_y2_write_assign_26_reg_6449),32));
    tmp_51_11_cast_fu_4543_p1 <= std_logic_vector(resize(unsigned(ap_reg_ppstg_yuv_struct_y2_write_assign_27_reg_6540_pp1_it1),9));
    tmp_51_11_fu_2997_p1 <= std_logic_vector(resize(unsigned(yuv_struct_y2_write_assign_27_reg_6540),32));
    tmp_51_12_cast_fu_4637_p1 <= std_logic_vector(resize(unsigned(ap_reg_ppstg_yuv_struct_y2_write_assign_28_reg_6554_pp1_it1),9));
    tmp_51_12_fu_3043_p1 <= std_logic_vector(resize(unsigned(yuv_struct_y2_write_assign_28_reg_6554),32));
    tmp_51_13_cast_fu_4731_p1 <= std_logic_vector(resize(unsigned(ap_reg_ppstg_yuv_struct_y2_write_assign_29_reg_6645_pp1_it1),9));
    tmp_51_13_fu_3074_p1 <= std_logic_vector(resize(unsigned(yuv_struct_y2_write_assign_29_reg_6645),32));
    tmp_51_14_cast_fu_4825_p1 <= std_logic_vector(resize(unsigned(ap_reg_ppstg_yuv_struct_y2_write_assign_30_reg_6659_pp1_it1),9));
    tmp_51_14_fu_3105_p1 <= std_logic_vector(resize(unsigned(yuv_struct_y2_write_assign_30_reg_6659),32));
    tmp_51_1_cast_fu_3502_p1 <= std_logic_vector(resize(unsigned(ap_reg_ppstg_reg_1619_pp1_it1),9));
    tmp_51_1_fu_2272_p1 <= std_logic_vector(resize(unsigned(reg_1619),32));
    tmp_51_2_cast_fu_3597_p1 <= std_logic_vector(resize(unsigned(ap_reg_ppstg_reg_1624_pp1_it1),9));
    tmp_51_2_fu_2362_p1 <= std_logic_vector(resize(unsigned(reg_1624),32));
    tmp_51_3_cast_fu_3692_p1 <= std_logic_vector(resize(unsigned(ap_reg_ppstg_reg_1629_pp1_it1),9));
    tmp_51_3_fu_2452_p1 <= std_logic_vector(resize(unsigned(reg_1629),32));
    tmp_51_4_cast_fu_3787_p1 <= std_logic_vector(resize(unsigned(ap_reg_ppstg_reg_1634_pp1_it1),9));
    tmp_51_4_fu_2615_p1 <= std_logic_vector(resize(unsigned(reg_1634),32));
    tmp_51_5_cast_fu_3882_p1 <= std_logic_vector(resize(unsigned(ap_reg_ppstg_reg_1639_pp1_it1),9));
    tmp_51_5_fu_2663_p1 <= std_logic_vector(resize(unsigned(reg_1639),32));
    tmp_51_6_cast_fu_3977_p1 <= std_logic_vector(resize(unsigned(ap_reg_ppstg_reg_1644_pp1_it1),9));
    tmp_51_6_fu_2703_p1 <= std_logic_vector(resize(unsigned(reg_1644),32));
    tmp_51_7_cast_fu_4072_p1 <= std_logic_vector(resize(unsigned(ap_reg_ppstg_reg_1649_pp1_it1),9));
    tmp_51_7_fu_2766_p1 <= std_logic_vector(resize(unsigned(reg_1649),32));
    tmp_51_8_cast_fu_4167_p1 <= std_logic_vector(resize(unsigned(ap_reg_ppstg_yuv_struct_y2_write_assign_23_reg_6330_pp1_it1),9));
    tmp_51_8_fu_2806_p1 <= std_logic_vector(resize(unsigned(yuv_struct_y2_write_assign_23_reg_6330),32));
    tmp_51_9_cast_fu_4261_p1 <= std_logic_vector(resize(unsigned(ap_reg_ppstg_yuv_struct_y2_write_assign_24_reg_6344_pp1_it1),9));
    tmp_51_9_fu_2845_p1 <= std_logic_vector(resize(unsigned(yuv_struct_y2_write_assign_24_reg_6344),32));
    tmp_51_cast_fu_4355_p1 <= std_logic_vector(resize(unsigned(ap_reg_ppstg_yuv_struct_y2_write_assign_25_reg_6435_pp1_it1),9));
    tmp_51_fu_5295_p1 <= yuv_frame_q0(8 - 1 downto 0);
    tmp_51_s_fu_2927_p1 <= std_logic_vector(resize(unsigned(yuv_struct_y2_write_assign_25_reg_6435),32));
    tmp_52_fu_5374_p1 <= yuv_frame_q1(8 - 1 downto 0);
    tmp_53_fu_5378_p1 <= yuv_frame_q0(8 - 1 downto 0);
    tmp_54_10_fu_2970_p1 <= std_logic_vector(resize(unsigned(tmp_94_reg_6863),32));
    tmp_54_11_fu_3016_p1 <= std_logic_vector(resize(unsigned(tmp_97_reg_6920),32));
    tmp_54_12_fu_3047_p1 <= std_logic_vector(resize(unsigned(tmp_100_reg_6977),32));
    tmp_54_13_fu_3078_p1 <= std_logic_vector(resize(unsigned(tmp_103_reg_7044),32));
    tmp_54_14_fu_3132_p1 <= std_logic_vector(resize(unsigned(tmp_106_reg_7101),32));
    tmp_54_1_fu_2277_p1 <= std_logic_vector(resize(unsigned(tmp_64_reg_6019),32));
    tmp_54_2_fu_2367_p1 <= std_logic_vector(resize(unsigned(tmp_67_reg_6110),32));
    tmp_54_3_fu_2530_p1 <= std_logic_vector(resize(unsigned(tmp_70_reg_6201),32));
    tmp_54_4_fu_2620_p1 <= std_logic_vector(resize(unsigned(tmp_73_reg_6292),32));
    tmp_54_5_fu_2668_p1 <= std_logic_vector(resize(unsigned(tmp_76_reg_6397),32));
    tmp_54_6_fu_2731_p1 <= std_logic_vector(resize(unsigned(tmp_79_reg_6502),32));
    tmp_54_7_fu_2771_p1 <= std_logic_vector(resize(unsigned(tmp_82_reg_6607),32));
    tmp_54_8_fu_2810_p1 <= std_logic_vector(resize(unsigned(tmp_85_reg_6692),32));
    tmp_54_9_fu_2884_p1 <= std_logic_vector(resize(unsigned(tmp_88_reg_6749),32));
    tmp_54_fu_5457_p1 <= yuv_frame_q1(8 - 1 downto 0);
    tmp_54_s_fu_2931_p1 <= std_logic_vector(resize(unsigned(tmp_91_reg_6806),32));
    tmp_55_fu_5461_p1 <= yuv_frame_q0(8 - 1 downto 0);
    tmp_56_fu_5540_p1 <= yuv_frame_q1(8 - 1 downto 0);
    tmp_57_fu_5544_p1 <= yuv_frame_q0(8 - 1 downto 0);
    tmp_58_10_fu_3318_p1 <= std_logic_vector(resize(unsigned(pix_23_10_reg_6869),32));
    tmp_58_11_fu_3326_p1 <= std_logic_vector(resize(unsigned(pix_23_11_reg_6926),32));
    tmp_58_12_fu_3348_p1 <= std_logic_vector(resize(unsigned(pix_23_12_reg_6983),32));
    tmp_58_13_fu_3356_p1 <= std_logic_vector(resize(unsigned(pix_23_13_reg_7050),32));
    tmp_58_14_fu_3364_p1 <= std_logic_vector(resize(unsigned(pix_23_14_reg_7107),32));
    tmp_58_1_fu_3140_p1 <= std_logic_vector(resize(unsigned(pix_23_1_reg_6025),32));
    tmp_58_2_fu_3162_p1 <= std_logic_vector(resize(unsigned(pix_23_2_reg_6116),32));
    tmp_58_3_fu_3170_p1 <= std_logic_vector(resize(unsigned(pix_23_3_reg_6207),32));
    tmp_58_4_fu_3192_p1 <= std_logic_vector(resize(unsigned(pix_23_4_reg_6298),32));
    tmp_58_5_fu_3214_p1 <= std_logic_vector(resize(unsigned(pix_23_5_reg_6403),32));
    tmp_58_6_fu_3222_p1 <= std_logic_vector(resize(unsigned(pix_23_6_reg_6508),32));
    tmp_58_7_fu_3244_p1 <= std_logic_vector(resize(unsigned(pix_23_7_reg_6613),32));
    tmp_58_8_fu_3266_p1 <= std_logic_vector(resize(unsigned(pix_23_8_reg_6698),32));
    tmp_58_9_fu_3274_p1 <= std_logic_vector(resize(unsigned(pix_23_9_reg_6755),32));
    tmp_58_cast_fu_3371_p1 <= std_logic_vector(resize(unsigned(grp_backsub_hls_fptoui_float_i8_fu_1529_ap_return),9));
        tmp_58_fu_5817_p1 <= std_logic_vector(resize(signed(frame_out_read_reg_5848),64));

    tmp_58_s_fu_3296_p1 <= std_logic_vector(resize(unsigned(pix_23_s_reg_6812),32));
    tmp_59_fu_2028_p1 <= yuv_frame_q0(8 - 1 downto 0);
    tmp_5_fu_1970_p2 <= "1" when (unsigned(i1_phi_fu_1498_p4) < unsigned(ap_const_lv17_12C00)) else "0";
    tmp_60_fu_2032_p1 <= frame_Dout_A(8 - 1 downto 0);
    tmp_61_cast_fu_3419_p1 <= std_logic_vector(resize(unsigned(grp_backsub_hls_fptoui_float_i8_fu_1529_ap_return),9));
    tmp_61_fu_2036_p1 <= frame_Dout_B(8 - 1 downto 0);
    tmp_62_10_cast_fu_4413_p1 <= std_logic_vector(resize(unsigned(grp_backsub_hls_fptoui_float_i8_fu_1529_ap_return),9));
    tmp_62_11_cast_fu_4507_p1 <= std_logic_vector(resize(unsigned(grp_backsub_hls_fptoui_float_i8_fu_1529_ap_return),9));
    tmp_62_12_cast_fu_4601_p1 <= std_logic_vector(resize(unsigned(grp_backsub_hls_fptoui_float_i8_fu_1529_ap_return),9));
    tmp_62_13_cast_fu_4695_p1 <= std_logic_vector(resize(unsigned(grp_backsub_hls_fptoui_float_i8_fu_1529_ap_return),9));
    tmp_62_14_cast_fu_4789_p1 <= std_logic_vector(resize(unsigned(grp_backsub_hls_fptoui_float_i8_fu_1529_ap_return),9));
    tmp_62_1_cast_fu_3466_p1 <= std_logic_vector(resize(unsigned(grp_backsub_hls_fptoui_float_i8_fu_1529_ap_return),9));
    tmp_62_2_cast_fu_3561_p1 <= std_logic_vector(resize(unsigned(grp_backsub_hls_fptoui_float_i8_fu_1529_ap_return),9));
    tmp_62_3_cast_fu_3656_p1 <= std_logic_vector(resize(unsigned(grp_backsub_hls_fptoui_float_i8_fu_1529_ap_return),9));
    tmp_62_4_cast_fu_3751_p1 <= std_logic_vector(resize(unsigned(grp_backsub_hls_fptoui_float_i8_fu_1529_ap_return),9));
    tmp_62_5_cast_fu_3846_p1 <= std_logic_vector(resize(unsigned(grp_backsub_hls_fptoui_float_i8_fu_1529_ap_return),9));
    tmp_62_6_cast_fu_3941_p1 <= std_logic_vector(resize(unsigned(grp_backsub_hls_fptoui_float_i8_fu_1529_ap_return),9));
    tmp_62_7_cast_fu_4036_p1 <= std_logic_vector(resize(unsigned(grp_backsub_hls_fptoui_float_i8_fu_1529_ap_return),9));
    tmp_62_8_cast_fu_4131_p1 <= std_logic_vector(resize(unsigned(grp_backsub_hls_fptoui_float_i8_fu_1529_ap_return),9));
    tmp_62_9_cast_fu_4225_p1 <= std_logic_vector(resize(unsigned(grp_backsub_hls_fptoui_float_i8_fu_1529_ap_return),9));
    tmp_62_cast_fu_4319_p1 <= std_logic_vector(resize(unsigned(grp_backsub_hls_fptoui_float_i8_fu_1529_ap_return),9));
    tmp_62_fu_2040_p1 <= yuv_frame_q1(8 - 1 downto 0);
    tmp_63_fu_2114_p1 <= frame_Dout_A(8 - 1 downto 0);
    tmp_64_fu_2118_p1 <= frame_Dout_B(8 - 1 downto 0);
    tmp_65_fu_2122_p1 <= yuv_frame_q1(8 - 1 downto 0);
    tmp_66_10_cast_fu_4460_p1 <= std_logic_vector(resize(unsigned(grp_backsub_hls_fptoui_float_i8_fu_1529_ap_return),9));
    tmp_66_11_cast_fu_4554_p1 <= std_logic_vector(resize(unsigned(grp_backsub_hls_fptoui_float_i8_fu_1529_ap_return),9));
    tmp_66_12_cast_fu_4648_p1 <= std_logic_vector(resize(unsigned(grp_backsub_hls_fptoui_float_i8_fu_1529_ap_return),9));
    tmp_66_13_cast_fu_4742_p1 <= std_logic_vector(resize(unsigned(grp_backsub_hls_fptoui_float_i8_fu_1529_ap_return),9));
    tmp_66_14_cast_fu_4836_p1 <= std_logic_vector(resize(unsigned(grp_backsub_hls_fptoui_float_i8_fu_1529_ap_return),9));
    tmp_66_1_cast_fu_3514_p1 <= std_logic_vector(resize(unsigned(grp_backsub_hls_fptoui_float_i8_fu_1529_ap_return),9));
    tmp_66_2_cast_fu_3609_p1 <= std_logic_vector(resize(unsigned(grp_backsub_hls_fptoui_float_i8_fu_1529_ap_return),9));
    tmp_66_3_cast_fu_3704_p1 <= std_logic_vector(resize(unsigned(grp_backsub_hls_fptoui_float_i8_fu_1529_ap_return),9));
    tmp_66_4_cast_fu_3799_p1 <= std_logic_vector(resize(unsigned(grp_backsub_hls_fptoui_float_i8_fu_1529_ap_return),9));
    tmp_66_5_cast_fu_3894_p1 <= std_logic_vector(resize(unsigned(grp_backsub_hls_fptoui_float_i8_fu_1529_ap_return),9));
    tmp_66_6_cast_fu_3989_p1 <= std_logic_vector(resize(unsigned(grp_backsub_hls_fptoui_float_i8_fu_1529_ap_return),9));
    tmp_66_7_cast_fu_4084_p1 <= std_logic_vector(resize(unsigned(grp_backsub_hls_fptoui_float_i8_fu_1529_ap_return),9));
    tmp_66_8_cast_fu_4178_p1 <= std_logic_vector(resize(unsigned(grp_backsub_hls_fptoui_float_i8_fu_1529_ap_return),9));
    tmp_66_9_cast_fu_4272_p1 <= std_logic_vector(resize(unsigned(grp_backsub_hls_fptoui_float_i8_fu_1529_ap_return),9));
    tmp_66_cast_fu_4366_p1 <= std_logic_vector(resize(unsigned(grp_backsub_hls_fptoui_float_i8_fu_1529_ap_return),9));
    tmp_66_fu_2199_p1 <= frame_Dout_A(8 - 1 downto 0);
    tmp_67_fu_2203_p1 <= frame_Dout_B(8 - 1 downto 0);
    tmp_68_fu_2141_p1 <= yuv_frame_q0(8 - 1 downto 0);
    tmp_69_fu_2285_p1 <= frame_Dout_A(8 - 1 downto 0);
    tmp_6_fu_4945_p3 <= (tmp_41_fu_4922_p1 & tmp_41_fu_4922_p1);
    tmp_70_fu_2289_p1 <= frame_Dout_B(8 - 1 downto 0);
    tmp_71_fu_2222_p1 <= yuv_frame_q1(8 - 1 downto 0);
    tmp_72_fu_2371_p1 <= frame_Dout_A(8 - 1 downto 0);
    tmp_73_fu_2375_p1 <= frame_Dout_B(8 - 1 downto 0);
    tmp_74_fu_2226_p1 <= yuv_frame_q0(8 - 1 downto 0);
    tmp_75_fu_2457_p1 <= frame_Dout_A(8 - 1 downto 0);
    tmp_76_fu_2461_p1 <= frame_Dout_B(8 - 1 downto 0);
    tmp_77_fu_2308_p1 <= yuv_frame_q1(8 - 1 downto 0);
    tmp_78_fu_2542_p1 <= frame_Dout_A(8 - 1 downto 0);
    tmp_79_fu_2546_p1 <= frame_Dout_B(8 - 1 downto 0);
    tmp_7_fu_4896_p1 <= std_logic_vector(resize(unsigned(p_lshr_f_cast_fu_4886_p4),64));
    tmp_80_fu_2312_p1 <= yuv_frame_q0(8 - 1 downto 0);
    tmp_81_fu_2628_p1 <= frame_Dout_A(8 - 1 downto 0);
    tmp_82_fu_2632_p1 <= frame_Dout_B(8 - 1 downto 0);
    tmp_83_fu_2394_p1 <= yuv_frame_q1(8 - 1 downto 0);
    tmp_84_fu_2672_p1 <= frame_Dout_A(8 - 1 downto 0);
    tmp_85_fu_2676_p1 <= frame_Dout_B(8 - 1 downto 0);
    tmp_86_fu_2398_p1 <= yuv_frame_q0(8 - 1 downto 0);
    tmp_87_fu_2708_p1 <= frame_Dout_A(8 - 1 downto 0);
    tmp_88_fu_2712_p1 <= frame_Dout_B(8 - 1 downto 0);
    tmp_89_fu_2480_p1 <= yuv_frame_q1(8 - 1 downto 0);
    tmp_8_fu_4954_p3 <= (grp_fu_1602_p4 & grp_fu_1602_p4);
    tmp_90_fu_2743_p1 <= frame_Dout_A(8 - 1 downto 0);
    tmp_91_fu_2747_p1 <= frame_Dout_B(8 - 1 downto 0);
    tmp_92_fu_2484_p1 <= yuv_frame_q0(8 - 1 downto 0);
    tmp_93_fu_2779_p1 <= frame_Dout_A(8 - 1 downto 0);
    tmp_94_fu_2783_p1 <= frame_Dout_B(8 - 1 downto 0);
    tmp_95_fu_2565_p1 <= yuv_frame_q1(8 - 1 downto 0);
    tmp_96_fu_2814_p1 <= frame_Dout_A(8 - 1 downto 0);
    tmp_97_fu_2818_p1 <= frame_Dout_B(8 - 1 downto 0);
    tmp_98_fu_2569_p1 <= yuv_frame_q0(8 - 1 downto 0);
    tmp_99_fu_2849_p1 <= frame_Dout_A(8 - 1 downto 0);
    tmp_9_fu_4927_p1 <= std_logic_vector(resize(unsigned(i_reg_1506),64));
    tmp_s_fu_1965_p1 <= std_logic_vector(resize(unsigned(ap_reg_ppstg_indvar_reg_1482_pp0_it1),64));
    x_assign_10_fu_3898_p2 <= std_logic_vector(unsigned(tmp_51_5_cast_fu_3882_p1) - unsigned(tmp_66_5_cast_fu_3894_p1));
    x_assign_11_fu_3945_p2 <= std_logic_vector(unsigned(tmp_40_6_cast_fu_3938_p1) - unsigned(tmp_62_6_cast_fu_3941_p1));
    x_assign_12_fu_3993_p2 <= std_logic_vector(unsigned(tmp_51_6_cast_fu_3977_p1) - unsigned(tmp_66_6_cast_fu_3989_p1));
    x_assign_13_fu_4040_p2 <= std_logic_vector(unsigned(tmp_40_7_cast_fu_4033_p1) - unsigned(tmp_62_7_cast_fu_4036_p1));
    x_assign_14_fu_4088_p2 <= std_logic_vector(unsigned(tmp_51_7_cast_fu_4072_p1) - unsigned(tmp_66_7_cast_fu_4084_p1));
    x_assign_15_fu_4135_p2 <= std_logic_vector(unsigned(tmp_40_8_cast_fu_4128_p1) - unsigned(tmp_62_8_cast_fu_4131_p1));
    x_assign_16_fu_4182_p2 <= std_logic_vector(unsigned(tmp_51_8_cast_fu_4167_p1) - unsigned(tmp_66_8_cast_fu_4178_p1));
    x_assign_17_fu_4229_p2 <= std_logic_vector(unsigned(tmp_40_9_cast_fu_4222_p1) - unsigned(tmp_62_9_cast_fu_4225_p1));
    x_assign_18_fu_4276_p2 <= std_logic_vector(unsigned(tmp_51_9_cast_fu_4261_p1) - unsigned(tmp_66_9_cast_fu_4272_p1));
    x_assign_19_fu_4323_p2 <= std_logic_vector(unsigned(tmp_40_cast_fu_4316_p1) - unsigned(tmp_62_cast_fu_4319_p1));
    x_assign_1_fu_3423_p2 <= std_logic_vector(unsigned(tmp_47_cast_fu_3407_p1) - unsigned(tmp_61_cast_fu_3419_p1));
    x_assign_20_fu_4370_p2 <= std_logic_vector(unsigned(tmp_51_cast_fu_4355_p1) - unsigned(tmp_66_cast_fu_4366_p1));
    x_assign_21_fu_4417_p2 <= std_logic_vector(unsigned(tmp_40_10_cast_fu_4410_p1) - unsigned(tmp_62_10_cast_fu_4413_p1));
    x_assign_22_fu_4464_p2 <= std_logic_vector(unsigned(tmp_51_10_cast_fu_4449_p1) - unsigned(tmp_66_10_cast_fu_4460_p1));
    x_assign_23_fu_4511_p2 <= std_logic_vector(unsigned(tmp_40_11_cast_fu_4504_p1) - unsigned(tmp_62_11_cast_fu_4507_p1));
    x_assign_24_fu_4558_p2 <= std_logic_vector(unsigned(tmp_51_11_cast_fu_4543_p1) - unsigned(tmp_66_11_cast_fu_4554_p1));
    x_assign_25_fu_4605_p2 <= std_logic_vector(unsigned(tmp_40_12_cast_fu_4598_p1) - unsigned(tmp_62_12_cast_fu_4601_p1));
    x_assign_26_fu_4652_p2 <= std_logic_vector(unsigned(tmp_51_12_cast_fu_4637_p1) - unsigned(tmp_66_12_cast_fu_4648_p1));
    x_assign_27_fu_4699_p2 <= std_logic_vector(unsigned(tmp_40_13_cast_fu_4692_p1) - unsigned(tmp_62_13_cast_fu_4695_p1));
    x_assign_28_fu_4746_p2 <= std_logic_vector(unsigned(tmp_51_13_cast_fu_4731_p1) - unsigned(tmp_66_13_cast_fu_4742_p1));
    x_assign_29_fu_4793_p2 <= std_logic_vector(unsigned(tmp_40_14_cast_fu_4786_p1) - unsigned(tmp_62_14_cast_fu_4789_p1));
    x_assign_2_fu_3470_p2 <= std_logic_vector(unsigned(tmp_40_1_cast_fu_3463_p1) - unsigned(tmp_62_1_cast_fu_3466_p1));
    x_assign_30_fu_4840_p2 <= std_logic_vector(unsigned(tmp_51_14_cast_fu_4825_p1) - unsigned(tmp_66_14_cast_fu_4836_p1));
    x_assign_3_fu_3518_p2 <= std_logic_vector(unsigned(tmp_51_1_cast_fu_3502_p1) - unsigned(tmp_66_1_cast_fu_3514_p1));
    x_assign_4_fu_3565_p2 <= std_logic_vector(unsigned(tmp_40_2_cast_fu_3558_p1) - unsigned(tmp_62_2_cast_fu_3561_p1));
    x_assign_5_fu_3613_p2 <= std_logic_vector(unsigned(tmp_51_2_cast_fu_3597_p1) - unsigned(tmp_66_2_cast_fu_3609_p1));
    x_assign_6_fu_3660_p2 <= std_logic_vector(unsigned(tmp_40_3_cast_fu_3653_p1) - unsigned(tmp_62_3_cast_fu_3656_p1));
    x_assign_7_fu_3708_p2 <= std_logic_vector(unsigned(tmp_51_3_cast_fu_3692_p1) - unsigned(tmp_66_3_cast_fu_3704_p1));
    x_assign_8_fu_3755_p2 <= std_logic_vector(unsigned(tmp_40_4_cast_fu_3748_p1) - unsigned(tmp_62_4_cast_fu_3751_p1));
    x_assign_9_fu_3803_p2 <= std_logic_vector(unsigned(tmp_51_4_cast_fu_3787_p1) - unsigned(tmp_66_4_cast_fu_3799_p1));
    x_assign_fu_3375_p2 <= std_logic_vector(unsigned(tmp_36_cast_fu_3368_p1) - unsigned(tmp_58_cast_fu_3371_p1));
    x_assign_s_fu_3850_p2 <= std_logic_vector(unsigned(tmp_40_5_cast_fu_3843_p1) - unsigned(tmp_62_5_cast_fu_3846_p1));

    -- yuv_frame_address0 assign process. --
    yuv_frame_address0_assign_proc : process(ap_reg_ppiten_pp0_it2, ap_sig_cseq_ST_pp1_stg1_fsm_11, ap_reg_ppiten_pp1_it0, ap_sig_cseq_ST_pp2_stg1_fsm_43, ap_reg_ppiten_pp2_it0, ap_sig_cseq_ST_pp2_stg2_fsm_44, ap_sig_cseq_ST_pp2_stg4_fsm_46, ap_sig_cseq_ST_pp2_stg3_fsm_45, ap_sig_cseq_ST_pp2_stg5_fsm_47, ap_sig_cseq_ST_pp1_stg2_fsm_12, ap_sig_cseq_ST_pp2_stg7_fsm_49, ap_sig_cseq_ST_pp2_stg6_fsm_48, ap_sig_cseq_ST_pp1_stg3_fsm_13, ap_sig_cseq_ST_pp1_stg4_fsm_14, ap_sig_cseq_ST_pp1_stg7_fsm_17, ap_sig_cseq_ST_pp1_stg0_fsm_10, ap_sig_cseq_ST_pp1_stg5_fsm_15, ap_sig_cseq_ST_pp1_stg6_fsm_16, ap_sig_cseq_ST_pp2_stg0_fsm_42, tmp_s_fu_1965_p1, tmp_11_fu_1986_p1, tmp_26_3_fu_2096_p1, tmp_26_5_fu_2182_p1, tmp_26_7_fu_2267_p1, tmp_26_9_fu_2353_p1, tmp_26_10_fu_2439_p1, tmp_26_12_fu_2525_p1, tmp_26_14_fu_2610_p1, tmp_17_1_fu_4917_p1, tmp_17_3_fu_5004_p1, tmp_17_5_fu_5087_p1, tmp_17_7_fu_5170_p1, tmp_17_9_fu_5253_p1, tmp_17_10_fu_5336_p1, tmp_17_12_fu_5419_p1, tmp_17_14_fu_5502_p1)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) then 
            yuv_frame_address0 <= tmp_s_fu_1965_p1(16 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg7_fsm_49))) then 
            yuv_frame_address0 <= tmp_17_14_fu_5502_p1(16 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg6_fsm_48))) then 
            yuv_frame_address0 <= tmp_17_12_fu_5419_p1(16 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg5_fsm_47))) then 
            yuv_frame_address0 <= tmp_17_10_fu_5336_p1(16 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg4_fsm_46))) then 
            yuv_frame_address0 <= tmp_17_9_fu_5253_p1(16 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg3_fsm_45))) then 
            yuv_frame_address0 <= tmp_17_7_fu_5170_p1(16 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg2_fsm_44))) then 
            yuv_frame_address0 <= tmp_17_5_fu_5087_p1(16 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg1_fsm_43) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it0))) then 
            yuv_frame_address0 <= tmp_17_3_fu_5004_p1(16 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg0_fsm_42))) then 
            yuv_frame_address0 <= tmp_17_1_fu_4917_p1(16 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg7_fsm_17))) then 
            yuv_frame_address0 <= tmp_26_14_fu_2610_p1(16 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg6_fsm_16))) then 
            yuv_frame_address0 <= tmp_26_12_fu_2525_p1(16 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg5_fsm_15))) then 
            yuv_frame_address0 <= tmp_26_10_fu_2439_p1(16 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg4_fsm_14))) then 
            yuv_frame_address0 <= tmp_26_9_fu_2353_p1(16 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg3_fsm_13))) then 
            yuv_frame_address0 <= tmp_26_7_fu_2267_p1(16 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg2_fsm_12))) then 
            yuv_frame_address0 <= tmp_26_5_fu_2182_p1(16 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg1_fsm_11) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0))) then 
            yuv_frame_address0 <= tmp_26_3_fu_2096_p1(16 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_10))) then 
            yuv_frame_address0 <= tmp_11_fu_1986_p1(16 - 1 downto 0);
        else 
            yuv_frame_address0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    -- yuv_frame_address1 assign process. --
    yuv_frame_address1_assign_proc : process(ap_sig_cseq_ST_pp1_stg1_fsm_11, ap_reg_ppiten_pp1_it0, ap_sig_cseq_ST_pp2_stg1_fsm_43, ap_reg_ppiten_pp2_it0, ap_sig_cseq_ST_pp2_stg2_fsm_44, ap_sig_cseq_ST_pp2_stg4_fsm_46, ap_sig_cseq_ST_pp2_stg3_fsm_45, ap_sig_cseq_ST_pp2_stg5_fsm_47, ap_sig_cseq_ST_pp1_stg2_fsm_12, ap_sig_cseq_ST_pp2_stg7_fsm_49, ap_sig_cseq_ST_pp2_stg6_fsm_48, ap_sig_cseq_ST_pp1_stg3_fsm_13, ap_sig_cseq_ST_pp1_stg4_fsm_14, ap_sig_cseq_ST_pp1_stg7_fsm_17, ap_sig_cseq_ST_pp1_stg0_fsm_10, ap_sig_cseq_ST_pp1_stg5_fsm_15, ap_sig_cseq_ST_pp1_stg6_fsm_16, ap_sig_cseq_ST_pp2_stg0_fsm_42, tmp_26_1_fu_2023_p1, tmp_26_2_fu_2075_p1, tmp_26_4_fu_2161_p1, tmp_26_6_fu_2246_p1, tmp_26_8_fu_2332_p1, tmp_26_s_fu_2418_p1, tmp_26_11_fu_2504_p1, tmp_26_13_fu_2589_p1, tmp_7_fu_4896_p1, tmp_17_2_fu_4983_p1, tmp_17_4_fu_5066_p1, tmp_17_6_fu_5149_p1, tmp_17_8_fu_5232_p1, tmp_17_s_fu_5315_p1, tmp_17_11_fu_5398_p1, tmp_17_13_fu_5481_p1)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg7_fsm_49))) then 
            yuv_frame_address1 <= tmp_17_13_fu_5481_p1(16 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg6_fsm_48))) then 
            yuv_frame_address1 <= tmp_17_11_fu_5398_p1(16 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg5_fsm_47))) then 
            yuv_frame_address1 <= tmp_17_s_fu_5315_p1(16 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg4_fsm_46))) then 
            yuv_frame_address1 <= tmp_17_8_fu_5232_p1(16 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg3_fsm_45))) then 
            yuv_frame_address1 <= tmp_17_6_fu_5149_p1(16 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg2_fsm_44))) then 
            yuv_frame_address1 <= tmp_17_4_fu_5066_p1(16 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg1_fsm_43) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it0))) then 
            yuv_frame_address1 <= tmp_17_2_fu_4983_p1(16 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg0_fsm_42))) then 
            yuv_frame_address1 <= tmp_7_fu_4896_p1(16 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg7_fsm_17))) then 
            yuv_frame_address1 <= tmp_26_13_fu_2589_p1(16 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg6_fsm_16))) then 
            yuv_frame_address1 <= tmp_26_11_fu_2504_p1(16 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg5_fsm_15))) then 
            yuv_frame_address1 <= tmp_26_s_fu_2418_p1(16 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg4_fsm_14))) then 
            yuv_frame_address1 <= tmp_26_8_fu_2332_p1(16 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg3_fsm_13))) then 
            yuv_frame_address1 <= tmp_26_6_fu_2246_p1(16 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg2_fsm_12))) then 
            yuv_frame_address1 <= tmp_26_4_fu_2161_p1(16 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg1_fsm_11) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0))) then 
            yuv_frame_address1 <= tmp_26_2_fu_2075_p1(16 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_10))) then 
            yuv_frame_address1 <= tmp_26_1_fu_2023_p1(16 - 1 downto 0);
        else 
            yuv_frame_address1 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    -- yuv_frame_ce0 assign process. --
    yuv_frame_ce0_assign_proc : process(ap_sig_bdd_440, ap_reg_ppiten_pp0_it1, ap_reg_ppiten_pp0_it2, ap_sig_cseq_ST_pp1_stg1_fsm_11, ap_reg_ppiten_pp1_it0, ap_sig_cseq_ST_pp2_stg1_fsm_43, ap_reg_ppiten_pp2_it0, ap_sig_cseq_ST_pp2_stg2_fsm_44, ap_sig_cseq_ST_pp2_stg4_fsm_46, ap_sig_cseq_ST_pp2_stg3_fsm_45, ap_sig_cseq_ST_pp2_stg5_fsm_47, ap_sig_cseq_ST_pp1_stg2_fsm_12, ap_sig_cseq_ST_pp2_stg7_fsm_49, ap_sig_cseq_ST_pp2_stg6_fsm_48, ap_sig_cseq_ST_pp1_stg3_fsm_13, ap_sig_cseq_ST_pp1_stg4_fsm_14, ap_sig_cseq_ST_pp1_stg7_fsm_17, ap_sig_cseq_ST_pp1_stg0_fsm_10, ap_sig_cseq_ST_pp1_stg5_fsm_15, ap_sig_cseq_ST_pp1_stg6_fsm_16, ap_sig_cseq_ST_pp2_stg0_fsm_42)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg1_fsm_11) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0)) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg1_fsm_43) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it0)) or ((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg2_fsm_44)) or ((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg4_fsm_46)) or ((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg3_fsm_45)) or ((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg5_fsm_47)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg2_fsm_12)) or ((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg7_fsm_49)) or ((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg6_fsm_48)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg3_fsm_13)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg4_fsm_14)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg7_fsm_17)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg5_fsm_15)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg6_fsm_16)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_10)) or ((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg0_fsm_42)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not((ap_sig_bdd_440 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)))))) then 
            yuv_frame_ce0 <= ap_const_logic_1;
        else 
            yuv_frame_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    -- yuv_frame_ce1 assign process. --
    yuv_frame_ce1_assign_proc : process(ap_sig_cseq_ST_pp1_stg1_fsm_11, ap_reg_ppiten_pp1_it0, ap_sig_cseq_ST_pp2_stg1_fsm_43, ap_reg_ppiten_pp2_it0, ap_sig_cseq_ST_pp2_stg2_fsm_44, ap_sig_cseq_ST_pp2_stg4_fsm_46, ap_sig_cseq_ST_pp2_stg3_fsm_45, ap_sig_cseq_ST_pp2_stg5_fsm_47, ap_sig_cseq_ST_pp1_stg2_fsm_12, ap_sig_cseq_ST_pp2_stg7_fsm_49, ap_sig_cseq_ST_pp2_stg6_fsm_48, ap_sig_cseq_ST_pp1_stg3_fsm_13, ap_sig_cseq_ST_pp1_stg4_fsm_14, ap_sig_cseq_ST_pp1_stg7_fsm_17, ap_sig_cseq_ST_pp1_stg0_fsm_10, ap_sig_cseq_ST_pp1_stg5_fsm_15, ap_sig_cseq_ST_pp1_stg6_fsm_16, ap_sig_cseq_ST_pp2_stg0_fsm_42)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg1_fsm_11) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0)) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg1_fsm_43) and (ap_const_logic_1 = ap_reg_ppiten_pp2_it0)) or ((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg2_fsm_44)) or ((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg4_fsm_46)) or ((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg3_fsm_45)) or ((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg5_fsm_47)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg2_fsm_12)) or ((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg7_fsm_49)) or ((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg6_fsm_48)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg3_fsm_13)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg4_fsm_14)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg7_fsm_17)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg5_fsm_15)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg6_fsm_16)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_10)) or ((ap_const_logic_1 = ap_reg_ppiten_pp2_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp2_stg0_fsm_42)))) then 
            yuv_frame_ce1 <= ap_const_logic_1;
        else 
            yuv_frame_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    yuv_frame_d0 <= gmem_addr_read_reg_5873;

    -- yuv_frame_we0 assign process. --
    yuv_frame_we0_assign_proc : process(ap_sig_bdd_440, ap_reg_ppiten_pp0_it1, ap_reg_ppiten_pp0_it2, ap_reg_ppstg_exitcond_reg_5864_pp0_it1)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not((ap_sig_bdd_440 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_5864_pp0_it1)))) then 
            yuv_frame_we0 <= ap_const_logic_1;
        else 
            yuv_frame_we0 <= ap_const_logic_0;
        end if; 
    end process;

end behav;
